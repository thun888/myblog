# 当有改动推送到master分支时，启动Action
name: 自动部署

on:
  push:
    branches:
      - main #2020年10月后github新建仓库默认分支改为main，注意更改

  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 检查分支
      uses: actions/checkout@v2
      with:
        ref: main #2020年10月后github新建仓库默认分支改为main，注意更改

    - name: Setup Node # 安装 Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "14.x"

    - name: Install Hexo # 安装 Hexo；更改时区
      run: |
        export TZ='Asia/Shanghai'

        npm install hexo-cli -g

    - name: Cache Modules # 缓存 Node 插件
      uses: actions/cache@v1
      id: cache-modules
      with:
        path: node_modules
        key: ${{runner.OS}}-${{hashFiles('**/package-lock.json')}}

    - name: Install Dependencies # 如果没有缓存或 插件有更新，则安装插件
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: | # **如果仓库里没有 package-lock.json，上传一下，npm ci 必须要有 package-lock.json**
        npm ci

    - name: Generate # 生成
      run: |
        hexo clean
        hexo g

    - name: 部署
      run: |
        git config --global user.name "thun888"
        git config --global user.email "2238342947@qq.com"
        git clone https://github.com/thun888/thun888.github.io.git .deploy_git
        # 此处务必用HTTPS链接。SSH链接可能有权限报错的隐患
        # =====注意.deploy_git前面有个空格=====
        # 这行指令的目的是clone博客静态文件仓库，防止Hexo推送时覆盖整个静态文件仓库，而是只推送有更改的文件
        hexo d

    - name: clear cache
      run: |
        curl https://purge.jsdelivr.net/gh/thun888/thun888.github.io@master/css/main.css
        curl https://purge.jsdelivr.net/gh/thun888/thun888.github.io@master/js/main.js

    - name: 通知
      run: |
        curl https://push.xuthus.cc/send/c9c54f0446e2559373adcedf05396cba?c=博客部署完成

    - name: get cache
      run: |
        curl https://cdn.jsdelivr.net/gh/thun888/thun888.github.io@master/css/main.css
        curl https://cdn.jsdelivr.net/gh/thun888/thun888.github.io@master/js/main.js
